using Microsoft.Extensions.Options;
using Steeltoe.Common.Discovery;
using System;
using System.Collections.Generic;
using System.Text;
using UWay.Skynet.Cloud.Nacos;

namespace Steeltoe.Discovery.Nacos.Discovery
{
    public class ThisServiceInstance : IServiceInstance
    {
        private IOptionsMonitor<NacosClientConfiguration> _instConfig;

        private NacosClientConfiguration InstConfig
        {
            get
            {
                return _instConfig.CurrentValue;
            }
        }
        public ThisServiceInstance(IOptionsMonitor<NacosClientConfiguration> optionAccs)
        {
            _instConfig = optionAccs;
        }

        #region Implementation of IServiceInstance

        /// <inheritdoc/>
        public string ServiceId { get; }

        /// <inheritdoc/>
        public string Host => InstConfig.ServerAddresses;

        /// <inheritdoc/>
        public int Port => InstConfig.Port;

        /// <inheritdoc/>
        public bool IsSecure => InstConfig.IsSecure;

        /// <inheritdoc/>
        public Uri Uri
        {
            get
            {
                string scheme = IsSecure ? "https" : "http";
                //int uriPort = IsSecure ? SecurePort : Port;
                var uri = new Uri(scheme + "://" + Host + ":" + Port.ToString());
                return uri;
            }
        }

        /// <inheritdoc/>
        public IDictionary<string, string> Metadata => InstConfig.Metadata;

        #endregion Implementation of IServiceInstance
    }
}
