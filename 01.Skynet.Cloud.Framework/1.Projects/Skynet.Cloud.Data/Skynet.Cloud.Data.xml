<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Skynet.Cloud.Data</name>
    </assembly>
    <members>
        <member name="T:UWay.Skynet.Cloud.Data.CodeGen.NamingConversion">
            <summary>
            命名约定
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CodeGen.NamingConversion.Default">
            <summary>
            缺省命名约定，类名和表名完全一致，如果表名中有' '或'-' 字符用'_'代替
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CodeGen.NamingConversion.Singular">
            <summary>
            缺省类名为单数原则
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.CodeGen.IEntityModel">
            <summary>
            创建实体的元数据类
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CodeGen.IEntityModel.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CodeGen.IEntityModel.QueryableName">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CodeGen.IEntityModel.Table">
            <summary>
            Table元数据
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CodeGen.IEntityModel.PrimaryKeys">
            <summary>
            主键成员集合
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CodeGen.IEntityModel.Members">
            <summary>
            成员集合
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CodeGen.IEntityModel.ManyToOnes">
            <summary>
            ManyToOne 成员集合
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CodeGen.IEntityModel.OneToMany">
            <summary>
            OneToMany 成员集合
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.CodeGen.INamingConversion">
            <summary>
            命名约定
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CodeGen.INamingConversion.QueryableName(System.String)">
            <summary>
            表名转集合名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CodeGen.INamingConversion.ClassName(System.String)">
            <summary>
            表名转类名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CodeGen.INamingConversion.FieldName(System.String)">
            <summary>
            列名转字段名
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CodeGen.INamingConversion.PropertyName(System.String)">
            <summary>
            列名属性名转
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CodeGen.INamingConversion.DataType(UWay.Skynet.Cloud.Data.Schema.IColumnSchema)">
            <summary>
            
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CodeGen.INamingConversion.ManyToOneName(UWay.Skynet.Cloud.Data.Schema.IRelationSchema)">
            <summary>
            
            </summary>
            <param name="fk"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Common.DateParts">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Year">
            <summary>
            年份
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Quarter">
            <summary>
            季度
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Month">
            <summary>
            月份
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Day">
            <summary>
            表示的日期为该月中的第几天
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Millisecond">
            <summary>
            毫秒
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Microsecond">
            <summary>
            微秒
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Nanosecond">
            <summary>
            纳秒
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Week">
            <summary>
            表示的日期是该年中的第几周
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.DayOfYear">
            <summary>
            表示的日期是该年中的第几天
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.DayOfWeek">
            <summary>
            表示的日期是星期几
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.TimeSpan">
            <summary>
            仅作为框架内部使用
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.DateParts.WorkDay">
            <summary>
            工作日
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Common.ISqlCommand">
            <summary>
            SqlCommand 接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Common.ISqlCommand.CommandText">
            <summary>
            SQL文本
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Common.ISqlCommand.Parameters">
            <summary>
            命名参数集合
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Common.ISqlCommand.ParameterValues">
            <summary>
            命名参数Value集合
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Common.MethodMapping">
            <summary>
            Linq 函数映射类，把成员操作映射到UWay.Skynet.Cloud.Data 所支持的Linq函数操作上
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Member``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            通过Lambda 得到Lambda函数内部的成员对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Member(System.Linq.Expressions.Expression{System.Func{System.Object}})">
            <summary>
            通过Lambda 得到Lambda函数内部的成员对象
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Lambda``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            得到UWay.Skynet.Cloud.Data Linq 所支持的Lambda表达式
            </summary>
            <typeparam name="TR"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Lambda``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            得到UWay.Skynet.Cloud.Data Linq 所支持的Lambda表达式
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="TR"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Lambda``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
            <summary>
            得到UWay.Skynet.Cloud.Data Linq 所支持的Lambda表达式
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TR"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Lambda``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
            <summary>
            得到UWay.Skynet.Cloud.Data Linq 所支持的Lambda表达式
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TR"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Lambda``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
            <summary>
            得到UWay.Skynet.Cloud.Data Linq 所支持的Lambda表达式
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TR"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Lambda``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})">
            <summary>
            得到UWay.Skynet.Cloud.Data Linq 所支持的Lambda表达式
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TR"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.MethodMapping.Lambda``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})">
            <summary>
            得到UWay.Skynet.Cloud.Data Linq 所支持的Lambda表达式
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TR"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.MethodMapping.Mappings">
            <summary>
            成员映射表
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Common.NamedParameter">
            <summary>
            参数信息
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.NamedParameter.#ctor(System.String,System.Type,UWay.Skynet.Cloud.Data.Common.SqlType)">
            <summary>
            构造函数
            </summary>
            <param name="name">名称</param>
            <param name="type">类型</param>
            <param name="sqlType">SQL类型</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Common.NamedParameter.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Common.NamedParameter.Type">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Common.NamedParameter.SqlType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.NamedParameter.ToString">
            <summary>
            转化String
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Common.OperationType">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.OperationType.Insert">
            <summary>
            插入
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.OperationType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.OperationType.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.OperationType.Select">
            <summary>
            查询
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Common.PagingHelper">
            <summary>
            分页帮助类
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.PagingHelper.rxColumns">
            <summary>
            查询列匹配方式
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.PagingHelper.rxOrderBy">
            <summary>
            排序列匹配方式
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts">
            <summary>
            分页SQL
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts.sql">
            <summary>
            SQL
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts.sqlCount">
            <summary>
            COUNT SQL
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts.sqlSelectRemoved">
            <summary>
            SQL SELECT Remove
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts.sqlOrderBy">
            <summary>
            sql排序
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts.sqlUnordered">
            <summary>
            SQL不排序
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts.sqlColumns">
            <summary>
            SQL列
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.PagingHelper.SplitSQL(System.String,UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts@)">
            <summary>
            分割SQL
            </summary>
            <param name="sql">主SQL</param>
            <param name="parts">分页SQL信息</param>
            <returns></returns>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Common.ParameterHelper.rxParamsPrefix">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.ParameterHelper.ProcessParams(System.String,System.Object[],System.Collections.Generic.List{System.Object})">
            <summary>
            
            </summary>
            <param name="_sql"></param>
            <param name="args_src"></param>
            <param name="args_dest"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Common.SqlFunctions.DateDiff(UWay.Skynet.Cloud.Data.Common.DateParts,System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="part"></param>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbConfiguration">
            <summary>
            数据库配置类，该类是整个框架的入口点
            </summary>
            <summary>
            LinqToSql 到ULinq的映射转换器类，把LinqToSql的实体映射翻译为ULinq的实体映射
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.BuildSQLExpressConnectionString(System.String)">
            <summary>
            构造SQLExpress Connection String
            </summary>
            <param name="databaseFile"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.BuildAccessConnectionString(System.String)">
            <summary>
            构造Access连接字符串
            </summary>
            <param name="databaseFile"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.BuildSqlCeConnectionString(System.String)">
            <summary>
            构造SqlCe连接字符串
            </summary>
            <param name="databaseFile"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.BuildSQLiteConnectionString(System.String)">
            <summary> 
            构造SQLite连接字符串
            </summary>
            <param name="databaseFile"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.BuildSQLiteConnectionString(System.String,System.String)">
            <summary>
            构造SQLite连接字符串
            </summary>
            <param name="databaseFile"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.BuildSQLiteConnectionString(System.String,System.Boolean)">
            <summary>
            构造SQLite连接字符串
            </summary>
            <param name="databaseFile"></param>
            <param name="failIfMissing"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.BuildSQLiteConnectionString(System.String,System.String,System.Boolean)">
            <summary>
            构造SQLite连接字符串
            </summary>
            <param name="databaseFile"></param>
            <param name="password"></param>
            <param name="failIfMissing"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.Option">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.Configure(System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Data.DbContextOption})">
            <summary>
            
            </summary>
            <param name="dbContextOptions"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.Configure(UWay.Skynet.Cloud.Data.DbContextOption)">
            <summary>
            通过connectionStringName对象创建DbConfiguration对象（可以用于配置文件中有多个数据库连接字符串配置）
            </summary>
            <param name="dbContextOption"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.Configure(System.String,System.String,System.Boolean)">
            <summary>
             通过connectionString和providerName创建DbConfiguration对象
            </summary>
            <param name="connectionString"></param>
            <param name="providerName"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureAccess(System.String,System.Boolean)">
            <summary>
            配置Access
            </summary>
            <param name="databaseFile"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureSqlCe35(System.String,System.Boolean)">
            <summary>
            配置SqlCe35
            </summary>
            <param name="databaseFile"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureSqlCe4(System.String,System.Boolean)">
            <summary>
            配置SqlCe4
            </summary>
            <param name="databaseFile"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureSQLExpress(System.String,System.Boolean)">
            <summary>
            配置SQLExpress
            </summary>
            <param name="databaseFile"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureSQLite(System.String,System.Boolean)">
            <summary>
            配置SQLite
            </summary>
            <param name="databaseFile"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureSQLite(System.String,System.String,System.Boolean)">
            <summary>
            配置SQLite
            </summary>
            <param name="databaseFile"></param>
            <param name="password"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureSQLite(System.String,System.Boolean,System.Boolean)">
            <summary>
            配置SQLite
            </summary>
            <param name="databaseFile"></param>
            <param name="failIfMissing"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureSQLite(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            配置SQLite
            </summary>
            <param name="databaseFile"></param>
            <param name="password"></param>
            <param name="failIfMissing"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureMySQL(System.String,System.Boolean)">
            <summary>
            配置MySQL
            </summary>
            <param name="connectionString"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureSqlServer(System.String,System.Boolean)">
            <summary>
            配置SqlServer
            </summary>
            <param name="connectionString"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureOracle(System.String,System.Boolean)">
            <summary>
            配置Oracle
            </summary>
            <param name="connectionString"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ConfigureOracleODP(System.String,System.Boolean)">
            <summary>
             配置Oracle ODP
            </summary>
            <param name="connectionString"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.Configure(System.Data.Common.DbConnection,System.String,System.String,System.Boolean)">
            <summary>
            通过DbConnection对象创建DbConfiguration对象
            </summary>
            <param name="conn"></param>
            <param name="isDefault"></param>
            <param name="entityAssmbly"></param>
            <param name="mappFile"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.Configure(System.Data.Common.DbConnection,System.Boolean)">
            <summary>
            通过DbConnection对象创建DbConfiguration对象
            </summary>
            <param name="conn"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.Configure(System.String,System.Data.Common.DbConnection,System.String,System.String,System.Boolean)">
            <summary>
            通过DbConnection对象创建DbConfiguration对象
            </summary>
            <param name="conn"></param>
            <param name="entityAssembly"></param>
            <param name="containerName"></param>
            <param name="mappingFile"></param>
            <param name="isDefault"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.Items">
            <summary>
            DbConfiguration字典
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbConfiguration.DefaultDbConfiguration">
            <summary>
            得到或设置缺省的DbConfiguration
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.Default">
            <summary>
            得到缺省的DbConfiguration
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.IsDefault">
            <summary>
            指示当前DbConfiguration是否是缺省的DbConfiguration
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.MakeDefault">
            <summary>
            把当前DbConfiguration标志为缺省DbConfiguration
            </summary>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.EnableValidateSchema">
            <summary>
            指示Schema校验开关是否打开，默认是关闭的，如果想打开请调用MakeEnableValidateSchema() 方法。
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.MakeEnableValidateSchema">
            <summary>
            Schema校验开关，调用该方法将打开，默认是关闭状态
            </summary>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.DbProviderName">
            <summary>
            DbProvider 名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.Name">
            <summary>
            DbConfiguration 名称，用来唯一标识一个DbConfiguration实例
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.DbProviderFactory">
            <summary>
            DbProvider 工厂
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.Driver">
            <summary>
            数据库驱动
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.Dialect">
            <summary>
            数据库方言
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.CreateDbContext">
            <summary>
            创建DbContext（必须先注册实体到数据表的映射后才可创建DbContext）
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.CreateDbConnection">
            <summary>
            创建DbConnection对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.CreateDatabase">
            <summary>
            创建数据库
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.DatabaseName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.CreateTables">
            <summary>
            创建数据表
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.DatabaseExists">
            <summary>
            判断数据库是否存在
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.DeleteDatabase">
            <summary>
            删除数据库
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfiguration.Schema">
            <summary>
            数据库Schema
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.SetSqlLogger(System.Func{Microsoft.Extensions.Logging.ILogger})">
            <summary>
            设置sql语句输出日志
            </summary>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.SetProperty(System.String,System.String)">
            <summary>
            设置配置属性
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.GetProperty(System.String,System.String)">
            <summary>
            得到配置属性
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddClass``1">
            <summary>
            注册实体到数据表的映射关系
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddClass(System.Type)">
            <summary>
            注册实体到数据表的映射关系
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddClass``1(System.Action{UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap{``0}})">
            <summary>
            注册实体到数据表的映射关系
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fnClassMap"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddClass(UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap)">
            <summary>
            注册实体到数据表的映射关系
            </summary>
            <param name="classMap"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.ValidateSchema">
            <summary>
            校验Schema
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.Plural(System.String)">
            <summary>
            把单数单词转化为复数单词
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.Singular(System.String)">
            <summary>
            把复数单词转换为单数单词
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.SetMappingConversion(UWay.Skynet.Cloud.Data.IMappingConversion)">
            <summary>
            设置缺省约定映射策略，比如ClassName到TableName的转换约定，字段或属性到列名的转换约定
            </summary>
            <param name="mappingConversion"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.SetClassNameToTalbeName(System.Func{System.String,System.String})">
            <summary>
            设置ClassName到TableName的转换函数
            </summary>
            <param name="fnClassNameToTalbeName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddFromAssemblyOf``1(System.Func{System.Type,System.Boolean})">
            <summary>
            批量注册指定类型T所在的程序集内符合特定条件的实体到数据表的映射关系
            </summary>
            <typeparam name="T"></typeparam>
            <param name="typeFilter"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddFromAssemblyOf``1">
            <summary>
            批量注册指定类型T所在的程序集内符合特定条件的实体到数据表的映射关系
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddFromAssembly(System.Reflection.Assembly,System.Func{System.Type,System.Boolean})">
            <summary>
            批量注册特定程序集内符合特定条件的实体到数据表的映射关系
            </summary>
            <param name="typeFilter"></param>
            <param name="asm"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddFile(System.String)">
            <summary>
            基于Xml配置文件来加载OR映射
            </summary>
            <param name="xmlFile"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddFile(System.IO.Stream)">
            <summary>
            基于Xml流来加载OR映射
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.AddMappingFile(System.String)">
            <summary>
            加载映射文件
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.GetClass(System.Type)">
            <summary>
            根据实体类型得到映射元数据，如果不存在则Throw ORMappingException.
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.GetClass``1">
            <summary>
            根据实体类型得到映射元数据，如果不存在则Throw ORMappingException.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.HasClass(System.Type)">
            <summary>
            判断指定的实体类型是否已经注册OR映射
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbConfiguration.HasClass``1">
            <summary>
            判断指定的实体类型是否已经注册OR映射
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.LinqToSql.ColumnAttribute.AutoSync">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbConfigurationInfo">
            <summary>
            数据库配置信息类
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfigurationInfo.Driver">
            <summary>
            得到或设置数据库驱动
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfigurationInfo.Dialect">
            <summary>
            得到或设置方言
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfigurationInfo.FuncRegistry">
            <summary>
            得到或设置函数注册表
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfigurationInfo.DbExpressionBuilder">
            <summary>
            得到或设置DbExpressionBuilder
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfigurationInfo.SqlBuilder">
            <summary>
            得到或设置SqlBuilder工厂
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfigurationInfo.ScriptGenerator">
            <summary>
            得到或设置ScriptGenerator工厂
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfigurationInfo.ScriptExecutor">
            <summary>
            得到或设置ScriptExecutor工厂
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConfigurationInfo.SchemaLoader">
            <summary>
            得到或设置SchemaLoader工厂
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbConnectionString">
            <summary>
            连接字信息
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConnectionString.ContainerName">
            <summary>
            连接名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConnectionString.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbConnectionString.Provider">
            <summary>
            提供者
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbContext">
            <summary>
            Db上下文
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContext.DbConfiguration">
            <summary>
            得到DbConfiguration对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContext.DbConfigurationName">
            <summary>
            DbConfiguration 名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContext.Connection">
            <summary>
            得到连接对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContext.DbHelper">
            <summary>
            得到DbHelper对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContext.SpHelper">
            <summary>
            得到存储过程助手对象
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbContext.#ctor(UWay.Skynet.Cloud.Data.DbConfiguration)">
            <summary>
            根据dbConfiguration 创建DbContext对象
            </summary>
            <param name="dbConfiguration"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbContext.#ctor(UWay.Skynet.Cloud.Data.DbContextOption)">
            <summary>
            根据dbConfigurationName 创建DbContext对象
            </summary>
            <param name="dbConfigurationName"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbContext.Set``1">
            <summary>
            得到对应的DbSet对象
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbContext.UsingTransaction(System.Action)">
            <summary>
            启用Ado.net事务
            </summary>
            <param name="action"></param>
            <param name="isolationLevel"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbContext.UsingTransaction(System.Action,System.Data.IsolationLevel)">
            <summary>
            启用Ado.net事务
            </summary>
            <param name="action"></param>
            <param name="isolationLevel"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbContext.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbContextAttribute">
            <summary>
            DbContext标签
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContextAttribute.DbConfigurationName">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbContextAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="dbConfigurationName"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbContextOption">
            <summary>
            上下文配置
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContextOption.Container">
            <summary>
            连接名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContextOption.Default">
            <summary>
            默认连接
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContextOption.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContextOption.Provider">
            <summary>
            实体程序集名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContextOption.MappingFile">
            <summary>
            实体程序集名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContextOption.ModuleAssemblyName">
            <summary>
            实体程序集名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbContextOption.LogggerFactory">
            <summary>
            日志工厂
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbHelper">
            <summary>
            数据库操作类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbHelper.Parameter(System.String,System.Object)">
            <summary>
            创建参数
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbHelper.ExecuteNonQueryAsync(System.String,System.Object,System.Boolean)">
            <summary>
            异步执行
            </summary>
            <param name="sql">执行语句</param>
            <param name="namedParameters">动态参数</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbHelper.ExecuteNonQuery(System.String,System.Object,System.Boolean)">
            <summary>
            同步执行
            </summary>
            <param name="sql">执行语句</param>
            <param name="namedParameters">动态参数</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbHelper.ExecuteReader(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询
            </summary>
            <param name="sql">执行语句</param>
            <param name="namedParameters">动态参数</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbHelper.ExecuteReaderAsync(System.String,System.Object,System.Boolean)">
            <summary>
            异步执行
            </summary>
            <param name="sql">执行语句</param>
            <param name="namedParameters">动态参数</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbHelper.ExecuteDataTable(System.String,System.Object,System.Boolean)">
            <summary>
            同步执行查询获取DataTable
            </summary>
            <param name="sql">执行语句</param>
            <param name="namedParameters">动态参数</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbSet">
            <summary>
            DbSet的增、删、改的扩展类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbSet.Insert``2(UWay.Skynet.Cloud.Data.IRepository{``0},System.Object,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            插入并根据Lambda表达式返回特定信息
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="repository"></param>
            <param name="instance">支持PO、POCO、IDictionary、IDictionaryOfKV, NameValueCollection 类型</param>
            <param name="resultSelector"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbSet.Update``2(UWay.Skynet.Cloud.Data.IRepository{``0},System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            更新并根据Lambda表达式返回特定信息
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="repository"></param>
            <param name="instance">支持PO、POCO、IDictionary、IDictionaryOfKV, NameValueCollection 类型</param>
            <param name="updateCheck">除了id条件之外的附加条件</param>
            <param name="resultSelector"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbSet.Update``1(UWay.Skynet.Cloud.Data.IRepository{``0},System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="instance">支持PO、POCO、IDictionary、IDictionaryOfKV, NameValueCollection 类型</param>
            <param name="updateCheck">除了id条件之外的附加条件</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbSet.Delete``1(UWay.Skynet.Cloud.Data.IRepository{``0},System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            删除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="instance"></param>
            <param name="deleteCheck">除了id条件之外的附加条件</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbSet.Delete``1(UWay.Skynet.Cloud.Data.IRepository{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            删除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbSet.Batch``2(UWay.Skynet.Cloud.Data.IRepository{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{UWay.Skynet.Cloud.Data.IRepository{``0},``1,System.Int32}})">
            <summary>
            根据Lambda表达式对实体集合进行批量操作
            </summary>
            <typeparam name="U"></typeparam>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="repository"></param>
            <param name="instances"></param>
            <param name="fnOperation"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbSet`1.Mapping">
            <summary>
            IEntityModel接口对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbSet`1.DbContext">
            <summary>
            IDbContext接口对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbSet`1.EntityType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DbSet`1.Insert(System.Object)">
            <summary>
            向数据库中插入一条T型记录
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Dialect.Dialect">
            <summary>
            数据库方言
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Abs">
            <summary>
            返回64位有符号整数的绝对值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Acos">
            <summary>
            返回余弦值为指定数字的角度
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Asin">
            <summary>
            返回正弦值为指定数字的角度
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Atan">
            <summary>
            返回正切值为指定数字的角度
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Atan2">
            <summary>
            返回正切值为两个指定数字的商的角度
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Ceiling">
            <summary>
            返回大于或等于指定的双经度浮点数的最小整数值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Cos">
            <summary>
            返回指定角度的余弦值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Cosh">
            <summary>
            返回指定角度的双曲余弦值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Exp">
            <summary>
            返回e的指定次幂
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Floor">
            <summary>
            返回小于或等于指定的双经度浮点数的最大整数值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Log">
            <summary>
            返回指定数字的自然对手（底为e）
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Log10">
            <summary>
            返回指定数字以10为底的对数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Power">
            <summary>
            返回指定数字的指定次幂
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Round">
            <summary>
            双精度浮点值按照指定小数位数舍入
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Sign">
            <summary>
            返回一个值，表示64位有符号整数的符号
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Sin">
            <summary>
            返回指定角度的正弦值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Sinh">
            <summary>
            返回指定角度的双曲正弦值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Sqrt">
            <summary>
            返回指定数字的平方根
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Tan">
            <summary>
            返回指定角度的正切值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Tanh">
            <summary>
            返回指定角度的双曲正切值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IMathFunctions.Truncate">
            <summary>
            返回指定双精度浮点数的整数部分
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Dialect.Function.IDecimalFunctions.Remainder">
            <summary>
            计算两个 System.Decimal 值相除后的余数
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Dialect.ScalarSubqueryRewriter">
            <summary>
            SQLCE doesn't understand scalar subqueries (???) but it does understand cross/outer apply.
            Convert scalar subqueries into OUTER APPLY
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Driver.AbstractDriver">
            <summary>
            抽象驱动类
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Driver.AbstractDriver.Render">
            <summary>
            SQL生成工厂
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Driver.AbstractDriver.NamedPrefix">
            <summary>
            参数前缀
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Driver.AbstractDriver.AllowsMultipleOpenReaders">
            <summary>
            是否允许多重读取
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Driver.AbstractDriver.AddParameter(System.Data.Common.DbCommand,UWay.Skynet.Cloud.Data.Common.NamedParameter,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <param name="parameter"></param>
            <param name="value"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Driver.AbstractDriver.InitializeParameter(System.Data.IDbDataParameter,UWay.Skynet.Cloud.Data.Common.NamedParameter,System.Object)">
            <summary>
            初始化参数
            </summary>
            <param name="p">数据参数</param>
            <param name="parameter">传入参数</param>
            <param name="value">参数值</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Driver.AbstractDriver.ConvertDBTypeToNativeType(System.Data.IDbDataParameter,UWay.Skynet.Cloud.Data.DBType)">
            <summary>
            本地类型转化为数据库类型
            </summary>
            <param name="p"></param>
            <param name="dbType"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Driver.AbstractDriver.GetParameterValues(System.Data.Common.DbCommand,System.Object[])">
            <summary>
            获取参数值
            </summary>
            <param name="command">数据库命令行</param>
            <param name="paramValues">参数值</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Driver.IDriver">
            <summary>
            驱动接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Driver.IDriver.NamedPrefix">
            <summary>
            SQL参数前缀
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Driver.IDriver.Render">
            <summary>
            SQL生成工厂
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Driver.IDriver.AllowsMultipleOpenReaders">
            <summary>
            是否允许多层读取
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Driver.IDriver.AddParameter(System.Data.Common.DbCommand,UWay.Skynet.Cloud.Data.Common.NamedParameter,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="command">数据库执行命令</param>
            <param name="parameter">参数信息</param>
            <param name="value">参数值</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Driver.IDriver.AddParameters(System.Data.Common.DbCommand,System.Object)">
            <summary>
            
            </summary>
            <param name="cmd">数据库执行命令</param>
            <param name="namedParameters">参数实体</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Driver.IDriver.CreateCommand(System.Data.Common.DbConnection,System.String,System.Object)">
            <summary>
            创建数据库执行命令
            </summary>
            <param name="conn">数据库连接</param>
            <param name="sql">执行SQL</param>
            <param name="namedParameters">参数信息</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Driver.IDriver.BuildPageQuery(System.Int64,System.Int64,UWay.Skynet.Cloud.Data.Common.PagingHelper.SQLParts,System.Object)">
            <summary>
            构建分页查询
            </summary>
            <param name="skip">开始行数</param>
            <param name="take">获取行数</param>
            <param name="parts">SQL分页信息</param>
            <param name="namedParameters">参数</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Driver.OracleDriver">
            <summary>
            Oracle驱动基类
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Driver.OracleODPDriver">
            <summary>
            Oracle 驱动
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ConcurrencyException">
            <summary>
            并发操作异常
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Exceptions.DbExceptionContextInfo">
            <summary>
            Collect data of an <see cref="!:DatabaseException"/> to be converted.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Exceptions.DbExceptionContextInfo.SqlException">
            <summary>
            The <see cref="T:System.Data.Common.DbException"/> to be converted.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Exceptions.DbExceptionContextInfo.Message">
            <summary>
            An optional error message.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Exceptions.DbExceptionContextInfo.Sql">
            <summary>
            The SQL that generate the exception
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Exceptions.DbExceptionContextInfo.EntityName">
            <summary>
            Optional EntityName where available in the original exception context.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Exceptions.DbExceptionContextInfo.EntityId">
            <summary>
            Optional EntityId where available in the original exception context.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Exceptions.ISQLExceptionConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Exceptions.ISQLExceptionConverter.Convert(UWay.Skynet.Cloud.Data.Exceptions.DbExceptionContextInfo)">
            <summary> 
            Convert the given <see cref="T:System.Data.Common.DbException"/> into custom Exception. 
            </summary>
            <param name="dbExceptionContext">Available information during exception throw.</param>
            <returns> The resulting Exception to throw. </returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.MappingException">
            <summary>
            OR 映射异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.MappingException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.MappingException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IDbContext">
            <summary>
            Db上下文接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbContext.DbConfigurationName">
            <summary>
            DbConfiguration Name
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbContext.DbConfiguration">
            <summary>
            得到DbConfiguration对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbContext.Connection">
            <summary>
            得到连接对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbContext.DbHelper">
            <summary>
            得到DbHelper对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbContext.SpHelper">
            <summary>
            得到存储过程助手对象
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbContext.Set``1">
            <summary>
            得到对应的DbSet对象
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbContext.Set(System.Type)">
            <summary>
            得到对应的DbSet对象
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbContext.UsingTransaction(System.Action)">
            <summary>
            启用Ado.net事务
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbContext.UsingTransaction(System.Action,System.Data.IsolationLevel)">
            <summary>
            启用Ado.net事务
            </summary>
            <param name="action"></param>
            <param name="isolationLevel"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IDbHelper">
            <summary>
            SqlHelper 接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbHelper.DbConfiguration">
            <summary>
            得到DbConfiguration对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbHelper.Connection">
            <summary>
            得到连接对象
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecuteNonQuery(System.String,System.Object,System.Boolean)">
            <summary>
            执行更新
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecuteNonQueryAsync(System.String,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="namedParameters"></param>
            <param name="isAutoClose"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecuteReader(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询并返回DataReader
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecuteReaderAsync(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询并返回DataReader
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数</param>
            <param name="isAutoClose">是否自动关闭连接，使用事务时设置不自动关闭</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecuteDataTable(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询并返回DataTable
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数</param>
            <param name="isAutoClose">是否自动关闭连接，使用事务时设置不自动关闭</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecuteDataSet(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询并返回DataSet
            </summary>
            <param name="sql"></param>
            <param name="namedParameters">参数</param>
            <param name="isAutoClose">是否自动关闭连接，使用事务时设置不自动关闭</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecuteScalar(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询并返回首行首列
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数</param>
            <param name="isAutoClose">是否自动关闭连接，使用事务时设置不自动关闭</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecuteScalarAsync(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询并返回首行首列
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数</param>
            <param name="isAutoClose">是否自动关闭连接，使用事务时设置不自动关闭</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecutePage(System.String,System.Int64,System.Int64,System.Object,System.Boolean)">
            <summary>
            执行分页查询
            </summary>
            <param name="sql">SQL语句</param>
            <param name="skip">起始行</param>
            <param name="take">获取行</param>
            <param name="nameparameters">参数</param>
            <param name="isAutoClose">是否自动关闭连接，使用事务时设置不自动关闭</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbHelper.ExecutePage``1(System.String,System.Int64,System.Int64,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="skip"></param>
            <param name="take"></param>
            <param name="nameparameters"></param>
            <param name="isAutoClose"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IDbSet">
            <summary>
            表示用于执行插入、读取、更新和删除操作的类型化实体集，对实体集的所有增、删、改、查操作会立即同步到数据库对应的表中
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbSet.Connection">
            <summary>
            得到连接对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbSet.Mapping">
            <summary>
            实体映射元数据
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbSet.DbContext">
            <summary>
            得到DbSet关联的DbContext对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbSet.SqlText">
            <summary>
            得到Linq表达式翻译后的参数化SQL语句
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IDbSet.ExecutePlan">
            <summary>
            得到Linq表达式的执行计划（包含SQL语句、参数、数据访问、投影信息等，该信息在调试ULinq时非常有用）
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbSet.Include(System.String)">
            <summary>
            立即加载针对特定关系检索的对象。
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbSet.Include(System.Reflection.MemberInfo)">
            <summary>
            立即加载针对特定关系检索的对象。
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IDbSet`1">
            <summary>
            表示用于执行插入、读取、更新和删除操作的类型化实体集，对实体集的所有增、删、改、查操作会立即同步到数据库对应的表中
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbSet`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            立即加载针对特定关系检索的对象。
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IDbSet`1.IncludeWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            立即加载针对特定关系检索的对象。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IMappingConversion">
            <summary>
            缺省约定映射策略，比如ClassName到TableName的转换约定，字段或属性到列名的转换约定
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IMappingConversion.TableName(System.String)">
            <summary>
            类名转表名
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IMappingConversion.ColumnName(System.String)">
            <summary>
            字段或属性转列名
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Inflector">
            <summary>
            单复数类型互相转换类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Inflector.Plural(System.String)">
            <summary>
            单数转复数
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Inflector.Singular(System.String)">
            <summary>
            复数转单数
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.InternalDbContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.InternalDbContext.GetExecutionPlan(System.Linq.Expressions.Expression)">
            <summary>
            查询执行计划
            </summary>
            <param name="expression">LINQ 查询表达式</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.InternalDbContext.Find(System.Linq.Expressions.Expression,System.Collections.Generic.IList{System.Linq.Expressions.ParameterExpression},System.Type)">
            <summary>
             寻找数据源供应商
            </summary>
            <param name="expression">查询表达式</param>
            <param name="parameters">参数列表</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IReqository">
            <summary>
            仓储接口
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:UWay.Skynet.Cloud.Data.IReqository.Get(System.Object)" -->
        <member name="M:UWay.Skynet.Cloud.Data.IReqository.Insert(System.Object)">
            <summary>
            插入
            </summary>
            <param name="instance">支持PO、POCO、IDictionary、IDictionaryOfKV, NameValueCollection 类型</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IReqository.Update(System.Object)">
            <summary>
            更新
            </summary>
            <param name="instance">支持PO、POCO、IDictionary、IDictionaryOfKV, NameValueCollection 类型</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IReqository.Delete(System.Object)">
            <summary>
            删除
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IRepository`1">
            <summary>
            泛型仓储接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IRepository`1.Insert``1(System.Object,System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            插入并根据Lambda表达式返回特定信息
            </summary>
            <typeparam name="S"></typeparam>
            <param name="instance">支持PO、POCO、IDictionary、IDictionaryOfKV, NameValueCollection 类型</param>
            <param name="resultSelector"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IRepository`1.Update(System.Object,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            更新
            </summary>
            <param name="instance">支持PO、POCO、IDictionary、IDictionaryOfKV, NameValueCollection 类型</param>
            <param name="updateCheck">除了id条件之外的附加条件</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IRepository`1.Update``1(System.Object,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            更新并根据Lambda表达式返回特定信息
            </summary>
            <param name="instance">支持PO、POCO、IDictionary、IDictionaryOfKV, NameValueCollection 类型</param>
            <param name="updateCheck">除了id条件之外的附加条件</param>
            <param name="resultSelector"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IRepository`1.Delete(System.Object,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            删除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="deleteCheck">除了id条件之外的附加条件</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IRepository`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            删除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IRepository`1.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{UWay.Skynet.Cloud.Data.IRepository{`0},``0,System.Int32}})">
            <summary>
            根据Lambda表达式对实体集合进行批量操作
            </summary>
            <param name="instances"></param>
            <param name="fnOperation"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IRepository`1.Get(System.Object)">
            <summary>
            通过实体Id获取对应的实体，id可以是单Id也可以是联合Id，如果是联合Id那么以数组的形式作为参数
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IUnitOfWork">
            <summary>
            工作单元接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IUnitOfWork.DbConfigurationName">
            <summary>
            DbConfigurationName
            </summary>
            <remarks>
            用DbConfigurationName标致不同的UnitOfWork,目的是为了支持多数据库
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IUnitOfWork.CreateRepository``1">
            <summary>
            创建仓储
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IUnitOfWork.UsingTransaction(System.Action)">
            <summary>
            启用Ado.net事务
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.IUnitOfWork.UsingTransaction(System.Action,System.Data.IsolationLevel)">
            <summary>
            启用Ado.net事务
            </summary>
            <param name="action"></param>
            <param name="isolationLevel"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Linq.Expressions.Aggregator.GetAggregator(System.Type,System.Type)">
            <summary>
            Get a function that coerces a sequence of one type into another type.
            This is primarily used for aggregators stored in ProjectionExpression's, which are used to represent the 
            final transformation of the entire result set of a query.
            </summary>
            <param name="expectedType"></param>
            <param name="actualType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.DbExpressionComparer">
            <summary>
            Determines if two expressions are equivalent. Supports DbExpression nodes.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.DbExpressionReplacer">
            <summary>
            Replaces references to one specific instance of an expression node with another node.
            Supports DbExpression nodes
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.DbExpressionType">
            <summary>
            Extended node types for custom expressions
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.AliasedExpression">
            <summary>
            A base class for expressions that declare table aliases.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.TableExpression">
            <summary>
            A custom expression node that represents a table reference in a SQL query
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.EntityExpression">
            <summary>
            An expression node that introduces an entity mapping.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ColumnExpression">
            <summary>
            A custom expression node that represents a reference to a column in a SQL query
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.TableAlias">
            <summary>
            An alias for a table.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ColumnDeclaration">
            <summary>
            A declaration of a column in a SQL SELECT expression
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.OrderType">
            <summary>
            An SQL OrderBy order type 
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.OrderExpression">
            <summary>
            A pairing of an expression and an order type for use in a SQL Order By clause
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.SelectExpression">
            <summary>
            A custom expression node used to represent a SQL SELECT expression
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.JoinExpression">
            <summary>
            A SQL join clause expression
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.OuterJoinedExpression">
            <summary>
            A wrapper around and expression that is part of an outer joined projection
            including a test expression to determine if the expression ought to be considered null.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.SubqueryExpression">
            <summary>
            An base class for SQL subqueries.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ScalarExpression">
            <summary>
            A SQL scalar subquery expression:
              exists(select x from y where z)
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ExistsExpression">
            <summary>
            A SQL Exists subquery expression.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.InExpression">
            <summary>
            A SQL 'In' subquery:
              expr in (select x from y where z)
              expr in (a, b, c)
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.AggregateExpression">
            <summary>
            An SQL Aggregate expression:
                MIN, MAX, AVG, COUNT
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.IsNullExpression">
            <summary>
            Allows is-null tests against value-types like int and float
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ProjectionExpression">
            <summary>
            A custom expression representing the construction of one or more result objects from a 
            SQL select expression
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.DbExpressionVisitor">
            <summary>
            An extended expression visitor including custom DbExpression nodes
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.AggregateChecker">
            <summary>
            Determines if a SelectExpression contains any aggregate expressions
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.AggregateRewriter">
            <summary>
            Rewrite aggregate expressions, moving them into same select expression that has the group-by clause
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ClientJoinedProjectionRewriter">
            <summary>
            rewrites nested projections into client-side joins
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ClientJoinedProjectionRewriter.QueryDuplicator">
            <summary>
            Duplicate the query expression by making a copy with new table aliases
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ColumnMapper">
            <summary>
            Rewrite all column references to one or more aliases to a new single alias
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ProjectedColumns">
            <summary>
            Result from calling ColumnProjector.ProjectColumns
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ColumnProjector">
            <summary>
            Splits an expression into two parts
              1) a list of column declarations for sub-expressions that must be evaluated on the server
              2) a expression that describes how to combine/project the columns back together into the correct result
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ColumnProjector.Nominator">
            <summary>
            Nominator is a class that walks an expression tree bottom up, determining the set of 
            candidate expressions that are possible columns of a select expression
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.CrossApplyRewriter">
            <summary>
            Attempts to rewrite cross-apply and outer-apply joins as inner and left-outer joins
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.CrossJoinIsolator">
            <summary>
            Isolates cross joins from other types of joins using nested sub queries
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.CrossJoinRewriter">
            <summary>
            Attempt to rewrite cross joins as inner joins
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.TableAliasGatherer">
            <summary>
             returns the set of all aliases produced by a query source
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.OrderByRewriter">
            <summary>
            Moves order-bys to the outermost select if possible
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Linq.Expressions.OrderByRewriter.PrependOrderings(System.Collections.Generic.IList{UWay.Skynet.Cloud.Data.Linq.Expressions.OrderExpression})">
            <summary>
            Add a sequence of order expressions to an accumulated list, prepending so as
            to give precedence to the new expressions over any previous expressions
            </summary>
            <param name="newOrderings"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Linq.Expressions.OrderByRewriter.RebindOrderings(System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Data.Linq.Expressions.OrderExpression},UWay.Skynet.Cloud.Data.Linq.Expressions.TableAlias,System.Collections.Generic.HashSet{UWay.Skynet.Cloud.Data.Linq.Expressions.TableAlias},System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Data.Linq.Expressions.ColumnDeclaration})">
            <summary>
            Rebind order expressions to reference a new alias and add to column declarations if necessary
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.QueryBinder">
            <summary>
            Converts LINQ query operators to into custom DbExpression's
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.RedundantColumnRemover">
            <summary>
            Removes duplicate column declarations that refer to the same underlying column
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.RedundantJoinRemover">
            <summary>
            Removes joins expressions that are identical to joins that already exist
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.RedundantSubqueryRemover">
            <summary>
            Removes select expressions that don't add any additional semantic value
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ReferencedAliasGatherer">
            <summary>
             returns the set of all aliases produced by a query source
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.ReferencedColumnGatherer">
            <summary>
            Gathers all columns referenced by the given expression
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.RelationshipBinder">
            <summary>
            Translates accesses to relationship members into projections or joins
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.SingletonProjectionRewriter">
            <summary>
            Rewrites nested singleton projection into server-side joins
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.SkipToRowNumberRewriter">
            <summary>
            Rewrites take &amp; skip expressions into uses of TSQL row_number function
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Expressions.SubqueryRemover">
            <summary>
            Removes one or more SelectExpression's by rewriting the expression tree to not include them, promoting
            their from clause expressions and rewriting any column expressions that may have referenced them to now
            reference the underlying data directly.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:UWay.Skynet.Cloud.Data.Linq.Expressions.ThreeTopPagerRewriter" -->
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Translation.ExecutionBuilder.OuterParameterizer">
            <summary>
            columns referencing the outer alias are turned into special named-value parameters
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.ExpressionWriter">
            <summary>
            Writes out an expression tree in a C#-ish syntax
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Linq.IfWhereCondition.IfWhere``1(System.Linq.IQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
             <summary>
             Where 扩展，当满足conditon条件时则Append Where条件
             </summary>
             <typeparam name="T">查询类型</typeparam>
             <param name="query"><see cref="T:System.Linq.IQueryable"/></param>
             <param name="codition">条件</param>
             <param name="where">查询条件</param>
             <returns><see cref="T:System.Linq.IQueryable"/></returns>
             <example>
             <code><![CDATA[
              var query = this.CreateQuery<CollectorInfo>();
            
             query = query.IfWhere(!string.IsNullOrEmpty(collectorCode), c => c.CollectorCode == collectorCode)
                 .IfWhere(type>0 ,c => c.Type == type )
                 .IfWhere(!string.IsNullOrEmpty(blueTooth),c => c.BlueTooth == blueTooth)
                 .Paging(paging);
             ]]>
             </code>
             </example>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.IDeferLoadable">
            <summary>
            Common interface for controlling defer-loadable types
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.DeferredList`1">
            <summary>
            A list implementation that is loaded the first time the contents are examined
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.ExpressionComparer">
            <summary>
            Compare two expressions to determine if they are equivalent
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.ExpressionReplacer">
            <summary>
            Replaces references to one specific instance of an expression node with another node
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.Grouping`2">
            <summary>
            Simple implementation of the IGrouping interface
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TElement"></typeparam>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.MostRecentlyUsedCache`1">
            <summary>
            Implements a cache over a most recently used list
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.PartialEvaluator">
            <summary>
            Rewrites an expression tree so that locally isolatable sub-expressions are evaluated and converted into ConstantExpression nodes.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Linq.Internal.PartialEvaluator.Eval(System.Linq.Expressions.Expression)">
            <summary>
            Performs evaluation or replacement of independent sub-trees
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Linq.Internal.PartialEvaluator.Eval(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})">
            <summary>
            Performs evaluation and replacement of independent sub-trees
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <param name="fnCanBeEvaluated">A function that decides whether a given expression node can be part of the local function.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.PartialEvaluator.SubtreeEvaluator">
            <summary>
            Evaluates &amp; replaces sub-trees when first candidate is reached (top-down)
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.PartialEvaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.StrongDelegate">
            <summary>
            Make a strongly-typed delegate to a weakly typed method (one that takes single object[] argument)
            (up to 8 arguments)
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Linq.Internal.StrongDelegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)">
            <summary>
            Create a strongly typed delegate over a method with a weak signature
            </summary>
            <param name="delegateType">The strongly typed delegate's type</param>
            <param name="target"></param>
            <param name="method">Any method that takes a single array of objects and returns an object.</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Linq.Internal.StrongDelegate.CreateDelegate(System.Type,System.Func{System.Object[],System.Object})">
            <summary>
            Create a strongly typed delegate over a Func delegate with weak signature
            </summary>
            <param name="delegateType"></param>
            <param name="fn"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.TypedSubtreeFinder">
            <summary>
            Finds the first sub-expression that is of a specified type
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.Internal.ReflectionHelper">
            <summary>
            Type related helper methods
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.QueryCache">
            <summary>
            Keeps a cache of compiled queries.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Linq.QueryCompiler">
            <summary>
            Creates a reusable, parameterized representation of a query that caches the execution plan
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ManyToOneAttribute">
            <summary>
            多对一
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.MappingConversion">
            <summary>
            缺省约定映射策略类，比如ClassName到TableName的转换约定，字段或属性到列名的转换约定
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.MappingConversion.Default">
            <summary>
            缺省策略，表示类名和表名完全一致，字段或属性的名称和列名完全一致
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.MappingConversion.Plural">
            <summary>
            表名复数策略，字段或属性的名称和列名完全一致
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ProxyMappingConversion">
            <summary>
            约定映射代理类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ProxyMappingConversion.#ctor(System.Func{System.String,System.String},System.Func{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="fnTableName"></param>
            <param name="fnColumnName"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ProxyMappingConversion.#ctor(System.Func{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="fnTableName"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ProxyMappingConversion.TableName(System.String)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ProxyMappingConversion.ColumnName(System.String)">
            <summary>
            
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap">
            <summary>
            实体关系映射类
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap.EntityType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1">
            <summary>
            实体关系映射类
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.TableName(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            忽略成员映射
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.Ignore(System.Reflection.MemberInfo)">
            <summary>
            忽略成员映射
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.Id(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置主键
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.SequenceId(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置序列主键
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.Column(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置列
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.Column(System.Reflection.MemberInfo)">
            <summary>
            设置列
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.Version(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置版本列
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.Version(System.Reflection.MemberInfo)">
            <summary>
            设置列
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.ComputedColumn(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置计算列
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.OneToMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置一对多映射关系
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.OneToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置一对一映射关系
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置多对一映射关系
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.AssociationExpression`3">
            <summary>
            关系映射表达式
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
            <typeparam name="TAssociatonExpression"></typeparam>
            <typeparam name="TAssociationAttribute"></typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.AssociationExpression`3.ThisKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            设置ThisKey member
            </summary>
            <param name="fnMember"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.AssociationExpression`3.OtherKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})">
            <summary>
            设置OtherKey member
            </summary>
            <param name="fnOtherKeyMember"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.OneToManyExpression`1">
            <summary>
            一对多映射表达式
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.OneToOneExpression`1">
            <summary>
            一对一映射表达式
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ClassMap`1.ManyToOneExpression`1">
            <summary>
            多对一映射表达式
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression">
            <summary>
             Column映射表达式
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression.Required">
            <summary>
            设置为Required
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression`2">
            <summary>
            Column映射表达式
            </summary>
            <typeparam name="TColumnAttribute"></typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression`2.ColumnName(System.String)">
            <summary>
            设置列名
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression`2.Alias(System.String)">
            <summary>
            设置列的别名
            </summary>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression`2.DbType(UWay.Skynet.Cloud.Data.DBType)">
            <summary>
            设置数据类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression`2.Length(System.Int32)">
            <summary>
            设置长度
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression`2.Precision(System.Byte)">
            <summary>
            设置precision
            </summary>
            <param name="precision"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ColumnExpression`2.Scale(System.Byte)">
            <summary>
            设置scale
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.ComputedColumnExpressison">
            <summary>
            计算列映射表达式
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.ComputedColumnExpressison.Required">
            <summary>
            设置为Required
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.IdExpression">
            <summary>
            主键映射表达式
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.IdExpression.DbGenerated">
            <summary>
            设置主键是否为数据库自动生成的
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.MemberExpression`2">
            <summary>
            成员映射表达式
            </summary>
            <typeparam name="TAttribute"></typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.MemberExpression`2.Storate(System.String)">
            <summary>
            sets a private storage field to hold the value from a column.
            </summary>
            <param name="storage"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.SequenceExpression">
            <summary>
            序列表达式
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.SequenceExpression.SequenceName(System.String)">
            <summary>
            设置序列名称
            </summary>
            <param name="sequenceName"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.TableExpression">
            <summary>
            Table 映射表达式
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.TableExpression.Readonly">
            <summary>
            设置Table为只读的
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.TableExpression.Schema(System.String)">
            <summary>
            设置Table的Schema
            </summary>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.TableExpression.Database(System.String)">
            <summary>
            设置Table的DatabaseName
            </summary>
            <param name="databaseName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.TableExpression.Server(System.String)">
            <summary>
            设置Database的Server
            </summary>
            <param name="serverName"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.Fluent.VersionExression">
            <summary>
            版本映射表达式
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.Fluent.VersionExression.Required">
            <summary>
            设置为Required
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping">
            <summary>
            实体Mapping元数据接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.ServerName">
            <summary>
            得到或设置服务器名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.DatabaseName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.Schema">
            <summary>
            Schema
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.EntityType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.Members">
            <summary>
            实体成员映射元数据集合
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.PrimaryKeys">
            <summary>
            主键映射元数据
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.Version">
            <summary>
            版本映射元数据
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.IEntityMapping.Get(System.Reflection.MemberInfo)">
            <summary>
            获取成员映射元数据
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping">
            <summary>
            实体Member 映射元数据接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.Member">
            <summary>
            实体成员
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.StorageMember">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.SqlType">
            <summary>
            SqlType
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.RelatedEntityType">
            <summary>
            关联实体类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.Entity">
            <summary>
            实体元数据
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.RelatedEntity">
            <summary>
            关联实体元数据
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.ColumnName">
            <summary>
            实体Member映射的数据表列名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.AliasName">
            <summary>
            实体Member映射的数据表列的别名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.MemberType">
            <summary>
            实体Member的类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsRelationship">
            <summary>
            实体Member是否是关系
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsManyToOne">
            <summary>
            是否是多对一关系,如果是false那么就是一对多关系
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsUniqule">
            <summary>
            是否唯一
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsCheck">
            <summary>
            是否有检查约束条件
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsColumn">
            <summary>
            是否是列映射
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsPrimaryKey">
            <summary>
            是否是主键映射
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsComputed">
            <summary>
            是否计算列映射
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.SequenceName">
            <summary>
            序列名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsGenerated">
            <summary>
            该列是否自动生成
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsUpdatable">
            <summary>
            该列是否可更新
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.IsVersion">
            <summary>
            该列是否版本列
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.ThisKeyMembers">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Mapping.IMemberMapping.OtherKeyMembers">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Mapping.MemberMapping.InitializeConversionMapping(System.Boolean)">
            <summary>
            初始化约定映射
            </summary>
            <param name="isEnumerableType"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ObjectRepository">
            <summary>
            抽象仓储
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.#ctor(UWay.Skynet.Cloud.Data.IDbContext)">
            <summary>
            构造函数
            </summary>
            <param name="dbcontext">数据库上下文</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Dispose">
            <summary>
            回收
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Dispose(System.Boolean)">
            <summary>
            回收
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.UsingTransaction(System.Action,System.Data.IsolationLevel)">
            <summary>
            启用Ado.net事务
            </summary>
            <param name="action"></param>
            <param name="isolationLevel"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.CreateQuery``1">
            <summary>
            查询实体
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <example>
            <code>
            <![CDATA[
            <!--普通查询-->
            CreateQuery<OrgnizationInfo>().Where(m => m.Invalid == 0).OrderBy(m => m.SeqNo)
            <!--分页查询-->
            CreateQuery< LoginLockLog>().Where(condition.ToLambda<LoginLockLog>()).OrderByDescending(p => p.CreateDate).Paging(pagination);
            ]]>
            </code>
            </example>
            <returns>返回实体查询信息，不执行</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.GetByID``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="id">主键列表</param>
            <returns>实体</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Batch``2(System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{UWay.Skynet.Cloud.Data.IRepository{``0},``1,System.Int32}})">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="M"></typeparam>
            <param name="instances"></param>
            <param name="fnOperation"></param>
            <example>
            <code>
            <![CDATA[ int n = 10;
            var custs = Enumerable.Range(1, n).Select(
               i => new
               {
                   CustomerID = "XX" + i,
                   CompanyName = "Company" + i,
                   ContactName = "Contact" + i,
                   City = "Seattle",
                  Country = "USA"
              });
            using(var r = new CustomerRepository(Unity.Container))
            {
                r.Batch<Customer, Customer>(custs,(u, c) => u.Insert(c));
            }
            ]]>
            </code>
            </example>
            <returns>IEnumerable int</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Add``1(``0)">
            <summary>
            添加实体，返回影响行数
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="t">实体</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Add``2(System.Object,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            添加实体，返回指定类型
            </summary>
            <typeparam name="T">增加的实体类型</typeparam>
            <typeparam name="S">返回类型</typeparam>
            <param name="instance">实体</param>
            <param name="resultSeletor">返回选择的实体类型</param>
            <![CDATA[
             Add<UserInfo, int>(new User(){UserNo = "xxxx",UserName="1132" ...}, p => p.UserID)
            ]]>
            <returns>返回指定类型</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Update``1(``0)">
            <summary>
            更新实体
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="t">实体</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Update``1(System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            批量更新
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="instance">实体</param>
            <param name="updateCheck">更行条件</param>
            <![CDATA[
            Update<Entity.CategoryItem>(new { Invalid =DataDeleteStatusEnum.Invalid }, c => idArray.Contains(c.CategoryItemId));
            ]]>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Delete``1(System.Object)">
            <summary>
            删除实体
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="t">实体类</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Delete``1(System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            批量删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="instance">实体类</param>
            <param name="deleteCheck">删除条件</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            批量删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="deleteCheck">条件</param>
            <![CDATA[
            Delete<OrgnizationInfo>(p => idArray.Contains(p.OrgID))
            ]]>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteNonQuery(System.String,System.Object,System.Boolean)">
            <summary>
            执行无查询SQL
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数，可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
            ExecuteNonQuery("DELETE UFA_USER_INFO WHERE UserNo = @UserNo",new {UserNo = 0});
            ]]>
            <returns>影响函数</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteNonSp(System.String,System.Object,System.Boolean)">
            <summary>
            执行存储过程
            </summary>
            <param name="sql">存储过程+参数</param>
            <param name="namedParameters">参数，可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
            ExecuteNonSp("Exs UserNo = @UserNo",new {UserNo = 0});
            ]]>
            <returns>影响函数</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteNonQuery(UWay.Skynet.Cloud.Data.InsertQuery,System.Object,System.Boolean)">
            <summary>
            执行无查询SQL
            </summary>
            <param name="query">构建的插入,,<see cref="T:UWay.Skynet.Cloud.Data.InsertQuery"/></param>
            <param name="namedParameters">参数，可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
                InsertQuery query = new InsertQuery(tableName);
                query.Terms.Add(new UpdateTerm("GROUP_ID", SqlExpression.Parameter("GroupID")));
                query.Terms.Add(new UpdateTerm("group_name", SqlExpression.Parameter("GroupName")));
                query.Terms.Add(new UpdateTerm("group_level", SqlExpression.Parameter("GroupLevel")));
                query.Terms.Add(new UpdateTerm("parentid", SqlExpression.Parameter("ParentID")));
                query.Terms.Add(new UpdateTerm("user_name", SqlExpression.Parameter("UserName")));
                query.Terms.Add(new UpdateTerm("remark", SqlExpression.Parameter("Remark")));
                query.Terms.Add(new UpdateTerm("time_stamp", SqlExpression.Parameter("TimeStamp")));
                query.Terms.Add(new UpdateTerm("city_id", SqlExpression.Parameter("CityID")));
                query.Terms.Add(new UpdateTerm("level_id", SqlExpression.Parameter("LevelID")));
                query.Terms.Add(new UpdateTerm("sharetype", SqlExpression.Parameter("ShareType")));
                ExecuteNonQuery(query, new
                {
                    GroupName = item.GroupName,
                    GroupLevel = item.GroupLevel,
                    ParentID = item.ParentID,
                    UserName = item.UserName,
                    Remark = item.Remark,
                    TimeStamp = item.TimeStamp,
                    CityID = item.CityID,
                    LevelID = item.LevelID,
                    ShareType = item.ShareType,
                    GroupID = item.GroupID
                    });
            ]]>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteNonQuery(UWay.Skynet.Cloud.Data.DeleteQuery,System.Object,System.Boolean)">
            <summary>
            执行无查询SQL
            </summary>
            <param name="query">构建的删除,<see cref="T:UWay.Skynet.Cloud.Data.DeleteQuery"/></param>
            <param name="namedParameters">参数，可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
            DeleteQuery query = new DeleteQuery("products");
            query.WhereClause.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("productId"), SqlExpression.Number(999), CompareOperator.Equal));
            ExecuteNonQuery(query);
            ]]>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteNonQuery(UWay.Skynet.Cloud.Data.UpdateQuery,System.Object,System.Boolean)">
            <summary>
            执行无查询SQL
            </summary>
            <param name="query">构建的更新,<see cref="T:UWay.Skynet.Cloud.Data.UpdateQuery"/></param>
            <param name="namedParameters">参数，可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
            UpdateQuery updateQuery = new UpdateQuery(tableName);
            updateQuery.Terms.Add(new UpdateTerm("group_name", SqlExpression.Parameter("GroupName")));
            updateQuery.Terms.Add(new UpdateTerm("group_level", SqlExpression.Parameter("GroupLevel")));
            updateQuery.Terms.Add(new UpdateTerm("parentid", SqlExpression.Parameter("ParentID")));
            updateQuery.Terms.Add(new UpdateTerm("user_name", SqlExpression.Parameter("UserName")));
            updateQuery.Terms.Add(new UpdateTerm("remark", SqlExpression.Parameter("Remark")));
            updateQuery.Terms.Add(new UpdateTerm("time_stamp", SqlExpression.Parameter("TimeStamp")));
            updateQuery.Terms.Add(new UpdateTerm("city_id", SqlExpression.Parameter("CityID")));
            updateQuery.Terms.Add(new UpdateTerm("level_id", SqlExpression.Parameter("LevelID")));
            updateQuery.Terms.Add(new UpdateTerm("sharetype", SqlExpression.Parameter("ShareType")));
            updateQuery.WhereClause.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("GroupID"),SqlExpression.Parameter("group_id"), FilterOperator.IsEqualTo));
            ExecuteNonQuery(updateQuery, new
            {
                GroupName = item.GroupName,
                GroupLevel = item.GroupLevel,
                ParentID = item.ParentID,
                UserName = item.UserName,
                Remark = item.Remark,
                TimeStamp = item.TimeStamp,
                CityID = item.CityID,
                LevelID = item.LevelID,
                ShareType = item.ShareType,
                GroupID = item.GroupID
                });
            ]]>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteDataTable(UWay.Skynet.Cloud.Data.SelectQuery,System.Object,System.Boolean)">
            <summary>
            查询，返回DataTable
            </summary>
            <param name="query">构建的查询,<see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/></param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
             FromTerm groups = FromTerm.Table(tableName);
             var subquery = new SelectQuery();
             subquery.Columns.AddRange(new SelectColumn[] {
                new SelectColumn("group_id", groups,"sub_id"),
                new SelectColumn("parentid", groups,"p_id")
                });
             FromTerm subgroups = FromTerm.SubQuery(subquery, "b");
             SelectQuery query = new SelectQuery();
             query.Columns.AddRange(new SelectColumn[] {
                new SelectColumn("group_id", groups,"GroupID"),
                new SelectColumn("group_name", groups,"GroupName"),
                new SelectColumn("group_level", groups,"GroupLevel"),
                new SelectColumn("parentID", groups,"ParentID"),
                new SelectColumn("user_name", groups,"UserName"),
                new SelectColumn("remark", groups,"Remark"),
                new SelectColumn("time_stamp", groups,"TimeSstamp"),
                new SelectColumn("ShareType", groups,"ShareType"),
                new SelectColumn("level_id", groups,"LevelID"),
                new SelectColumn("city_id", groups,"CityID"),
                new SelectColumn("HasGroup", groups,""),
                new SelectColumn("sub_id", subgroups,"HasGroup", SqlAggregationFunction.Min)
                });
             query.FromClause.BaseTable = groups;
             query.FromClause.Join(LinqJoinType.Inner, query.FromClause.BaseTable, subgroups, "group_id", "p_id");
             query.GroupByTerms.AddRange(new GroupByTerm[] {
                new GroupByTerm("group_id", groups),
                new GroupByTerm("group_name", groups),
                new GroupByTerm("group_level", groups),
                new GroupByTerm("parentid", groups),
                new GroupByTerm("user_name", groups),
                new GroupByTerm("remark", groups),
                new GroupByTerm("city_id", groups),
                new GroupByTerm("level_id", groups),
                new GroupByTerm("sharetype", groups),
                });
             query.OrderByTerms.Add(new OrderByTerm("group_name", groups, OrderByDirection.Ascending));
             IDictionary<string, object> parameters = new Dictionary<string, object>();
             foreach (var condition in conditions)
             {
                query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field(condition.Name), SqlExpression.Parameter(condition.Name), condition.Operator));
                parameters.Add(condition.Name, condition.Value);
             }
             return ExecuteDataTable(query, parameters).ToList<NeGroup>();
            ]]>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Query``1(UWay.Skynet.Cloud.Data.SelectQuery,System.Object,System.Boolean)">
            <summary>
            查询，返回DataTable
            </summary>
            <param name="query">构建的查询,<see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/></param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
             FromTerm groups = FromTerm.Table(tableName);
             var subquery = new SelectQuery();
             subquery.Columns.AddRange(new SelectColumn[] {
                new SelectColumn("group_id", groups,"sub_id"),
                new SelectColumn("parentid", groups,"p_id")
                });
             FromTerm subgroups = FromTerm.SubQuery(subquery, "b");
             SelectQuery query = new SelectQuery();
             query.Columns.AddRange(new SelectColumn[] {
                new SelectColumn("group_id", groups,"GroupID"),
                new SelectColumn("group_name", groups,"GroupName"),
                new SelectColumn("group_level", groups,"GroupLevel"),
                new SelectColumn("parentID", groups,"ParentID"),
                new SelectColumn("user_name", groups,"UserName"),
                new SelectColumn("remark", groups,"Remark"),
                new SelectColumn("time_stamp", groups,"TimeSstamp"),
                new SelectColumn("ShareType", groups,"ShareType"),
                new SelectColumn("level_id", groups,"LevelID"),
                new SelectColumn("city_id", groups,"CityID"),
                new SelectColumn("HasGroup", groups,""),
                new SelectColumn("sub_id", subgroups,"HasGroup", SqlAggregationFunction.Min)
                });
             query.FromClause.BaseTable = groups;
             query.FromClause.Join(LinqJoinType.Inner, query.FromClause.BaseTable, subgroups, "group_id", "p_id");
             query.GroupByTerms.AddRange(new GroupByTerm[] {
                new GroupByTerm("group_id", groups),
                new GroupByTerm("group_name", groups),
                new GroupByTerm("group_level", groups),
                new GroupByTerm("parentid", groups),
                new GroupByTerm("user_name", groups),
                new GroupByTerm("remark", groups),
                new GroupByTerm("city_id", groups),
                new GroupByTerm("level_id", groups),
                new GroupByTerm("sharetype", groups),
                });
             query.OrderByTerms.Add(new OrderByTerm("group_name", groups, OrderByDirection.Ascending));
             IDictionary<string, object> parameters = new Dictionary<string, object>();
             foreach (var condition in conditions)
             {
                query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field(condition.Name), SqlExpression.Parameter(condition.Name), condition.Operator));
                parameters.Add(condition.Name, condition.Value);
             }
             return ExecuteDataTable(query, parameters).ToList<NeGroup>();
            ]]>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Query``1(System.String,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="namedParameters"></param>
            <param name="isAutoClose"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.SingleOrDefault``1(System.String,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="namedParameters"></param>
            <param name="isAutoClose"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteDataSet(UWay.Skynet.Cloud.Data.SelectQuery,System.Object,System.Boolean)">
            <summary>
            查询，返回DataSet
            </summary>
            <param name="query">构建的查询,<see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/></param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns></returns>
            <![CDATA[
             FromTerm groups = FromTerm.Table(tableName);
             var subquery = new SelectQuery();
             subquery.Columns.AddRange(new SelectColumn[] {
                new SelectColumn("group_id", groups,"sub_id"),
                new SelectColumn("parentid", groups,"p_id")
                });
             FromTerm subgroups = FromTerm.SubQuery(subquery, "b");
             SelectQuery query = new SelectQuery();
             query.Columns.AddRange(new SelectColumn[] {
                new SelectColumn("group_id", groups,"GroupID"),
                new SelectColumn("group_name", groups,"GroupName"),
                new SelectColumn("group_level", groups,"GroupLevel"),
                new SelectColumn("parentID", groups,"ParentID"),
                new SelectColumn("user_name", groups,"UserName"),
                new SelectColumn("remark", groups,"Remark"),
                new SelectColumn("time_stamp", groups,"TimeSstamp"),
                new SelectColumn("ShareType", groups,"ShareType"),
                new SelectColumn("level_id", groups,"LevelID"),
                new SelectColumn("city_id", groups,"CityID"),
                new SelectColumn("HasGroup", groups,""),
                new SelectColumn("sub_id", subgroups,"HasGroup", SqlAggregationFunction.Min)
                });
             query.FromClause.BaseTable = groups;
             query.FromClause.Join(LinqJoinType.Inner, query.FromClause.BaseTable, subgroups, "group_id", "p_id");
             query.GroupByTerms.AddRange(new GroupByTerm[] {
                new GroupByTerm("group_id", groups),
                new GroupByTerm("group_name", groups),
                new GroupByTerm("group_level", groups),
                new GroupByTerm("parentid", groups),
                new GroupByTerm("user_name", groups),
                new GroupByTerm("remark", groups),
                new GroupByTerm("city_id", groups),
                new GroupByTerm("level_id", groups),
                new GroupByTerm("sharetype", groups),
                });
             query.OrderByTerms.Add(new OrderByTerm("group_name", groups, OrderByDirection.Ascending));
             IDictionary<string, object> parameters = new Dictionary<string, object>();
             foreach (var condition in conditions)
             {
                query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field(condition.Name), SqlExpression.Parameter(condition.Name), condition.Operator));
                parameters.Add(condition.Name, condition.Value);
             }
             return ExecuteDataTable(query, parameters).ToList<NeGroup>();
            ]]>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteDataTable(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询，返回DataTable
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
            ExecuteDataTable("select * from CFG_INDICATOR_BUSY WHERE ID = @ID", new {ID = 1});
            ]]>
            <returns>返回DataTable</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteDataSet(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询，返回DataTable
            </summary>
            <param name="sql">SQL语句</param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <![CDATA[
            ExecuteDataTable("select * from CFG_INDICATOR_BUSY WHERE ID = @ID", new {ID = 1});
            ]]>
            <returns>返回DataSet</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteScalar(UWay.Skynet.Cloud.Data.SelectQuery,System.Object,System.Boolean)">
            <summary>
            执行查询，首行首列值
            </summary>
            <param name="query">构建查询，<see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/></param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">事务是否自动提交</param>
            <returns>首行首列值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteScalar(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询，首行首列值
            </summary>
            <param name="sql">构建查询</param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns>首行首列值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteScalarAsync(UWay.Skynet.Cloud.Data.SelectQuery,System.Object,System.Boolean)">
            <summary>
            执行查询，首行首列值
            </summary>
            <param name="query">构建查询，<see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/></param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">事务是否自动提交</param>
            <returns>首行首列值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExecuteScalarAsync(System.String,System.Object,System.Boolean)">
            <summary>
            执行查询，首行首列值
            </summary>
            <param name="sql">构建查询</param>
            <param name="namedParameters">参数,可以为匿名类，IDictionary，Hashtable,NameValueCollection</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns>首行首列值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Page``1(UWay.Skynet.Cloud.Data.SelectQuery,UWay.Skynet.Cloud.Request.DataSourceRequest,System.Boolean)">
            <summary>
            执行分页查询
            </summary>
            <param name="query">查询语句</param>
            <param name="request">分页信息</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns>首行首列值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Page``1(System.String,UWay.Skynet.Cloud.Request.DataSourceRequest,System.Boolean)">
            <summary>
            执行分页查询
            </summary>
            <param name="sql">查询语句</param>
            <param name="request">分页信息</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns>首行首列值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Page(System.String,UWay.Skynet.Cloud.Request.DataSourceRequest,System.Boolean)">
            <summary>
            执行分页查询
            </summary>
            <param name="sql">查询语句</param>
            <param name="request">分页信息</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns>首行首列值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.Page(UWay.Skynet.Cloud.Data.SelectQuery,UWay.Skynet.Cloud.Request.DataSourceRequest,System.Boolean)">
            <summary>
            执行分页查询
            </summary>
            <param name="query">查询语句</param>
            <param name="request">分页信息</param>
            <param name="isAutoClose">是否自动关闭连接</param>
            <returns>首行首列值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExportCSV(UWay.Skynet.Cloud.FileHandling.IFileHandler,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Object)">
            <summary>
            导出CSV文件
            </summary>
            <param name="fileHanlder">文件信息</param>
            <param name="fileName">文件信息</param>
            <param name="columns">列头</param>
            <param name="sql">查询语句</param>
            <param name="namedParameters">参数</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.ExportCSVAsync(UWay.Skynet.Cloud.FileHandling.IFileHandler,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Object)">
            <summary>
            异步导出CSV文件
            </summary>
            <param name="fileHanlder">文件处理器.</param>
            <param name="userId">用户ID.</param>
            <param name="fileName">文件名称.</param>
            <param name="columns">列头.</param>
            <param name="sql">查询语句.</param>
            <param name="namedParameters">参数.</param>
            <returns>Task&lt;System.Boolean&gt;.</returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ObjectRepository.Schema">
            <summary>
            Schema
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.GetQueryDataBaseTableSql(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Data Base 
            </summary>
            <param name="tableName"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ObjectRepository.GetQueryDataBaseTableColumnSql(System.String)">
            <summary>
            Data Base 
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ProtocolDbContext">
            <summary>
            连接字符数据库信息（包括HTTP，DbConnection,Ftp）
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Repository">
            <summary>
            仓储
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Res">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ArgumentCountError">
            <summary>
              Looks up a localized string similar to {0} function {1} requires {2} arguments.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ArgumentEnumerableInvalid">
            <summary>
              Looks up a localized string similar to The enumerable must implement at least IEnumerable.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ArgumentLabel">
            <summary>
              Looks up a localized string similar to Continue label target must be void.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ArgumentQuery">
            <summary>
              Looks up a localized string similar to Cannot deduce query provider from query.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.AttrbuteMappingError">
            <summary>
              Looks up a localized string similar to AttributeMapping: The member &apos;{0}.{1}&apos; referenced in {2} for &apos;{3}&apos; is not mapped or does not exist.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.BooleanExpression">
            <summary>
              Looks up a localized string similar to Test must be a boolean expression.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.CastTypeInvalid">
            <summary>
              Looks up a localized string similar to No type mapping for SqlType {0}.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ColumnUndefine">
            <summary>
              Looks up a localized string similar to Reference to undefined column.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ConnectionStringConfigError">
            <summary>
              Looks up a localized string similar to ConnectionString.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ConnectionStringConfigToMany">
            <summary>
              Looks up a localized string similar to Too many connection strings in config file..
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ConnectionStringNameInvalid">
            <summary>
              Looks up a localized string similar to Invalid connection configure for :{0}.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ConnectionStringNoConfigException">
            <summary>
              Looks up a localized string similar to No configure connection string by config file..
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ConnectionStringProviderNameError">
            <summary>
              Looks up a localized string similar to connectionString.ProviderName.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ConstructTypeInvalid">
            <summary>
              Looks up a localized string similar to Cannot construct type &apos;{0}&apos; with all mapped includedMembers..
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ConvertTypeInvalid">
            <summary>
              Looks up a localized string similar to Cann&apos;t convert from &apos;{0}&apos; to db type..
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.CouldNotFindRequiredAttribute">
            <summary>
              Looks up a localized string similar to Mapping Problem: Could not find required attribute &apos;{0}&apos;: {1}..
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.CycleInvalid">
            <summary>
              Looks up a localized string similar to Cycle in topological sort.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.DeclarationQueryInvalid">
            <summary>
              Looks up a localized string similar to Declaration query not allowed for this langauge.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.DeferInvalid">
            <summary>
              Looks up a localized string similar to The member &apos;{0}&apos; cannot be deferred due to its type..
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.DelegateToManyArguments">
            <summary>
              Looks up a localized string similar to Delegate has too many arguments.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.DisposableInvalid">
            <summary>
              Looks up a localized string similar to The disposable must implement IDisposable.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.EntityORMappingNoConfig">
            <summary>
              Looks up a localized string similar to Entity type &apos;{0}&apos; not configure mapping!.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.EntityRepeatRegister">
            <summary>
              Looks up a localized string similar to Repeat register entity mapping for entity {0}.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ExpressionError">
            <summary>
              Looks up a localized string similar to The expression of type &apos;{0}&apos; is not a sequence.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.FuncionInvalid">
            <summary>
              Looks up a localized string similar to Invalid function：.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.InvalidOperationCompareException">
            <summary>
              Looks up a localized string similar to Cannot compare two constructed types with different sets of members assigned..
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.LengthInvalid">
            <summary>
              Looks up a localized string similar to Incorrect number of {0}.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.NoExist">
            <summary>
              Looks up a localized string similar to {0} is not exist.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.NoExistQueryProvider">
            <summary>
              Looks up a localized string similar to Could not find query provider.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.NoProjectionTranslateToSQL">
            <summary>
              Looks up a localized string similar to Non-scalar projections cannot be translated to SQL.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.NotCastFromTypeToType">
            <summary>
              Looks up a localized string similar to Cannot cast elements from type &apos;{0}&apos; to type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.NotSupported">
            <summary>
              Looks up a localized string similar to {0} is not supported {1}.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.OperationNotSupported">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; not support &apos;{1}&apos; operation {2}.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ORMappingMissValue">
            <summary>
              Looks up a localized string similar to Missing &apos;{0}&apos; value in member {1} when OR mapping.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ProviderNameForInvalid">
            <summary>
              Looks up a localized string similar to {0} Provider name not exists or invalid for {1}.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.ProviderNameInvalid">
            <summary>
              Looks up a localized string similar to Provider name invalid.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.SQLCESupportSkip">
            <summary>
              Looks up a localized string similar to SQLCE can only support Skip when it is immediately followed by Take.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.SubqueryInvalid">
            <summary>
              Looks up a localized string similar to Subquery does not originate with a member access.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.TypeInvalid">
            <summary>
              Looks up a localized string similar to {0} is valid type.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.TypeUnhandle">
            <summary>
              Looks up a localized string similar to Unhandled {0} type:{1}.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.VariableNoInitialize">
            <summary>
              Looks up a localized string similar to Initializer must be assignable to variable.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.VersionMemberTypeInvalid">
            <summary>
              Looks up a localized string similar to Invalid Version member type &apos;{0}&apos; for  &apos;{1}&apos; ,version type must be int type..
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Res.VersionTooMany">
            <summary>
              Looks up a localized string similar to Version member too many in entity &apos;{0}&apos;.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.IColumnSchema">
            <summary>
            列元数据
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IColumnSchema.ColumnName">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IColumnSchema.Table">
            <summary>
            表
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IColumnSchema.IsUniqule">
            <summary>
            是否唯一
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IColumnSchema.IsPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IColumnSchema.IsComputed">
            <summary>
            是否计算列
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IColumnSchema.IsGenerated">
            <summary>
            该列是否自动生成
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IColumnSchema.IsNullable">
            <summary>
            该列是否运行为空
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.IForeignKeySchema">
            <summary>
            外键Schema
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IForeignKeySchema.Name">
            <summary>
            外键名称
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.IRelationSchema">
            <summary>
            关系Scheam,比如外键关系
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IRelationSchema.ThisTable">
            <summary>
            This Table
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IRelationSchema.ThisKey">
            <summary>
            ThisKey
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IRelationSchema.OtherTable">
            <summary>
            OtherTable
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.IRelationSchema.OtherKey">
            <summary>
            OtherKey
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.ITableSchema">
            <summary>
            Table 元数据 
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.ITableSchema.Schema">
            <summary>
            Schema
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.ITableSchema.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.ITableSchema.AllColumns">
            <summary>
            列集合(包括主键列）
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.ITableSchema.Columns">
            <summary>
            列集合(不包括主键列）
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.ITableSchema.ForeignKeys">
            <summary>
            外键集合
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.ITableSchema.PrimaryKeys">
            <summary>
            主键列集合
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.ITableSchema.Children">
            <summary>
            子表集合
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.ISchemaLoader">
            <summary>
            Schema 加载器接口
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.ISchemaLoader.Load(UWay.Skynet.Cloud.Data.DbConfiguration)">
            <summary>
            加载Schema
            </summary>
            <param name="cfg"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry">
            <summary>
            建库脚本实体类
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry.DatabaseScript">
            <summary>
            得到或设置创建数据库的脚本
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry.SchemaScripts">
            <summary>
            得到或设置建Schema的脚本
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry.TableScripts">
            <summary>
            得到或设置建表的脚本
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry.PKConstraintScripts">
            <summary>
            得到或设置创建主键的脚本
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry.FKConstraintScripts">
            <summary>
            得到或设置创建外键的脚本
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry.UniquleConstraintScripts">
            <summary>
            得到或设置创建Uniqule约束的脚本
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry.CheckConstraintScript">
            <summary>
            得到或设置创建检查约束的脚本
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry.SequenceScripts">
            <summary>
            得到或设置创建序列脚本
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.Script.IDatabaseScriptExecutor">
            <summary>
            数据库脚本执行器接口
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.IDatabaseScriptExecutor.CreateDatabase(UWay.Skynet.Cloud.Data.DbConfiguration,UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry)">
            <summary>
            创建数据库
            </summary>
            <param name="dbConfiguration"></param>
            <param name="script"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.IDatabaseScriptExecutor.CreateTables(UWay.Skynet.Cloud.Data.DbConfiguration,UWay.Skynet.Cloud.Data.Schema.Script.DatabaseScriptEntry)">
            <summary>
            创建数据表
            </summary>
            <param name="dbConfiguration"></param>
            <param name="script"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.IDatabaseScriptExecutor.DatabaseExists(UWay.Skynet.Cloud.Data.DbConfiguration)">
            <summary>
            判断数据库是否存在
            </summary>
            <param name="dbConfiguration"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.IDatabaseScriptExecutor.DeleteDatabase(UWay.Skynet.Cloud.Data.DbConfiguration)">
            <summary>
            删除数据库
            </summary>
            <param name="dbConfiguration"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator">
            <summary>
            数据库脚本生成器，提供数据库、表、主键约束、外键约束、检查约束、Uniqule约束等脚本的创建工作
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.DatabaseName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.Dialect">
            <summary>
            数据库方言
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.Entry">
            <summary>
            建库脚本实体类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.BuildDatabaseScript(System.String)">
            <summary>
            构建数据库脚本
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.BuildSchemaScript(UWay.Skynet.Cloud.Data.Mapping.IEntityMapping[])">
            <summary>
            构建Schema脚本
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.BuildPKScript(UWay.Skynet.Cloud.Data.Mapping.IMemberMapping[])">
            <summary>
            构建特定映射对应的主键脚本
            </summary>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.BuildFKScript(UWay.Skynet.Cloud.Data.Mapping.IMemberMapping)">
            <summary>
            构建特定映射对应的外键脚本
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.BuildUniquleConstraintScript(UWay.Skynet.Cloud.Data.Mapping.IMemberMapping)">
            <summary>
            构建特定映射对应的唯一性约束脚本
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.BuildCheckConstraintScript(UWay.Skynet.Cloud.Data.Mapping.IMemberMapping)">
            <summary>
            构建特定映射对应的检查约束脚本
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.GetDbType(UWay.Skynet.Cloud.Data.Common.SqlType)">
            <summary>
            得到对应的数据库类型
            </summary>
            <param name="sqlType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.GetTableName(UWay.Skynet.Cloud.Data.Mapping.IEntityMapping)">
            <summary>
            得到表名
            </summary>
            <param name="mapping"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.GetDefaultValue(UWay.Skynet.Cloud.Data.Mapping.IMemberMapping,UWay.Skynet.Cloud.Data.Common.SqlType)">
            <summary>
            得到缺省值
            </summary>
            <param name="sb"></param>
            <param name="f"></param>
            <param name="sqlType"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.BuildTableScript(UWay.Skynet.Cloud.Data.Mapping.IEntityMapping)">
            <summary>
            构建建表脚本
            </summary>
            <param name="mapping"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.Build(UWay.Skynet.Cloud.Data.Dialect.IDialect,UWay.Skynet.Cloud.Data.Mapping.IEntityMapping[],System.String)">
            <summary>
            生成数据库脚本
            </summary>
            <param name="dialect">数据库方言</param>
            <param name="mappings">映射元数据</param>
            <param name="dbName">数据库名称</param>
            <returns>返回数据库脚本</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.Generator.DatabaseScriptGenerator.BuildSequenceScript(UWay.Skynet.Cloud.Data.Mapping.IEntityMapping)">
            <summary>
            构建序列脚本
            </summary>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Schema.Script.IDatabaseScriptGenerator">
            <summary>
            数据库脚本生成器接口，提供数据库、表、主键约束、外键约束、检查约束、Uniqule约束等脚本的创建工作
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.IDatabaseScriptGenerator.GetDbType(UWay.Skynet.Cloud.Data.Common.SqlType)">
            <summary>
            得到对应的数据库类型
            </summary>
            <param name="sqlType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Schema.Script.IDatabaseScriptGenerator.Build(UWay.Skynet.Cloud.Data.Dialect.IDialect,UWay.Skynet.Cloud.Data.Mapping.IEntityMapping[],System.String)">
            <summary>
            生成数据库脚本
            </summary>
            <param name="dialect">数据库方言</param>
            <param name="mappings">映射元数据</param>
            <param name="dbName">数据库名称</param>
            <returns>返回数据库脚本</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.UnitOfWork">
            <summary>
            工作单元门面类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UnitOfWork.Get(System.String,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            初始化才可以使用
            </summary>
            <param name="containerName">连接名称</param>
            <param name="loggerFactory">日志工厂</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UnitOfWork.Get(UWay.Skynet.Cloud.Data.DbContextOption)">
            <summary>
            得到工作单元对象
            </summary>
            <param name="dbContextOption">配置信息</param>
            <returns></returns>
        </member>
    </members>
</doc>
