<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Skynet.Cloud.Framework</name>
    </assembly>
    <members>
        <member name="P:UWay.Skynet.Cloud.Cache.CachingAttribute.AbsoluteExpiration">
            <summary>
            过期时间 秒
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.CachingInterceptor.Invoke(AspectCore.DynamicProxy.AspectContext,AspectCore.DynamicProxy.AspectDelegate)">
            <summary>
            Invoke the specified context and next.
            </summary>
            <returns>The invoke.</returns>
            <param name="context">Context.</param>
            <param name="next">Next.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.CachingInterceptor.GetQCachingAttributeInfo(System.Reflection.MethodInfo)">
            <summary>
            Gets the QC aching attribute info.
            </summary>
            <returns>The QC aching attribute info.</returns>
            <param name="method">Method.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.CachingInterceptor.ProceedCaching(AspectCore.DynamicProxy.AspectContext,AspectCore.DynamicProxy.AspectDelegate,UWay.Skynet.Cloud.Cache.CachingAttribute)">
            <summary>
            Proceeds the caching.
            </summary>
            <returns>The caching.</returns>
            <param name="context">Context.</param>
            <param name="next">Next.</param>
            <param name="attribute">Attribute.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.CachingInterceptor.GenerateCacheKey(AspectCore.DynamicProxy.AspectContext)">
            <summary>
            Generates the cache key.
            </summary>
            <returns>The cache key.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.CachingInterceptor.GenerateCacheKey(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Generates the cache key.
            </summary>
            <returns>The cache key.</returns>
            <param name="typeName">Type name.</param>
            <param name="methodName">Method name.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.CachingInterceptor.FormatArgumentsToPartOfCacheKey(System.Collections.Generic.IList{System.Reflection.ParameterInfo},System.Int32)">
            <summary>
            Formats the arguments to part of cache key.
            </summary>
            <returns>The arguments to part of cache key.</returns>
            <param name="methodArguments">Method arguments.</param>
            <param name="maxCount">Max count.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.CachingInterceptor.GetArgumentValue(System.Object)">
            <summary>
            Gets the argument value.
            </summary>
            <returns>The argument value.</returns>
            <param name="arg">Argument.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.Redis.RedisClient.GetConnect(Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
            获取ConnectionMultiplexer
            </summary>
            <param name="redisConfig">RedisConfig配置文件</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.Redis.RedisClient.CheckeConfig(System.String)">
            <summary>
            检查入参数
            </summary>
            <param name="configName">RedisConfig配置文件中的 Redis_Default/Redis_6 名称</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Cache.Redis.RedisClient.GetDatabase(System.String,System.Nullable{System.Int32})">
            <summary>
            获取数据库
            </summary>
            <param name="configName"></param>
            <param name="db">默认为0：优先代码的db配置，其次config中的配置</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Cache.Redis.RedisClientSingleton">
            <summary>
            单例
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Cache.Redis.RedisSetting">
            <summary>
            Redis JSON Setting
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.ComponentModel.PropertyChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.ComponentModel.PropertyChangedEventArgs.NewValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.ComponentModel.PropertyChangedEventArgs.OldValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ComponentModel.PropertyChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.AESCryption.#ctor(System.String)">
            <summary>
            AES加密方法，key长度《=32
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.AESCryption.Encryption(System.String)">
            <summary>
            对称加密
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.AESCryption.Decryption(System.String)">
            <summary>
            对称解密
            </summary>
            <param name="content">内容</param>
            <returns>解密后内容</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Steganogram.DESCryption">
            <summary>
            对称密码体制加密算法
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="key">随机密钥</param>
            <param name="iv">随机初始化向量</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.#ctor(System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="key">随机密钥</param>
            <param name="iv">随机初始化向量</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="key">密钥</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.GenerateKey(System.String@,System.String@)">
            <summary>
            创建密钥
            </summary>
            <param name="key">随机密钥</param>
            <param name="iv">随机初始化向量</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.Encrypt(System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="Text">待加密文本</param> 
            <returns>加密后的文本</returns> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.Encrypt(System.ArraySegment{System.Byte})">
            <summary>
            加密字节流
            </summary>
            <param name="buffers">字节流</param>
            <returns>加密后的字节流</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.Encrypt(System.IO.Stream)">
            <summary>
            加密文件流
            </summary>
            <param name="stream">待加密流</param>
            <returns>加密之后的流</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.Decrypt(System.String)">
            <summary> 
            解密文本数据 
            </summary> 
            <param name="text">文本</param> 
            <returns></returns> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.Decrypt(System.ArraySegment{System.Byte})">
            <summary>
            解密一段字节流
            </summary>
            <param name="buffers">字节流</param>
            <returns>解密后的字节流</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DESCryption.Decrypt(System.IO.Stream)">
            <summary>
            解密文件流
            </summary>
            <param name="stream">文件流</param>
            <returns>解密之后的流</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Steganogram.DSACryption">
            <summary>
            DSA加密
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DSACryption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DSACryption.CreateKey(System.String@,System.String@)">
            <summary>
            创建密钥
            </summary>
            <param name="publicKey">公钥</param>
            <param name="privateKey">私钥</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DSACryption.SignData(System.String,System.String)">
            <summary>
            使用公钥加密数据
            </summary>
            <param name="data">待加密字符</param>
            <param name="privateKey">公钥</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DSACryption.SignData(System.Byte[],System.String)">
            <summary>
            使用公钥加密数据
            </summary>
            <param name="data">待加密字节</param>
            <param name="privateKey">私钥</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DSACryption.Verify(System.Byte[],System.Byte[],System.String)">
            <summary>
            验证加密的数据是否正确
            </summary>
            <param name="data">加密之后的数据</param>
            <param name="signed">签名之后的数据</param>
            <param name="publicKey">公钥</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.DSACryption.Verify(System.String,System.Byte[],System.String)">
            <summary>
            验证加密的数据是否正确
            </summary>
            <param name="data">加密之后的数据</param>
            <param name="signed">签名之后的数据</param>
            <param name="publicKey">公钥</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Steganogram.MD5Cryption">
            <summary>
            扩展方法帮助类MD5Cryption
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.MD5Cryption.MD5(System.String)">
            <summary>
            获取字符的MD5
            </summary>
            <param name="val">字符串</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Steganogram.RSACryption">
            <summary>
            非对称加密
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.CreateKey(System.String@,System.String@,System.String@)">
            <summary>
            创建密钥
            </summary>
            <param name="exponent">公钥</param>
            <param name="privateKey">私钥</param>
            <param name="modulus">模</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.EncryptData(System.String,System.String,System.String)">
            <summary>
            使用公钥加密数据
            </summary>
            <param name="data">待加密字节</param>
            <param name="exponent">公钥</param>
            <param name="modulus">模</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.DecryptData(System.String,System.String)">
            <summary>
            使用私钥解密数据
            </summary>
            <param name="data">待解密字节</param>
            <param name="privateKey">私钥</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.DecryptData(System.Byte[],System.String)">
            <summary>
            使用私钥解密数据
            </summary>
            <param name="data">待解密字节</param>
            <param name="privateKey">私钥</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.Sign(System.Byte[],System.String)">
            <summary>
            签名数据
            </summary>
            <param name="data">待签名字节</param>
            <param name="privateKey">私钥</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.Verify(System.Byte[],System.Byte[],System.String)">
            <summary>
            验证加密的数据是否正确
            </summary>
            <param name="data">私钥加密之后的数据</param>
            <param name="Signature">签名之后的数据</param>
            <param name="exponent">公钥</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.BytesToHexString(System.Byte[])">
            <summary>
            字节转16进制字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.RSACryption.HexStringToBytes(System.String)">
            <summary>
            16进制转字节
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Steganogram.SHA1Cryption">
            <summary>
            扩展方法帮助类SHA1Cryption
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Steganogram.SHA1Cryption.Sha1(System.String)">
            <summary>
            基于Sha1的自定义加密字符串方法：输入一个字符串，返回一个由40个字符组成的十六进制的哈希散列（字符串）。
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>加密后的十六进制的哈希散列（字符串）</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.BaseModel`1">
            <summary>
            所有数据表实体类都必须实现此接口
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.JoinType">
            <summary>
            A kind of SQL join
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.OrderByDirection">
            <summary>
            Specifies how a result set should be ordered.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ActionType">
            <summary>
            操作日志类型
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.AbstractAssociationAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.AbstractAssociationAttribute.ThisKey">
            <summary>
            Gets or sets members of this entity class to represent the key values on this side of the association.
            </summary>
            <value>Default = Id of the containing class</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.AbstractAssociationAttribute.OtherKey">
            <summary>
            Gets or sets one or more members of the target entity class as key values on the other side of the association.
            </summary>
            <value>Default = Id of the related class.</value>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.AssociationAttribute">
            <summary>
            关系映射标签，支持一对多和多对一
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.AssociationType">
            <summary>
            关系类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.AssociationType.ManyToOne">
            <summary>
            多对一
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.AssociationType.OneToMany">
            <summary>
            一对多
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.AssociationType.OneToOne">
            <summary>
            一对一
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.AutoJoinAttribute">
            <summary>
            自动练级的属性
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.AutoJoinAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.AnsiString">
            <summary>
            Ansi 字符床
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.AnsiString.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">字符串</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.AnsiString.Value">
            <summary>
            字符串
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ColumnTypeAttribute">
            <summary>
            数据库列类型属性
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnTypeAttribute.Type">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ColumnTypeAttribute.#ctor(System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.AliasAttribute">
            <summary>
            别名属性
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.AliasAttribute.Alias">
            <summary>
            别名
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.AliasAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.VersionColumnAttribute">
            <summary>
            列版本属性
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.VersionColumnAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ComputedColumnAttribute">
            <summary>
            列计算属性
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ComputedColumnAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.ComputedColumnAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">计算列名</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.ColumnAttribute">
            <summary>
            列映射标签
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.Name">
            <summary>
            得到或设置列名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.Alias">
            <summary>
            得到或设置列的别名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.DbType">
            <summary>
            得到或设置列的数据类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.Length">
            <summary>
            得到或设置列的长度
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.IsNullable">
            <summary>
            得到或设置列是否允许为空
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.Precision">
            <summary>
            得到或设置Precision
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.Scale">
            <summary>
            得到或设置Scale
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.ForceToUtc">
            <summary>
            是否壮话Utc时间
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.ColumnAttribute.Comment">
            <summary>
            注释
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DataAttribute.ComponentAttribute">
            <summary>
            被标记为一个“组件”,该组件实现了一个或多个“契约”，如果没有实现任何“契约”，那么该组件也作为“契约”进行注册
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DataAttribute.ComponentAttribute.Id">
            <summary>
            得到或设置组件的Id
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DataAttribute.ComponentAttribute.Lifestyle">
            <summary>
            得到或设置组件的生命周期
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DataAttribute.ComponentAttribute.Contract">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IgnoreAttribute">
            <summary>
            Description of IgnoreAttribute.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.MemberAttribute.Storage">
            <summary>
            Gets or sets a private storage field to hold the value from a column.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.OneToManyAttribute">
            <summary>
            一对多
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.OneToOneAttribute">
            <summary>
            一对一
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.IdAttribute">
            <summary>
            主键标签
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IdAttribute.IsDbGenerated">
            <summary>
            得到或设置数据表的主键是否为自增的
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.IdAttribute.SequenceName">
            <summary>
            得到或设置序列名称
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.TableAttribute">
            <summary>
            数据库表标签
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.TableAttribute.Server">
            <summary>
            得到或设置服务器名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.TableAttribute.DatabaseName">
            <summary>
            得到或设置数据库数据库名称
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.TableAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.TableAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.TableAttribute.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="comment">注释</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.TableAttribute.Schema">
            <summary>
            得到或设置数据库表的Schema
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.TableAttribute.Name">
            <summary>
            得到或设置表名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.TableAttribute.Comment">
            <summary>
            表注释
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.TableAttribute.Readonly">
            <summary>
            得到或设置表是否是只读的
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.VersionAttribute">
            <summary>
            版本标签，该标签仅仅能够应用在实体成员的类型是短整型、整型、长整型上
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DataRowExtensions">
            <summary>
            This static class defines the DataRow extension methods.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
            <summary>
            This method provides access to the values in each of the columns in a given row. 
            This method makes casts unnecessary when accessing columns. 
            Additionally, Field supports nullable types and maps automatically between DBNull and 
            Nullable when the generic type is nullable. 
            </summary>
            <param name="row">The input DataRow</param>
            <param name="columnName">The input column name specifying which row value to retrieve.</param>
            <returns>The DataRow value for the column specified.</returns> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            This method provides access to the values in each of the columns in a given row. 
            This method makes casts unnecessary when accessing columns. 
            Additionally, Field supports nullable types and maps automatically between DBNull and 
            Nullable when the generic type is nullable. 
            </summary>
            <param name="row">The input DataRow</param>
            <param name="column">The input DataColumn specifying which row value to retrieve.</param>
            <returns>The DataRow value for the column specified.</returns> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
            <summary>
            This method provides access to the values in each of the columns in a given row. 
            This method makes casts unnecessary when accessing columns. 
            Additionally, Field supports nullable types and maps automatically between DBNull and 
            Nullable when the generic type is nullable. 
            </summary>
            <param name="row">The input DataRow</param>
            <param name="columnIndex">The input ordinal specifying which row value to retrieve.</param>
            <returns>The DataRow value for the column specified.</returns> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            This method provides access to the values in each of the columns in a given row. 
            This method makes casts unnecessary when accessing columns. 
            Additionally, Field supports nullable types and maps automatically between DBNull and 
            Nullable when the generic type is nullable. 
            </summary>
            <param name="row">The input DataRow</param>
            <param name="columnIndex">The input ordinal specifying which row value to retrieve.</param>
            <param name="version">The DataRow version for which row value to retrieve.</param>
            <returns>The DataRow value for the column specified.</returns> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            This method provides access to the values in each of the columns in a given row. 
            This method makes casts unnecessary when accessing columns. 
            Additionally, Field supports nullable types and maps automatically between DBNull and 
            Nullable when the generic type is nullable. 
            </summary>
            <param name="row">The input DataRow</param>
            <param name="columnName">The input column name specifying which row value to retrieve.</param>
            <param name="version">The DataRow version for which row value to retrieve.</param>
            <returns>The DataRow value for the column specified.</returns> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            This method provides access to the values in each of the columns in a given row. 
            This method makes casts unnecessary when accessing columns. 
            Additionally, Field supports nullable types and maps automatically between DBNull and 
            Nullable when the generic type is nullable. 
            </summary>
            <param name="row">The input DataRow</param>
            <param name="column">The input DataColumn specifying which row value to retrieve.</param>
            <param name="version">The DataRow version for which row value to retrieve.</param>
            <returns>The DataRow value for the column specified.</returns> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
            <summary>
            This method sets a new value for the specified column for the DataRow it�s called on. 
            </summary>
            <param name="row">The input DataRow.</param>
            <param name="columnIndex">The input ordinal specifying which row value to set.</param>
            <param name="value">The new row value for the specified column.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
            <summary>
            This method sets a new value for the specified column for the DataRow it�s called on. 
            </summary>
            <param name="row">The input DataRow.</param>
            <param name="columnName">The input column name specifying which row value to retrieve.</param>
            <param name="value">The new row value for the specified column.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
            <summary>
            This method sets a new value for the specified column for the DataRow it�s called on. 
            </summary>
            <param name="row">The input DataRow.</param>
            <param name="column">The input DataColumn specifying which row value to retrieve.</param>
            <param name="value">The new row value for the specified column.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.ToList``1(System.Data.Common.DbDataReader)">
            <summary>
            Read entity list by reader
            </summary>
            <typeparam name="T">entity</typeparam>
            <param name="reader">data reader</param>
            <returns>entity</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataRowExtensions.SingleOrDefault``1(System.Data.Common.DbDataReader)">
            <summary>
            Read entity list by reader
            </summary>
            <typeparam name="T">entity</typeparam>
            <param name="reader">data reader</param>
            <returns>entity</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DataReaderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataReaderExtensions.ToDataTable(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <modelExp name="reader"></modelExp>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataReaderExtensions.ToList``1(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <modelExp name="reader"></modelExp>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataReaderExtensions.ToList``1(System.Data.IDataReader,System.Func{System.Data.IDataReader,``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <modelExp name="reader"></modelExp>
            <modelExp name="creator"></modelExp>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DataTableExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DataTableExtensions.ToList``1(System.Data.DataTable)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <modelExp name="tb"></modelExp>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DbProviderNames">
            <summary>
            DbProvider 名称常量类
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.Oledb">
            <summary>
            Oledb Provider,用于访问Access数据库 
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.MySQL">
            <summary>
            MySQL Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.Oracle_ODP">
            <summary>
            Oracle ODP Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.PostgreSQL">
            <summary>
            Oracle ODP Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.Oracle_Managed_ODP">
            <summary>
            Oracle Managed ODP Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.Uql_Data_Oracle">
            <summary>
            BJMT Oracle ODP Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.Oracle">
            <summary>
            Microsoft Oracle Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.SqlServer">
            <summary>
            SqlServer Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.SQLite">
            <summary>
            SQLite Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.SqlCe35">
            <summary>
            SqlCE35 Provider
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DbProviderNames.SqlCe40">
            <summary>
            SqlCE40 Provider
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTable.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTable.TableComment">
            <summary>
            表说明
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTable.Columns">
            <summary>
            字段集合
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.ColName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.IsIdentity">
            <summary>
            是否自增
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.IsPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.ColumnType">
            <summary>
            字段数据类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.ColumnLength">
            <summary>
            字段数据长度
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.IsNullable">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.Comments">
            <summary>
            字段说明
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.CSharpType">
            <summary>
            C#数据类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.DataPrecision">
            <summary>
            数据精度
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DbTableColumn.DataScale">
            <summary>
            数据刻度
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DBType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Unkonw">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Int64">
            <summary>
              <see cref="T:System.Int64" />. A 64-bit signed integer.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Binary">
            <summary>
              <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Boolean">
            <summary>
              <see cref="T:System.Boolean" />. An unsigned numeric value that can be 0, 1, or null. 
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Char">
            <summary>
              <see cref="T:System.String" />. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.DateTime">
            <summary>
              <see cref="T:System.DateTime" />. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Decimal">
            <summary>
              <see cref="T:System.Decimal" />. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Double">
            <summary>
              <see cref="T:System.Double" />. A floating point number within the range of -1.79E +308 through 1.79E +308.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Image">
            <summary>
              <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Int32">
            <summary>
              <see cref="T:System.Int32" />. A 32-bit signed integer.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Currency">
            <summary>
              <see cref="T:System.Decimal" />. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.NChar">
            <summary>
              <see cref="T:System.String" />. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.NText">
            <summary>
              <see cref="T:System.String" />. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.NVarChar">
            <summary>
              <see cref="T:System.String" />. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Single">
            <summary>
              <see cref="T:System.Single" />. A floating point number within the range of -3.40E +38 through 3.40E +38.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Guid">
            <summary>
              <see cref="T:System.Guid" />. A globally unique identifier (or GUID).
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Int16">
            <summary>
              <see cref="T:System.Int16" />. A 16-bit signed integer.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Text">
            <summary>
              <see cref="T:System.String" />. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.Byte">
            <summary>
              <see cref="T:System.Byte" />. An 8-bit unsigned integer.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.VarChar">
            <summary>
              <see cref="T:System.String" />. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.
                      </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DBType.AnsiString">
            <summary>
            对应Nvarchar超出200部分
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DefaultData">
            <summary>
            系统的默认数据
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DefaultData.DEFAULT_USER_PASSWORD">
            <summary>
            用户重置密码时候的默认密码
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DefaultData.USER_MENU_ROOT">
            <summary>
            用户权限顶级菜单ID
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DefaultData.SUPER_ADMIN_ID">
            <summary>
            超级管理员ID
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DefaultData.AppId_UFA">
            <summary>
            平台业务id
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DefaultData.PUBLIC_VENDOR_CODE">
            <summary>
            公共厂家代码
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.PaginationResult.total">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.PaginationResult.pageSize">
            <summary>
            每页条数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.PaginationResult.pageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.PaginationResult.pageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Pair`2">
            <summary>
            存储两个值的对象
            </summary>
            <typeparam name="F">第一个值的类型</typeparam>
            <typeparam name="S">第二个值的类型</typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Pair`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Pair`2.#ctor(`0,`1)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Pair`2.First">
            <summary>
            第一个值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Pair`2.Second">
            <summary>
            第二个值
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Pair`2.ToString">
            <summary>
            将对象转化为对应的字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Triplet`3">
            <summary>
            存储三个值的类型
            </summary>
            <typeparam name="F">第一个值的类型</typeparam>
            <typeparam name="S">第二个值的类型</typeparam>
            <typeparam name="T">的三个值的类型</typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Triplet`3.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Triplet`3.#ctor(`0,`1,`2)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Triplet`3.First">
            <summary>
            第一个值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Triplet`3.Second">
            <summary>
            第二个值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Triplet`3.Third">
            <summary>
            第三个值
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Triplet`3.ToString">
            <summary>
            将对象转化为对应的字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.CaseClause">
            <summary>
            Encapsulates SQL CASE clause
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseClause.#ctor">
            <summary>
            Creates a new CaseClause
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CaseClause.Terms">
            <summary>
            Gets the <see cref="T:UWay.Skynet.Cloud.Data.CaseTerm"/> collection for this CaseClause
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CaseClause.ElseValue">
            <summary>
            Gets or sets the value CASE default value
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.CaseTerm">
            <summary>
            Encapsulates a single WHEN ... THEN ... statement
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTerm.#ctor(UWay.Skynet.Cloud.Data.WhereClause,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a new CaseTerm
            </summary>
            <param name="condition">Condition for the WHEN clause</param>
            <param name="val">Value for the THEN clause</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.CaseTermCollection">
            <summary>
            A collection of elements of type CaseTerm
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.#ctor">
            <summary>
            Initializes a new empty instance of the CaseTermCollection class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.#ctor(UWay.Skynet.Cloud.Data.CaseTerm[])">
            <summary>
            Initializes a new instance of the CaseTermCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new CaseTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.#ctor(UWay.Skynet.Cloud.Data.CaseTermCollection)">
            <summary>
            Initializes a new instance of the CaseTermCollection class, containing elements
            copied from another instance of CaseTermCollection
            </summary>
            <param name="items">
            The CaseTermCollection whose elements are to be added to the new CaseTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.AddRange(UWay.Skynet.Cloud.Data.CaseTerm[])">
            <summary>
            Adds the elements of an array to the end of this CaseTermCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this CaseTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.AddRange(UWay.Skynet.Cloud.Data.CaseTermCollection)">
            <summary>
            Adds the elements of another CaseTermCollection to the end of this CaseTermCollection.
            </summary>
            <param name="items">
            The CaseTermCollection whose elements are to be added to the end of this CaseTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.Add(UWay.Skynet.Cloud.Data.CaseTerm)">
            <summary>
            Adds an instance of type CaseTerm to the end of this CaseTermCollection.
            </summary>
            <param name="value">
            The CaseTerm to be added to the end of this CaseTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.Contains(UWay.Skynet.Cloud.Data.CaseTerm)">
            <summary>
            Determines whether a specfic CaseTerm value is in this CaseTermCollection.
            </summary>
            <param name="value">
            The CaseTerm value to locate in this CaseTermCollection.
            </param>
            <returns>
            true if value is found in this CaseTermCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.IndexOf(UWay.Skynet.Cloud.Data.CaseTerm)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this CaseTermCollection
            </summary>
            <param name="value">
            The CaseTerm value to locate in the CaseTermCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.CaseTerm)">
            <summary>
            Inserts an element into the CaseTermCollection at the specified index
            </summary>
            <param name="index">
            The index at which the CaseTerm is to be inserted.
            </param>
            <param name="value">
            The CaseTerm to insert.
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CaseTermCollection.Item(System.Int32)">
            <summary>
            Gets or sets the CaseTerm at the given index in this CaseTermCollection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.Remove(UWay.Skynet.Cloud.Data.CaseTerm)">
            <summary>
            Removes the first occurrence of a specific CaseTerm from this CaseTermCollection.
            </summary>
            <param name="value">
            The CaseTerm value to remove from this CaseTermCollection.
            </param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.CaseTermCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by CaseTermCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.Enumerator.#ctor(UWay.Skynet.Cloud.Data.CaseTermCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CaseTermCollection.Enumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.CaseTermCollection.Enumerator.System#Collections#IEnumerator#Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.Enumerator.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.Enumerator.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.CaseTermCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this CaseTermCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.CompareOperator">
            <summary>
            Specifies how tow operands are to be compared
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CompareOperator.Equal">
            <summary>Equal</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CompareOperator.NotEqual">
            <summary>Different</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CompareOperator.Greater">
            <summary>Left operand is greater</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CompareOperator.Less">
            <summary>Left operand is less</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CompareOperator.LessOrEqual">
            <summary>Left operand is less or equal</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CompareOperator.GreaterOrEqual">
            <summary>Left operand is greater or equal</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CompareOperator.BitwiseAnd">
            <summary>Make a bitwise AND and check the result for being not null (ex: (a &amp; b) > 0) ) </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.CompareOperator.Like">
            <summary>Substring. Use '%' signs in the value to match anything</summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DeleteQuery">
            <summary>
            Encapsulates a SQL DELETE statement
            
            </summary>
            <remarks>
            Use DeleteQuery to delete a row in database table.
            Set <see cref="P:UWay.Skynet.Cloud.Data.DeleteQuery.TableName"/> to the table you would like to delete rows from and use
            <see cref="P:UWay.Skynet.Cloud.Data.DeleteQuery.WhereClause"/> to specify which rows are to be deleted.
            </remarks>
            <example>
            <code>
            DeleteQuery query = new DeleteQuery("products");
            query.WhereClause.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("productId"), SqlExpression.Number(999), CompareOperator.Equal));
            RenderDelete(query);
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DeleteQuery.#ctor">
            <summary>
            Creates a DeleteQuery
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DeleteQuery.#ctor(System.String)">
            <summary>
            Creates a DeleteQuery
            </summary>
            <param name="tableName">Name of the table records are to be deleted from</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DeleteQuery.WhereClause">
            <summary>
            Specifies which rows are to be deleted
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.DeleteQuery.TableName">
            <summary>
            Gets or set the name of a table records are to be deleted from
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.DeleteQuery.Validate">
            <summary>
            Validates DeleteQuery
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.DistinctModifier">
            <summary>
            Encapsulates SQL DISTINCT or ALL modifiers
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DistinctModifier.Distinct">
            <summary>Only distinct rows will be returned</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.DistinctModifier.All">
            <summary>All rows will be returned</summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.InvalidQueryException">
            <summary>
            InvalidQueryException exception can be thrown when the renderer decides that a query is invalid or incompatible with the target database.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.InvalidQueryException.#ctor(System.String)">
            <summary>
            Creates a new InvalidQueryException
            </summary>
            <param name="text">Text of the exception</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.FromClause">
            <summary>
            Represents the FROM clause of a select statement
            </summary>
            <remarks>
            FromClause consists of a base table set by the <see cref="P:UWay.Skynet.Cloud.Data.FromClause.BaseTable">BaseTable</see> property
            and optional joins defined using the <see cref="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm,System.String,System.String)">Join</see> method.
            <para>
            SqlOM supports inner, outer and cross joins. 
            Inner join between two tables returns only rows which exist in both tables.
            Outer (Left, Right and Full) joins return rows when at least one of the tables has a matching row. 
            Left outer joins returns all rows from the left table and while the missing rows from the right are filled with nulls.
            Right outer join is the opposite of left. Full outer join returns all the rows from the left and the right tables while the missing rows from the opposite table are filled with nulls.
            Cross join does not match any keys and returns the cartesian product of both tables.
            For more information about joins consult SQL documentation.
            </para>	
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.FromClause.BaseTable">
            <summary>
            Gets or sets the base table for the FromClause
            </summary>
            <remarks>
            The base table begins the serie of joins. 
            If no joins are specified for the query the base table is the only table in the select statement.
            BaseTable must be set before <see cref="T:UWay.Skynet.Cloud.Data.SelectQuery">SelectQuery</see> can be rendered.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.TermExists(System.String)">
            <summary>
            Checks if a term with the specified RefName already exists in the FromClause.
            </summary>
            <param name="alias">The name of the term to be checked.</param>
            <returns>true if the term exists or false otherwise</returns>
            <remarks>
            TermExists matches <paramref name="alias">alias</paramref> to <see cref="P:UWay.Skynet.Cloud.Data.FromTerm.RefName">RefName</see> of all participating FromTerms.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.GetFromTerm(System.String)">
            <summary>
            Get FromTerm by alias
            </summary>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm,System.String,System.String)">
            <overloads>Use the following methods to define a join between two FromTerms.</overloads>
            <summary>
            Joins two tables using on a single join condition
            </summary>
            <param name="type">The type of join to be created.</param>
            <param name="leftTable">The left table</param>
            <param name="rightTable">The right table</param>
            <param name="leftField">Name of the OtherData in the left table to join on</param>
            <param name="rightField">Name of the OtherData in the right table to join on</param>
            <example>
            <code>
            query.FromClause.Join(JoinType.Left, tCustomers, tOrders, "customerId", "customerId");
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm)">
            <summary>
            Creates an uncoditional join
            </summary>
            <param name="type">Must be JoinType.CrossJoin</param>
            <param name="leftTable"></param>
            <param name="rightTable"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.JoinCondition)">
            <summary>
            Joins two tables using on a single join condition
            </summary>
            <param name="type">The type of join to be created.</param>
            <param name="leftTable">The left table</param>
            <param name="rightTable">The right table</param>
            <param name="cond">Equality condition to be applied on the join</param>
            <remarks>
            This overload is used to create the most common type of join, when two tables
            are joined on a single equality condition.
            </remarks>
            <example>
            <code>
            query.FromClause.Join(JoinType.Inner, tCustomers, tOrders, new JoinCondition("customerId", "customerId"));
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.JoinCondition,UWay.Skynet.Cloud.Data.JoinCondition)">
            <summary>
            Joins two tables using on a double join condition
            </summary>
            <param name="type">The type of join to be created.</param>
            <param name="leftTable">The left table</param>
            <param name="rightTable">The right table</param>
            <param name="cond1">First equality condition to be applied on the join</param>
            <param name="cond2">Second equality condition to be applied on the join</param>
            <remarks>
            A logical AND will be applied on <paramref name="cond1"/> and <paramref name="cond2"/>.
            Schematically, the resulting SQL will be ... x join y on (cond1 and cond2) ...
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.JoinCondition,UWay.Skynet.Cloud.Data.JoinCondition,UWay.Skynet.Cloud.Data.JoinCondition)">
            <summary>
            Joins two tables using on a triple join condition
            </summary>
            <param name="type">The type of join to be created.</param>
            <param name="leftTable">The left table</param>
            <param name="rightTable">The right table</param>
            <param name="cond1">First equality condition to be applied on the join</param>
            <param name="cond2">First equality condition to be applied on the join</param>
            <param name="cond3">First equality condition to be applied on the join</param>
            <remarks>
            A logical AND will be applied on all conditions.
            Schematically, the resulting SQL will be ... x join y on (cond1 and cond2 and cond3) ...
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.JoinCondition[])">
            <summary>
            Joins two tables using on an array join condition
            </summary>
            <param name="type">The type of join to be created.</param>
            <param name="leftTable">The left table</param>
            <param name="rightTable">The right table</param>
            <param name="conditions">An array of equality condition to be applied on the join</param>
            <remarks>
            A logical AND will be applied on the conditions.
            Schematically, the resulting SQL will be ... x join y on (cond1 and cond2 and cond3 and ... and condN) ...
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
            Joins two tables using on an arbitrary join condition
            </summary>
            <param name="type">The type of join to be created.</param>
            <param name="leftTable">The left table</param>
            <param name="rightTable">The right table</param>
            <param name="conditions">Specifies how the join should be performed</param>
            <remarks>
            Use this overload to create complex join conditions. 
            Note that not all <see cref="T:UWay.Skynet.Cloud.Data.WhereClause"/> operators and expressions are supported in joins.
            </remarks>
            <example>
            WhereClause condition = new WhereClause(WhereClauseRelationship.Or);
            condition.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("productId", tOrders), SqlExpression.Field("productId", tProducts), CompareOperator.Equal));
            condition.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("productName", tOrders), SqlExpression.Field("productName", tProducts), CompareOperator.Equal));
            query.FromClause.Join(JoinType.Left, tOrders, tProducts, condition);
            </example>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.FromClause.Joins">
            <summary>
            Gets the joins for this FromClause
            </summary>
            <remarks>
            Do not use this property to modify a FromClause. Use the <see cref="M:UWay.Skynet.Cloud.Data.FromClause.Join(UWay.Skynet.Cloud.Data.JoinType,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.FromTerm,System.String,System.String)">Join</see> method instead.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.FromClause.IsEmpty">
            <summary>
            Returns true if this FromClause has no terms at all
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromClause.Clone">
            <summary>
            Creates a clone of this FromClause
            </summary>
            <returns>A new FromClause which exactly the same as the current one.</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.FromTerm">
            <summary>
            Represents one term in the the FROM clause of a select statement.
            </summary>
            <remarks>
            A from term can be either a table, table reference or a subquery.
            subqueries. <see cref="M:UWay.Skynet.Cloud.Data.FromTerm.Table(System.String)">Table</see> is a name of a table or view with an optional alias. 
            Use <see cref="M:UWay.Skynet.Cloud.Data.FromTerm.Table(System.String)">TableRef</see> to specify a reference to another term. 
            You will usually use TableRef to specify one of the previously defined tables in a join.
            <see cref="M:UWay.Skynet.Cloud.Data.FromTerm.SubQuery(System.String,System.String)">SubQuery</see> creates a term with a subquery and mandatory alias. Please note that not all databases support sub-queires.
            </remarks>
            <example>
            The follwoing example selects some columns from two tables joined by a left outer join.
            <code>
            FromTerm tCustomers = FromTerm.Table("customers");
            FromTerm tProducts = FromTerm.Table("products", "p");
            FromTerm tOrders = FromTerm.Table("orders", "o");
            
            SelectQuery query = new SelectQuery();
            query.Columns.Add(new SelectColumn("name", tCustomers));
            query.Columns.Add(new SelectColumn("name", tProducts));
            query.FromClause.BaseTable = tCustomers;
            query.FromClause.Join(JoinType.Inner, query.FromClause.BaseTable, tOrders, "customerId", "customerId");
            query.FromClause.Join(JoinType.Inner, tOrders, tProducts, "productId", "productId");
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromTerm.Table(System.String)">
            <summary>
            Creates a FromTerm which represents a database table or view.
            </summary>
            <param name="name">Name of the table or view</param>
            <returns>A FromTerm which represents a database table or view</returns>
            <remarks>Creates a <see cref="T:UWay.Skynet.Cloud.Data.FromTerm">FromTerm</see> without an alias. 
            The created term will be referenced by the table's name.</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromTerm.Table(System.String,System.String)">
            <summary>
            Creates a FromTerm which represents a database table or view.
            </summary>
            <param name="tableName">Name of the table or view</param>
            <param name="alias">Alias of the FromTerm</param>
            <returns>A FromTerm which represents a database table or view</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromTerm.Table(System.String,System.String,System.String)">
            <summary>
            Creates a FromTerm which represents a database table or view.
            </summary>
            <param name="tableName">Name of the table or view</param>
            <param name="alias">Alias of the FromTerm</param>
            <param name="ns">Namespace of the table.</param>
            <returns>A FromTerm which represents a database table or view</returns>
            <remarks>Use the <paramref name="ns"/> parameter to resolve table ownership</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromTerm.Table(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a FromTerm which represents a database table or view.
            </summary>
            <param name="tableName">Name of the table or view</param>
            <param name="alias">Alias of the FromTerm</param>
            <param name="ns1">First table namespace</param>
            <param name="ns2">Second table namespace</param>
            <returns>A FromTerm which represents a database table or view</returns>
            <remarks>Use the <paramref name="ns1"/> parameter to set table database and <paramref name="ns2"/> to set table owner.</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromTerm.TermRef(System.String)">
            <summary>
            Creates a FromTerm which refernces abother FromTerm.
            </summary>
            <param name="name">The name of the referenced term.</param>
            <returns>A FromTerm which refernces another FromTerm.</returns>
            <remarks>
            Use TermRef to reference other terms of a from clause by <see cref="P:UWay.Skynet.Cloud.Data.FromTerm.RefName">RefName</see>
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromTerm.SubQuery(System.String,System.String)">
            <summary>
            Creates a FromTerm which represents a sub-query.
            </summary>
            <param name="query">sub-query sql</param>
            <param name="alias">term alias</param>
            <returns>A FromTerm which represents a sub-query.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromTerm.SubQuery(UWay.Skynet.Cloud.Data.SelectQuery,System.String)">
            <summary>
            Creates a FromTerm which represents a sub-query.
            </summary>
            <param name="query">A SelectQuery instance representing the sub query</param>
            <param name="alias">term alias</param>
            <returns>A FromTerm which represents a sub-query.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.FromTerm.SubQuery(UWay.Skynet.Cloud.Data.SqlUnion,System.String)">
            <summary>
            Creates a FromTerm which represents a sub-query.
            </summary>
            <param name="query">A SqlUnion instance representing the sub query</param>
            <param name="alias">term alias</param>
            <returns>A FromTerm which represents a sub-query.</returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.FromTerm.Expression">
            <summary>
            Gets the expression defined for this term.
            </summary>
            <remarks>
            The value of this property depends on the type of term. It will be table name
            for Table terms, SQL for SubQueries or null for TermRefs.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.FromTerm.Alias">
            <summary>
            Gets the alias of the term.
            </summary>
            <remarks>This property can be null for some types of FromTerm</remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.FromTerm.Type">
            <summary>
            Gets the type of the FromTerm
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.FromTerm.RefName">
            <summary>
            Gets the reference name of this term.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.FromTermType">
            <summary>
            Specifies the type of a FromTerm
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.FromTermType.Table">
            <summary>The FromTerm designates a database table or view</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.FromTermType.SubQuery">
            <summary>The FromTerm designates a sub-query. Not all databases support sub-queries.</summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.GroupByTerm">
            <summary>
            Represents one term in a GROUP BY clause
            </summary>
            <remarks>
            Use OrderByTerm to specify how rows of a result-set should be grouped. 
            Please note that when you use GROUP BY, your SELECT statement can only include columns which are specified in the GROUP BY clause and aggregation columns.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTerm.#ctor(System.String,UWay.Skynet.Cloud.Data.FromTerm)">
            <summary>
            Creates a GROUP BY term with OtherData name and table alias
            </summary>
            <param name="OtherData">Name of a OtherData to group by</param>
            <param name="table">The table this OtherData belongs to</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTerm.#ctor(System.String)">
            <summary>
            Creates a GROUP BY term with OtherData name and no FromTerm alias
            </summary>
            <param name="OtherData">Name of a OtherData to group by</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.GroupByTerm.Field">
            <summary>
            Gets the name of a OtherData to group by
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.GroupByTerm.Table">
            <summary>
            Gets the table the OtherData belongs to
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.GroupByTerm.TableAlias">
            <summary>
            Gets the table alias for this GroupByTerm
            </summary>
            <remarks>
            Gets the name of a FromTerm the OtherData specified by <see cref="P:UWay.Skynet.Cloud.Data.GroupByTerm.Field">Field</see> property.
            </remarks>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.GroupByTermCollection">
            <summary>
            A collection of elements of type GroupByTerm
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.#ctor">
            <summary>
            Initializes a new empty instance of the GroupByTermCollection class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.#ctor(UWay.Skynet.Cloud.Data.GroupByTerm[])">
            <summary>
            Initializes a new instance of the GroupByTermCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new GroupByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.#ctor(UWay.Skynet.Cloud.Data.GroupByTermCollection)">
            <summary>
            Initializes a new instance of the GroupByTermCollection class, containing elements
            copied from another instance of GroupByTermCollection
            </summary>
            <param name="items">
            The GroupByTermCollection whose elements are to be added to the new GroupByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.AddRange(UWay.Skynet.Cloud.Data.GroupByTerm[])">
            <summary>
            Adds the elements of an array to the end of this GroupByTermCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this GroupByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.AddRange(UWay.Skynet.Cloud.Data.GroupByTermCollection)">
            <summary>
            Adds the elements of another GroupByTermCollection to the end of this GroupByTermCollection.
            </summary>
            <param name="items">
            The GroupByTermCollection whose elements are to be added to the end of this GroupByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.Add(UWay.Skynet.Cloud.Data.GroupByTerm)">
            <summary>
            Adds an instance of type GroupByTerm to the end of this GroupByTermCollection.
            </summary>
            <param name="value">
            The GroupByTerm to be added to the end of this GroupByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.Contains(UWay.Skynet.Cloud.Data.GroupByTerm)">
            <summary>
            Determines whether a specfic GroupByTerm value is in this GroupByTermCollection.
            </summary>
            <param name="value">
            The GroupByTerm value to locate in this GroupByTermCollection.
            </param>
            <returns>
            true if value is found in this GroupByTermCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.IndexOf(UWay.Skynet.Cloud.Data.GroupByTerm)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this GroupByTermCollection
            </summary>
            <param name="value">
            The GroupByTerm value to locate in the GroupByTermCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.GroupByTerm)">
            <summary>
            Inserts an element into the GroupByTermCollection at the specified index
            </summary>
            <param name="index">
            The index at which the GroupByTerm is to be inserted.
            </param>
            <param name="value">
            The GroupByTerm to insert.
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.GroupByTermCollection.Item(System.Int32)">
            <summary>
            Gets or sets the GroupByTerm at the given index in this GroupByTermCollection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.Remove(UWay.Skynet.Cloud.Data.GroupByTerm)">
            <summary>
            Removes the first occurrence of a specific GroupByTerm from this GroupByTermCollection.
            </summary>
            <param name="value">
            The GroupByTerm value to remove from this GroupByTermCollection.
            </param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.GroupByTermCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by GroupByTermCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.Enumerator.#ctor(UWay.Skynet.Cloud.Data.GroupByTermCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.GroupByTermCollection.Enumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.Enumerator.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.Enumerator.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.GroupByTermCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this GroupByTermCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.InsertQuery">
            <summary>
            Encapsulates a SQL INSERT statement
            </summary>
            <remarks>
            Use InsertQuery to insert a new row into a database table.
            Set <see cref="P:UWay.Skynet.Cloud.Data.InsertQuery.TableName"/> to the table you would like to insert into and use
            the <see cref="P:UWay.Skynet.Cloud.Data.InsertQuery.Terms"/> collection to specify values to be inserted.
            </remarks>
            <example>
            <code>
            InsertQuery query = new InsertQuery("products");
            query.Terms.Add(new UpdateTerm("productId", SqlExpression.Number(999)));
            query.Terms.Add(new UpdateTerm("name", SqlExpression.String("Temporary Test Product")));
            query.Terms.Add(new UpdateTerm("price", SqlExpression.Number(123.45)));
            query.Terms.Add(new UpdateTerm("quantaty", SqlExpression.Number(97)));
            RenderInsert(query);
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.InsertQuery.#ctor">
            <summary>
            Create an InsertQuery
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.InsertQuery.#ctor(System.String)">
            <summary>
            Create an InsertQuery
            </summary>
            <param name="tableName">The name of the table to be inseserted into</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.InsertQuery.Terms">
            <summary>
            Gets the collection if column-value pairs
            </summary>
            <remarks>
            Terms specify which values should be inserted into the table.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.InsertQuery.TableName">
            <summary>
            Gets or set the name of a table to be inserted into
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.InsertQuery.Validate">
            <summary>
            Validates InsertQuery
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Join">
            <summary>
            Represnts a Join between two tables.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.JoinCollection">
            <summary>
              A collection that stores <see cref='T:UWay.Skynet.Cloud.Data.Join'/> objects.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.#ctor">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.#ctor(UWay.Skynet.Cloud.Data.JoinCollection)">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> based on another <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
            <param name='val'>
              A <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.#ctor(UWay.Skynet.Cloud.Data.Join[])">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> containing any array of <see cref='T:UWay.Skynet.Cloud.Data.Join'/> objects.
            </summary>
            <param name='val'>
                  A array of <see cref='T:UWay.Skynet.Cloud.Data.Join'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.JoinCollection.Item(System.Int32)">
            <summary>
              Represents the entry at the specified index of the <see cref='T:UWay.Skynet.Cloud.Data.Join'/>.
            </summary>
            <param name='index'>The zero-based index of the entry to locate in the collection.</param>
            <value>The entry at the specified index of the collection.</value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.Add(UWay.Skynet.Cloud.Data.Join)">
            <summary>
              Adds a <see cref='T:UWay.Skynet.Cloud.Data.Join'/> with the specified value to the 
              <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.Join'/> to add.</param>
            <returns>The index at which the new element was inserted.</returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.JoinCollection.AddRange(UWay.Skynet.Cloud.Data.Join[])'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.AddRange(UWay.Skynet.Cloud.Data.Join[])">
            <summary>
              Copies the elements of an array to the end of the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
            <param name='val'>
               An array of type <see cref='T:UWay.Skynet.Cloud.Data.Join'/> containing the objects to add to the collection.
            </param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.JoinCollection.Add(UWay.Skynet.Cloud.Data.Join)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.AddRange(UWay.Skynet.Cloud.Data.JoinCollection)">
            <summary>
              Adds the contents of another <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> to the end of the collection.
            </summary>
            <param name='val'>
               A <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> containing the objects to add to the collection.
            </param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.JoinCollection.Add(UWay.Skynet.Cloud.Data.Join)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.Contains(UWay.Skynet.Cloud.Data.Join)">
            <summary>
              Gets a value indicating whether the 
               <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> contains the specified <see cref='T:UWay.Skynet.Cloud.Data.Join'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.Join'/> to locate.</param>
            <returns>
            <see langword='true'/> if the <see cref='T:UWay.Skynet.Cloud.Data.Join'/> is contained in the collection; 
              otherwise, <see langword='false'/>.
            </returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.JoinCollection.IndexOf(UWay.Skynet.Cloud.Data.Join)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.CopyTo(UWay.Skynet.Cloud.Data.Join[],System.Int32)">
            <summary>
              Copies the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.
            </summary>
            <param name='array'>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.</param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <exception cref='T:System.ArgumentException'>
              <para><paramref name='array'/> is multidimensional.</para>
              <para>-or-</para>
              <para>The number of elements in the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> is greater than
                    the available space between <paramref name='arrayIndex'/> and the end of
                    <paramref name='array'/>.</para>
            </exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='arrayIndex'/> is less than <paramref name='array'/>'s lowbound. </exception>
            <seealso cref='T:System.Array'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.IndexOf(UWay.Skynet.Cloud.Data.Join)">
            <summary>
               Returns the index of a <see cref='T:UWay.Skynet.Cloud.Data.Join'/> in 
                  the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.Join'/> to locate.</param>
            <returns>
              The index of the <see cref='T:UWay.Skynet.Cloud.Data.Join'/> of <paramref name='val'/> in the 
              <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>, if found; otherwise, -1.
            </returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.JoinCollection.Contains(UWay.Skynet.Cloud.Data.Join)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.Join)">
            <summary>
              Inserts a <see cref='T:UWay.Skynet.Cloud.Data.Join'/> into the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/> at the specified index.
            </summary>
            <param name='index'>The zero-based index where <paramref name='val'/> should be inserted.</param>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.Join'/> to insert.</param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.JoinCollection.Add(UWay.Skynet.Cloud.Data.Join)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.GetEnumerator">
            <summary>
             Returns an enumerator that can iterate through the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
            <seealso cref='T:System.Collections.IEnumerator'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.Remove(UWay.Skynet.Cloud.Data.Join)">
            <summary>
              Removes a specific <see cref='T:UWay.Skynet.Cloud.Data.Join'/> from the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.Join'/> to remove from the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.</param>
            <exception cref='T:System.ArgumentException'><paramref name='val'/> is not found in the Collection.</exception>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.JoinCollection.JoinEnumerator">
            <summary>
              Enumerator that can iterate through a JoinCollection.
            </summary>
            <seealso cref='T:System.Collections.IEnumerator'/>
            <seealso cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>
            <seealso cref='T:UWay.Skynet.Cloud.Data.Join'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.JoinEnumerator.#ctor(UWay.Skynet.Cloud.Data.JoinCollection)">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection.JoinEnumerator'/>.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.JoinCollection.JoinEnumerator.Current">
            <summary>
              Gets the current <see cref='T:UWay.Skynet.Cloud.Data.Join'/> in the <seealso cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.JoinEnumerator.MoveNext">
            <summary>
              Advances the enumerator to the next <see cref='T:UWay.Skynet.Cloud.Data.Join'/> of the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCollection.JoinEnumerator.Reset">
            <summary>
              Sets the enumerator to its initial position, which is before the first element in the <see cref='T:UWay.Skynet.Cloud.Data.JoinCollection'/>.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.JoinCondition">
            <summary>
            Describes a simple join condition.
            </summary>
            <remarks>
            <see cref="T:UWay.Skynet.Cloud.Data.JoinCondition"/> encapsulates a pair of fields, one from the
            left joined table and one from the right table. 
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCondition.#ctor(System.String)">
            <summary>
            Creates a Natural JoinCondition
            </summary>
            <param name="OtherData">Name of the OtherData in both tables</param>
            <remarks>
            Natural join means that two table are joined on an identically named fields
            in both tables
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.JoinCondition.#ctor(System.String,System.String)">
            <summary>
            Creates a new JoinCondition
            </summary>
            <param name="leftField">Name of the OtherData in the left table to join on</param>
            <param name="rightField">Name of the OtherData in the right table to join on</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.JoinCondition.LeftField">
            <summary>
            Gets the name of the OtherData in the left table to join on
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.JoinCondition.RightField">
            <summary>
            Gets the name of the OtherData in the right table to join on
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.OrderByTerm">
            <summary>
            Represents one term in an ORDER BY clause
            </summary>
            <remarks>
            Use OrderByTerm to specify how a result-set should be ordered.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTerm.#ctor(System.String,UWay.Skynet.Cloud.Data.FromTerm,UWay.Skynet.Cloud.Data.OrderByDirection)">
            <summary>
            Creates an ORDER BY term with OtherData name and table alias
            </summary>
            <param name="OtherData">Name of a OtherData to order by</param>
            <param name="table">The table this OtherData belongs to</param>
            <param name="dir">Order by direction</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTerm.#ctor(System.String,UWay.Skynet.Cloud.Data.OrderByDirection)">
            <summary>
            Creates an ORDER BY term with OtherData name and no table alias
            </summary>
            <param name="OtherData">Name of a OtherData to order by</param>
            <param name="dir">Order by direction</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTerm.#ctor(UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.OrderByDirection)">
            <summary>
            Creates an ORDER BY term with OtherData name and no table alias
            </summary>
            <param name="OtherData">Name of a OtherData to order by</param>
            <param name="dir">Order by direction</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.OrderByTerm.Direction">
            <summary>
            Gets the direction for this OrderByTerm
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.OrderByTerm.Field">
            <summary>
            Gets the name of a OtherData to order by
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.OrderByTerm.Exp">
            <summary>
            Gets the name of a OtherData to order by
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.OrderByTerm.TableAlias">
            <summary>
            Gets the table alias for this OrderByTerm
            </summary>
            <remarks>
            Gets the name of a FromTerm the OtherData specified by <see cref="P:UWay.Skynet.Cloud.Data.OrderByTerm.Field">Field</see> property.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.OrderByTerm.Table">
            <summary>
            Returns the FromTerm associated with this OrderByTerm
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.OrderByTermCollection">
            <summary>
            A collection of elements of type OrderByTerm
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.#ctor">
            <summary>
            Initializes a new empty instance of the OrderByTermCollection class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.#ctor(UWay.Skynet.Cloud.Data.OrderByTerm[])">
            <summary>
            Initializes a new instance of the OrderByTermCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new OrderByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.#ctor(UWay.Skynet.Cloud.Data.OrderByTermCollection)">
            <summary>
            Initializes a new instance of the OrderByTermCollection class, containing elements
            copied from another instance of OrderByTermCollection
            </summary>
            <param name="items">
            The OrderByTermCollection whose elements are to be added to the new OrderByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.AddRange(UWay.Skynet.Cloud.Data.OrderByTerm[])">
            <summary>
            Adds the elements of an array to the end of this OrderByTermCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this OrderByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.AddRange(UWay.Skynet.Cloud.Data.OrderByTermCollection)">
            <summary>
            Adds the elements of another OrderByTermCollection to the end of this OrderByTermCollection.
            </summary>
            <param name="items">
            The OrderByTermCollection whose elements are to be added to the end of this OrderByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.Add(UWay.Skynet.Cloud.Data.OrderByTerm)">
            <summary>
            Adds an instance of type OrderByTerm to the end of this OrderByTermCollection.
            </summary>
            <param name="value">
            The OrderByTerm to be added to the end of this OrderByTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.Contains(UWay.Skynet.Cloud.Data.OrderByTerm)">
            <summary>
            Determines whether a specfic OrderByTerm value is in this OrderByTermCollection.
            </summary>
            <param name="value">
            The OrderByTerm value to locate in this OrderByTermCollection.
            </param>
            <returns>
            true if value is found in this OrderByTermCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.IndexOf(UWay.Skynet.Cloud.Data.OrderByTerm)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this OrderByTermCollection
            </summary>
            <param name="value">
            The OrderByTerm value to locate in the OrderByTermCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.OrderByTerm)">
            <summary>
            Inserts an element into the OrderByTermCollection at the specified index
            </summary>
            <param name="index">
            The index at which the OrderByTerm is to be inserted.
            </param>
            <param name="value">
            The OrderByTerm to insert.
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.OrderByTermCollection.Item(System.Int32)">
            <summary>
            Gets or sets the OrderByTerm at the given index in this OrderByTermCollection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.Remove(UWay.Skynet.Cloud.Data.OrderByTerm)">
            <summary>
            Removes the first occurrence of a specific OrderByTerm from this OrderByTermCollection.
            </summary>
            <param name="value">
            The OrderByTerm value to remove from this OrderByTermCollection.
            </param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.OrderByTermCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by OrderByTermCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.Enumerator.#ctor(UWay.Skynet.Cloud.Data.OrderByTermCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.OrderByTermCollection.Enumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.Enumerator.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.Enumerator.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.OrderByTermCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this OrderByTermCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer">
            <summary>
            Defines methods common to all SqlOM renderers.
            </summary>
            <remarks>
            Derive from <see cref="T:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer"/> when you wish to develop a brand new renderer. 
            You can write 100% proprietery code for while implementing the interface methods but it is not advised.
            Instead you can inherit the <see cref="T:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer"/> class which implements 80-95% of your rendering functionality.
            All renderers must return a string as their rendering result.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.DateFormat">
            <summary>
            Sets or returns default date format for the database
            </summary>
            <remarks>
            Set DateFormat property when your database is configured to use a different date format
            then "yyyy-MM-dd HH:mm:ss". SqlServer and MySql are configured to this format by default.
            Oracle's default date format is "dd-MMM-yy HH:mm:ss".
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.RenderSelect(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a SELECT statement
            </summary>
            <param name="query">Query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.RenderRowCount(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a row count SELECT statement. 
            </summary>
            <param name="query">Query definition to count rows for</param>
            <returns>Generated SQL statement</returns>
            <remarks>
            Renders a SQL statement which returns a result set with one row and one cell which contains the number of rows <paramref name="query"/> can generate. 
            The generated statement will work nicely with <see cref="M:System.Data.IDbCommand.ExecuteScalar"/> method.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.RenderPage(System.Int32,System.Int32,System.Int32,UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a paged SELECT statement
            </summary>
            <param name="pageIndex">The zero based index of the page to be returned</param>
            <param name="pageSize">The size of a page</param>
            <param name="totalRowCount">Total number of rows the query would yeild if not paged</param>
            <param name="query">Query definition to apply paging on</param>
            <returns>Generated SQL statement</returns>
            <remarks>
            Generating pagination SQL is different on different databases because every database offers different levels of support for such functioanality.
            Some databases (SqlServer 2000) require the programmer to supply the total number of rows to produce a page. If your renderer does not use the totalRowCount parameter, please state so in your implementation documentation.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.RenderUpdate(UWay.Skynet.Cloud.Data.UpdateQuery)">
            <summary>
            Renders an UPDATE statement
            </summary>
            <param name="query">UPDATE query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.RenderInsert(UWay.Skynet.Cloud.Data.InsertQuery)">
            <summary>
            Renders an INSERT statement
            </summary>
            <param name="query">INSERT query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.RenderDelete(UWay.Skynet.Cloud.Data.DeleteQuery)">
            <summary>
            Renders an DELETE statement
            </summary>
            <param name="query">DELETE query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.RenderUnion(UWay.Skynet.Cloud.Data.SqlUnion)">
            <summary>
            Renders a UNION clause
            </summary>
            <param name="union">Union definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.QueryTable">
            <summary>
            查询数据库中的所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.QueryTableByTableName">
            <summary>
            查询数据库中的所有表和表中对应的列条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer.QueryTableColumns">
            <summary>
            查询数据库中的所有表
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Render.MySqlRenderer">
            <summary>
            Renderer for MySql
            </summary>
            <remarks>
            Use MySqlRenderer to render SQL statements for MySql database.
            This version of Sql.Net has been tested with MySql 4
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.MySqlRenderer.#ctor">
            <summary>
            Creates a new MySqlRenderer
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.MySqlRenderer.IfNull(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Renders IfNull SqlExpression
            </summary>
            <param name="builder"></param>
            <param name="expr"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.MySqlRenderer.RenderSelect(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a SELECT statement
            </summary>
            <param name="query">Query definition</param>
            <returns>Generated SQL statement</returns>
            <remarks>MySql 4.1 does not support GroupByWithCube option. If a query has <see cref="P:UWay.Skynet.Cloud.Data.SelectQuery.GroupByWithCube"/> set an <see cref="T:UWay.Skynet.Cloud.Data.InvalidQueryException"/> exception will be thrown. </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.MySqlRenderer.RenderRowCount(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a row count SELECT statement. 
            </summary>
            <param name="query">Query definition to count rows for</param>
            <returns>Generated SQL statement</returns>
            <remarks>
            Renders a SQL statement which returns a result set with one row and one cell which contains the number of rows <paramref name="query"/> can generate. 
            The generated statement will work nicely with <see cref="M:System.Data.IDbCommand.ExecuteScalar"/> method.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.MySqlRenderer.RenderPage(System.Int32,System.Int32,System.Int32,UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a SELECT statement which a result-set page
            </summary>
            <param name="pageIndex">The zero based index of the page to be returned</param>
            <param name="pageSize">The size of a page</param>
            <param name="totalRowCount">Total number of rows the query would yeild if not paged</param>
            <param name="query">Query definition to apply paging on</param>
            <returns>Generated SQL statement</returns>
            <remarks>
            Parameter <paramref name="totalRowCount"/> is ignored.
            </remarks>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Render.OracleRenderer">
            <summary>
            Renderer for Oracle
            </summary>
            <remarks>
            Use OracleRenderer to render SQL statements for Oracle database.
            This version of Sql.Net has been tested with Oracle 9i.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.OracleRenderer.#ctor">
            <summary>
            Creates a new instance of OracleRenderer
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.OracleRenderer.IfNull(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Renders IfNull SqlExpression
            </summary>
            <param name="builder"></param>
            <param name="expr"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Render.OracleRenderer.UpperCaseIdentifiers">
            <summary>
            Returns true. 
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.OracleRenderer.BitwiseAnd(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.WhereTerm)">
            <summary>
            Renders bitwise and
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.OracleRenderer.RenderSelect(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a SELECT statement
            </summary>
            <param name="query">Query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.OracleRenderer.RenderRowCount(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a row count SELECT statement. 
            </summary>
            <param name="query">Query definition to count rows for</param>
            <returns>Generated SQL statement</returns>
            <remarks>
            Renders a SQL statement which returns a result set with one row and one cell which contains the number of rows <paramref name="query"/> can generate. 
            The generated statement will work nicely with <see cref="M:System.Data.IDbCommand.ExecuteScalar"/> method.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.OracleRenderer.OrderByTerm(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.OrderByTerm)">
            <summary>
            Renders a single ORDER BY term
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer">
            <summary>
            Provides common implementation for ISqlOmRenderer
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.#ctor(System.Char,System.Char)">
            <summary>
            Creates a new SqlOmRenderer
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.DateFormat">
            <summary>
            Gets or sets a date format string
            </summary>
            <remarks>
            Use <see cref="P:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.DateFormat"/> to specify how date values should be formatted
            in order to be properly parsed by your database.
            Specific renderers set this property to the appliciable default value, so you
            only need to change this if your database is configured to use other then default date format.
            <para>
            DateFormat will be used to format <see cref="T:System.DateTime"/> values which have the Hour, Minute, Second and Milisecond properties set to 0.
            Otherwise, <see cref="P:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.DateTimeFormat"/> will be used.
            </para>
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.DateTimeFormat">
            <summary>
            Gets or sets a date-time format string
            </summary>
            <remarks>
            Use <see cref="P:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.DateTimeFormat"/> to specify how timestamp values should be formatted
            in order to be properly parsed by your database.
            Specific renderers set this property to the appliciable default value, so you
            only need to change this if your database is configured to use other then default date format.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderSelect(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a SELECT statement
            </summary>
            <param name="query">Query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderRowCount(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a row count SELECT statement. 
            </summary>
            <param name="query">Query definition to count rows for</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.UpperCaseIdentifiers">
            <summary>
            Specifies weather all identifiers should be converted to upper case while rendering
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderUpdate(UWay.Skynet.Cloud.Data.UpdateQuery)">
            <summary>
            Renders an UPDATE statement
            </summary>
            <param name="query">UPDATE query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderInsert(UWay.Skynet.Cloud.Data.InsertQuery)">
            <summary>
            Renders an INSERT statement
            </summary>
            <param name="query">INSERT query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderDelete(UWay.Skynet.Cloud.Data.DeleteQuery)">
            <summary>
            Renders an DELETE statement
            </summary>
            <param name="query">DELETE query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderUnion(UWay.Skynet.Cloud.Data.SqlUnion)">
            <summary>
            Renders a UNION clause
            </summary>
            <param name="union">Union definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderPage(System.Int32,System.Int32,System.Int32,UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a SELECT statement which a result-set page
            </summary>
            <param name="pageIndex">The zero based index of the page to be returned</param>
            <param name="pageSize">The size of a page</param>
            <param name="totalRowCount">Total number of rows the query would yeild if not paged</param>
            <param name="query">Query definition to apply paging on</param>
            <returns>Generated SQL statement</returns>
            <remarks>
            To generate pagination SQL you must supply <paramref name="totalRowCount"/>.
            To aquire the total number of rows use the <see cref="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderRowCount(UWay.Skynet.Cloud.Data.SelectQuery)"/> method.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Select(System.Text.StringBuilder,System.String)">
            <summary>
            Renders a the section of a SELECT clause
            </summary>
            <param name="builder">Select statement string builder</param>
            <param name="section"> SQL section</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Select(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Renders a the beginning of a SELECT clause with an optional DISTINCT setting
            </summary>
            <param name="builder">Select statement string builder</param>
            <param name="distinct">Turns on or off SQL distinct option</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.SelectColumns(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SelectColumnCollection)">
            <summary>
            Renders columns of SELECT clause
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.SelectColumn(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SelectColumn)">
            <summary>
            Renders a sinle select column
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Coma(System.Text.StringBuilder)">
            <summary>
            Renders a separator between select columns
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.From(System.Text.StringBuilder)">
            <summary>
            Renders the begining of a FROM clause
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.FromClause(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.FromClause,System.String)">
            <summary>
            Renders the terms of a from clause
            </summary>
            <param name="builder"></param>
            <param name="fromClause"></param>
            <param name="tableSpace">Common prefix for all tables in the clause</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RenderFromTerm(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.FromTerm,System.String)">
            <summary>
            Renders a single FROM term
            </summary>
            <param name="builder"></param>
            <param name="table"></param>
            <param name="tableSpace">Common prefix for all tables in the term</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.TableNamespace(System.Text.StringBuilder,System.String)">
            <summary>
            Renders the table namespace
            </summary>
            <param name="builder"></param>
            <param name="ns"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Where(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
            Renders the begining of a WHERE statement
            </summary>
            <param name="builder"></param>
            <param name="group"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Having(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
            Renders the begining of a HAVING statement
            </summary>
            <param name="builder"></param>
            <param name="group"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.WhereClause(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
            Recursivly renders a WhereClause
            </summary>
            <param name="builder"></param>
            <param name="group"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.BitwiseAnd(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.WhereTerm)">
            <summary>
            Renders bitwise and
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.WhereClause(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.WhereTerm)">
            <summary>
            Renders a single WhereTerm
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.IfNull(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Renders IfNull SqlExpression
            </summary>
            <param name="builder"></param>
            <param name="expr"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Round(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Renders a SqlExpression of type Function 
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <param name="param"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Expression(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Renders SqlExpression
            </summary>
            <param name="builder"></param>
            <param name="expr"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Function(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlAggregationFunction,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Renders a SqlExpression of type Function 
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <param name="param"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Constant(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlConstant)">
            <summary>
            Renders a constant
            </summary>
            <param name="builder"></param>
            <param name="expr"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Operator(System.Text.StringBuilder,UWay.Skynet.Cloud.Linq.FilterOperator)">
            <summary>
            Renders a comaprison operator
            </summary>
            <param name="builder"></param>
            <param name="op"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.ConstantList(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlConstantCollection)">
            <summary>
            Renders a list of values
            </summary>
            <param name="builder"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.SqlEncode(System.String)">
            <summary>
            Encodes a textual string.
            </summary>
            <param name="val">Text to be encoded</param>
            <returns>Encoded text</returns>
            <remarks>All text string must be encoded before they are appended to a SQL statement.</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.RelationshipOperator(System.Text.StringBuilder,UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator)">
            <summary>
            Renders a relationship operator
            </summary>
            <param name="builder"></param>
            <param name="relationship"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.GroupBy(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.GroupByTermCollection)">
            <summary>
            Renders the begining of a GROUP BY statement.
            </summary>
            <param name="builder"></param>
            <param name="groupByTerms"></param>
            <remarks>If <paramref name="groupByTerms"/> has no items, nothing will be appended.</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.GroupByTerms(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.GroupByTermCollection)">
            <summary>
            Renders GROUP BY terms 
            </summary>
            <param name="builder"></param>
            <param name="groupByTerms"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.GroupByTerm(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.GroupByTerm)">
            <summary>
            Renders a single GROUP BY term
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.OrderBy(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.OrderByTermCollection)">
            <summary>
            Renders the begining of a ORDER BY statement.
            </summary>
            <param name="builder"></param>
            <param name="orderByTerms"></param>
            <remarks>If <paramref name="orderByTerms"/> has no items, nothing will be appended.</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.OrderByTerms(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.OrderByTermCollection)">
            <summary>
            Renders ORDER BY terms
            </summary>
            <param name="builder"></param>
            <param name="orderByTerms"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.OrderByTerm(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.OrderByTerm)">
            <summary>
            Renders a single ORDER BY term
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Identifier(System.Text.StringBuilder,System.String)">
            <summary>
            Renders an identifier name.
            </summary>
            <param name="builder"></param>
            <param name="name">Identifier name</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.QualifiedIdentifier(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Renders a fully qualified identifer.
            </summary>
            <param name="builder">Select statement string builder</param>
            <param name="qnamespace">Identifier namespace</param>
            <param name="name">Identifier name</param>
            <remarks>
            <see cref="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.QualifiedIdentifier(System.Text.StringBuilder,System.String,System.String)"/> is usually to render database fields with optional table alias prefixes.
            <paramref name="name"/> is a mandatory parameter while <paramref name="qnamespace"/> is optional.
            If <paramref name="qnamespace"/> is null, identifier will be rendered without a namespace (aka table alias)
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Update(System.Text.StringBuilder,System.String)">
            <summary>
            Renders a the beginning of an UPDATE clause with the table name
            </summary>
            <param name="builder"></param>
            <param name="tableName">Name of the table to be updated</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.UpdateTerms(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.UpdateTermCollection)">
            <summary>
            Renders update phrases
            </summary>
            <param name="builder"></param>
            <param name="terms"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.UpdateTerm(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.UpdateTerm)">
            <summary>
            Render a single update phrase
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.UpdateStatement(UWay.Skynet.Cloud.Data.UpdateQuery)">
            <summary>
            Renders the whole UPDATE statement using ANSI SQL standard
            </summary>
            <param name="query"></param>
            <returns>The rendered SQL string</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Insert(System.Text.StringBuilder,System.String)">
            <summary>
            Render the beginning of an INSERT statement with table name
            </summary>
            <param name="builder"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.InsertColumns(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.UpdateTermCollection)">
            <summary>
            Render the list of columns which are to be inserted.
            </summary>
            <param name="builder"></param>
            <param name="terms"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.InsertColumn(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.UpdateTerm)">
            <summary>
            Render a single column name in an INSERT statement
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.InsertValues(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.UpdateTermCollection)">
            <summary>
            Render the values of an INSERT statement
            </summary>
            <param name="builder"></param>
            <param name="terms"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.InsertValue(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.UpdateTerm)">
            <summary>
            Render a single INSERT value
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.InsertStatement(UWay.Skynet.Cloud.Data.InsertQuery)">
            <summary>
            Render the whole INSERT statement in ANSI standard
            </summary>
            <param name="query"></param>
            <returns>The rendered SQL INSERT statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.Delete(System.Text.StringBuilder,System.String)">
            <summary>
            Render the beginning of a DELETE statement
            </summary>
            <param name="builder"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.DeleteStatement(UWay.Skynet.Cloud.Data.DeleteQuery)">
            <summary>
            Render the whole DELETE statement in ANSI SQL standard
            </summary>
            <param name="query"></param>
            <returns>The rendered SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.CaseClause(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.CaseClause)">
            <summary>
            Renders a CaseCluase
            </summary>
            <param name="builder"></param>
            <param name="clause"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.CaseTerm(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.CaseTerm)">
            <summary>
            Renders a CaseTerm
            </summary>
            <param name="builder"></param>
            <param name="term"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.QueryTable">
            <summary>
            查询数据库中的所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.QueryTableByTableName">
            <summary>
            查询数据库中的所有表和表中对应的列条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlOmRenderer.QueryTableColumns">
            <summary>
            查询数据库中的所有表
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Render.SqlServerRenderer">
            <summary>
            Renderer for SqlServer
            </summary>
            <remarks>
            Use SqlServerRenderer to render SQL statements for Microsoft SQL Server database.
            This version of Sql.Net has been tested with MSSQL 2000
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlServerRenderer.#ctor">
            <summary>
            Creates a new SqlServerRenderer
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlServerRenderer.IfNull(System.Text.StringBuilder,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Renders IfNull SqlExpression
            </summary>
            <param name="builder"></param>
            <param name="expr"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlServerRenderer.RenderSelect(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a SELECT statement
            </summary>
            <param name="query">Query definition</param>
            <returns>Generated SQL statement</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Render.SqlServerRenderer.RenderRowCount(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Renders a row count SELECT statement. 
            </summary>
            <param name="query">Query definition to count rows for</param>
            <returns>Generated SQL statement</returns>
            <remarks>
            Renders a SQL statement which returns a result set with one row and one cell which contains the number of rows <paramref name="query"/> can generate. 
            The generated statement will work nicely with <see cref="M:System.Data.IDbCommand.ExecuteScalar"/> method.
            </remarks>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotTableException">
            <summary>
            pivot table异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotTableException.#ctor(System.String)">
            <summary>
            创建一个新的pivot table异常
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotTransformException">
            <summary>
            pivot Transform异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotTransformException.#ctor(System.String)">
            <summary>
            创建pivot Transform异常
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.FiscalQuarter">
            <summary>
            时间转换操作类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.FiscalQuarter.#ctor">
            <summary>
            Creates a new FiscalQuarter
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.FiscalQuarter.GetCurrentQuarter">
            <summary>
            获取当前季度
            </summary>
            <returns>第几季度</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.FiscalQuarter.GetQuarterForDate(System.DateTime)">
            <summary>
            获取天所在的季度
            </summary>
            <param name="date">时间，例如：2010-10-11</param>
            <returns>第几季度</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.FiscalQuarter.GetStartDate(System.Int32,System.Int32)">
            <summary>
            获取季度的开始时间 例如：2010年第3季度返回2010-09-01
            </summary>
            <param name="quarter">季度</param>
            <param name="year">年</param>
            <returns>季度的开始时间</returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.FiscalQuarter.StartDay">
            <summary>
            天的开始天数，举例：有部分公司的考勤是以10号开始的，将StartDay设置为10，那么1月的统计周期将从1月10日到2月10日
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.FiscalQuarter.StartMonth">
             <summary>
            月的开始月份，举例：有部分公司的年报是以2月开始的，将StartMonth设置为2，那么2010年的统计周期将从2010年2月到2011年2月
             </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotColumn">
            <summary>
            透视图的列
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumn.#ctor">
             <summary>
            创建一个新列
             </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumn.#ctor(System.String,UWay.Skynet.Cloud.Data.SqlDataType)">
             <summary>
            创建一个新列
             </summary>
             <param name="columnField">字段名称</param>
             <param name="dataType">字段类型</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotColumn.ColumnField">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotColumn.Values">
            <summary>
            值
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotColumn.DataType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection">
             <summary>
            透视表列集合
             </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.#ctor">
            <summary>
            新建一个透视表列集合
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.#ctor(UWay.Skynet.Cloud.Data.Reporting.PivotColumn[])">
            <summary>
            从array集合中新建一个透视表列集合
            </summary>
            <param name="items">
            array集合
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.#ctor(UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection)">
            <summary>
            从透视表列集合中新建一个透视表列集合
            </summary>
            <param name="items">
            透视表列集合
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.AddRange(UWay.Skynet.Cloud.Data.Reporting.PivotColumn[])">
            <summary>
            从数组集合中新建一个透视表列集合
            </summary>
            <param name="items">
            数组集合
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.AddRange(UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection)">
            <summary>
            添加一个集合到透视表列集合
            </summary>
            <param name="items">
            The PivotColumnCollection whose elements are to be added to the end of this PivotColumnCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Add(UWay.Skynet.Cloud.Data.Reporting.PivotColumn)">
            <summary>
            Adds an instance of type PivotColumn to the end of this PivotColumnCollection.
            </summary>
            <param name="value">
            The PivotColumn to be added to the end of this PivotColumnCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Contains(UWay.Skynet.Cloud.Data.Reporting.PivotColumn)">
            <summary>
            Determines whether a specfic PivotColumn value is in this PivotColumnCollection.
            </summary>
            <param name="value">
            The PivotColumn value to locate in this PivotColumnCollection.
            </param>
            <returns>
            true if value is found in this PivotColumnCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.IndexOf(UWay.Skynet.Cloud.Data.Reporting.PivotColumn)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this PivotColumnCollection
            </summary>
            <param name="value">
            The PivotColumn value to locate in the PivotColumnCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.Reporting.PivotColumn)">
            <summary>
            Inserts an element into the PivotColumnCollection at the specified index
            </summary>
            <param name="index">
            The index at which the PivotColumn is to be inserted.
            </param>
            <param name="value">
            The PivotColumn to insert.
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets the PivotColumn at the given index in this PivotColumnCollection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Remove(UWay.Skynet.Cloud.Data.Reporting.PivotColumn)">
            <summary>
            Removes the first occurrence of a specific PivotColumn from this PivotColumnCollection.
            </summary>
            <param name="value">
            The PivotColumn value to remove from this PivotColumnCollection.
            </param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by PivotColumnCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Enumerator.#ctor(UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Enumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Enumerator.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.Enumerator.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this PivotColumnCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue">
            <summary>
            Encapsulates a value of a Pivot Column
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue.#ctor">
            <summary>
            Creates a new PivotColumnValue
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue.#ctor(System.String)">
            <summary>
            Creates a new PivotColumnValue
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue.CreateScalar(System.String,System.Object)">
            <summary>
            Creates a new PivotColumnValue with a scalar value
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue.CreateRange(System.String,UWay.Skynet.Cloud.Data.Reporting.Range)">
            <summary>
            Creates a new PivotColumnValue with a range value
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue.CrossTabColumnName">
            <summary>
            Gets or sets the name of the column in the resulting CrossTab
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue.SetScalarValue(System.Object)">
            <summary>
            Sets a scalar value
            </summary>
            <param name="val">A value which matches PivotColumn's data type</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue.SetRangeValue(UWay.Skynet.Cloud.Data.Reporting.Range)">
            <summary>
            Sets a range value
            </summary>
            <param name="range"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection">
            <summary>
            A collection of elements of type PivotColumnValue
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.#ctor">
            <summary>
            Initializes a new empty instance of the PivotColumnValueCollection class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.#ctor(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue[])">
            <summary>
            Initializes a new instance of the PivotColumnValueCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new PivotColumnValueCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.#ctor(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection)">
            <summary>
            Initializes a new instance of the PivotColumnValueCollection class, containing elements
            copied from another instance of PivotColumnValueCollection
            </summary>
            <param name="items">
            The PivotColumnValueCollection whose elements are to be added to the new PivotColumnValueCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.AddRange(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue[])">
            <summary>
            Adds the elements of an array to the end of this PivotColumnValueCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this PivotColumnValueCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.AddRange(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection)">
            <summary>
            Adds the elements of another PivotColumnValueCollection to the end of this PivotColumnValueCollection.
            </summary>
            <param name="items">
            The PivotColumnValueCollection whose elements are to be added to the end of this PivotColumnValueCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Add(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue)">
            <summary>
            Adds an instance of type PivotColumnValue to the end of this PivotColumnValueCollection.
            </summary>
            <param name="value">
            The PivotColumnValue to be added to the end of this PivotColumnValueCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Contains(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue)">
            <summary>
            Determines whether a specfic PivotColumnValue value is in this PivotColumnValueCollection.
            </summary>
            <param name="value">
            The PivotColumnValue value to locate in this PivotColumnValueCollection.
            </param>
            <returns>
            true if value is found in this PivotColumnValueCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.IndexOf(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this PivotColumnValueCollection
            </summary>
            <param name="value">
            The PivotColumnValue value to locate in the PivotColumnValueCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue)">
            <summary>
            Inserts an element into the PivotColumnValueCollection at the specified index
            </summary>
            <param name="index">
            The index at which the PivotColumnValue is to be inserted.
            </param>
            <param name="value">
            The PivotColumnValue to insert.
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Item(System.Int32)">
            <summary>
            Gets or sets the PivotColumnValue at the given index in this PivotColumnValueCollection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Remove(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValue)">
            <summary>
            Removes the first occurrence of a specific PivotColumnValue from this PivotColumnValueCollection.
            </summary>
            <param name="value">
            The PivotColumnValue value to remove from this PivotColumnValueCollection.
            </param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by PivotColumnValueCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Enumerator.#ctor(UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Enumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Enumerator.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.Enumerator.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotColumnValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this PivotColumnValueCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.PivotTable">
            <summary>
            Facilates Pivot Table (Cross-Tab) transformation from relational data
            </summary>
            <remarks>
            Use <see cref="T:UWay.Skynet.Cloud.Data.Reporting.PivotTable"/> class to create Cross-Tab reports.
            <para>
            Set <see cref="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.BaseQuery"/> or <see cref="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.BaseSql"/> property to SQL 
            which produces data that needs to be pivoted. Set <see cref="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.RowField"/> to specify
            how data should be grouped. Set <see cref="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.ValueField"/> and <see cref="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.Function"/> to 
            specify how the values in the cross tab should be collected. Create at least one 
            PivotColumn which specifies the data column to pivot on and the which Cross-Tab 
            columns are to be created.
            </para>
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotTable.#ctor">
            <summary>
            Creates a new PivotTable instance
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotTable.BuildPivotSql">
            <summary>
            Creates a <see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/> which produces the defined cross tab
            </summary>
            <returns>A <see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/> instance</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.PivotTable.BuildDrillDownSql(UWay.Skynet.Cloud.Data.SqlConstant,System.String)">
            <summary>
            Creates a <see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/> which produces drill-down results
            </summary>
            <param name="crossTabRowKey">Value identifying cross-tab's row</param>
            <param name="crossTabColumnName">Name of a cross-tab column</param>
            <returns>A <see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/> which produces drill-down results of the specified cross-tab cell</returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.ValueField">
            <summary>
            Gets or sets the ValueField
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.RowField">
            <summary>
            Gets or sets the RowField name
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.Function">
            <summary>
            Gets or sets the function to be performed on ValueField
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.Columns">
            <summary>
            Gets the collection of PivotColumn objects
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.WithIsTotal">
            <summary>
            Gets or sets wheather IsTotal column should be added
            </summary>
            <remarks>
            When <see cref="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.WithIsTotal"/> is true, an additional column called "IsTotal"
            will be added to the result set. Value of 1 in the column indicates that the row
            is a total row.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.WithTotal">
            <summary>
            Gets or sets wheather totals should be calculated.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.IsTotalColumnName">
            <summary>
            Gets or sets the name of the column which indicates weather the row is a total summary row.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.BaseQuery">
            <summary>
            Gets or sets the base query as a SelectQuery object
            </summary>
            <remarks>
            The <see cref="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.BaseQuery"/> and <see cref="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.BaseSql"/> are mutually exclusive.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.PivotTable.BaseSql">
            <summary>
            Gets or sets the base query as a SQL string
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.Range">
            <summary>
            Encapsulates a single interval
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.Range.#ctor">
            <summary>
            Creates a new DataRangeItem
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.Range.#ctor(System.Object,System.Object)">
            <summary>
            Creates a new DataRangeItem
            </summary>
            <param name="low">The low bound of the interval</param>
            <param name="high">The high bound of the interval</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.Range.LowBound">
            <summary>
            Gets or sets the low bound of the interval
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.Range.HighBound">
            <summary>
            Gets or sets the high bound of the interval
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.TimePeriodType">
            <summary>
            Determines the kind of a time period
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Reporting.TimePeriodType.Day">
            <summary>Days</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Reporting.TimePeriodType.Week">
            <summary>Weeks</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Reporting.TimePeriodType.Month">
            <summary>Months</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Reporting.TimePeriodType.FiscalQuarter">
            <summary>Fiscal quarters (see <see cref="F:UWay.Skynet.Cloud.Data.Reporting.TimePeriodType.FiscalQuarter"/>)</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Reporting.TimePeriodType.CalendarQuarter">
            <summary>Calendar quarters</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.Reporting.TimePeriodType.Year">
            <summary>Years</summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.Reporting.TimePeriod">
            <summary>
            Encapsulates a time period.
            </summary>
            <remarks>
            Use the <see cref="T:UWay.Skynet.Cloud.Data.Reporting.TimePeriod"/> class to make calculations in terms of days, weeks, months, quarters or years.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.PeriodStartDate">
            <summary>
            Returns the start date of this TimePeriod
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.PeriodType">
            <summary>
            Returns the type of this TimePeriod
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.Add(System.Int32)">
            <summary>
            Adds or sutracts time periods
            </summary>
            <param name="count">The number of periods of the same time to add</param>
            <returns>The resulting TimePeriod</returns>
            <remarks>Use negative <paramref name="count"/> values to substract periods</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.GetDifference(UWay.Skynet.Cloud.Data.Reporting.TimePeriod,UWay.Skynet.Cloud.Data.Reporting.TimePeriod)">
            <summary>
            Returns the difference in periods between two TimePeriods
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns>The difference in number of periods</returns>
            <remarks>The types if both periods must be the same.</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.GetDifferenceInMonths(System.DateTime,System.DateTime)">
            <summary>
            Gets the difference in months between two TimePeriod
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.OffsetFromToday">
            <summary>
            Returns the difference in periods between today's period and self
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.GetIndexInYear">
            <summary>
            Returns the index in year of this TimePeriod
            </summary>
            <returns></returns>
            <remarks>The index is zero based.</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.Add(UWay.Skynet.Cloud.Data.Reporting.TimePeriodType,System.Int32)">
            <summary>
            Adds or subtract a number of periods of a specified type
            </summary>
            <param name="addPeriodType">Type of period to add</param>
            <param name="addValue">The number of periods to add</param>
            <returns>DateTime value which is the result of the addition</returns>
            <remarks>Use negative <paramref name="values"/> to substract.</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.FromDate(UWay.Skynet.Cloud.Data.Reporting.TimePeriodType,System.DateTime)">
            <summary>
            Create a time period based on a specified date.
            </summary>
            <param name="type">The type of the TimePeriod to create</param>
            <param name="date">Any date which falls into the desired period</param>
            <returns>New TimePeriod instance</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.FromToday(UWay.Skynet.Cloud.Data.Reporting.TimePeriodType)">
            <summary>
            Creates a new TimePeriod based on today's date.
            </summary>
            <param name="type">The type of the TimePeriod to create</param>
            <returns>A new TimePeriod instance</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.Serialize">
            <summary>
            Serializes this TimePeriod into a string
            </summary>
            <returns>String representation of this TimePeriod</returns>
            <remarks>Returns a string which can be understood by Parse</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.Parse(System.String)">
            <summary>
            Creates a time period from a string.
            </summary>
            <param name="periodString"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.Reporting.TimePeriod.ToString">
            <summary>
            Returns a human readable representation of TimePeriod
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SelectColumn">
            <summary>
            Describes a column of a select clause
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumn.#ctor(System.String)">
            <summary>
            Creates a SelectColumn with a column name, no table, no column alias and no function
            </summary>
            <param name="columnName">Name of a column</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumn.#ctor(System.String,UWay.Skynet.Cloud.Data.FromTerm)">
            <summary>
            Creates a SelectColumn with a column name, table, no column alias and no function
            </summary>
            <param name="columnName">Name of a column</param>
            <param name="table">The table this OtherData belongs to</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumn.#ctor(System.String,UWay.Skynet.Cloud.Data.FromTerm,System.String)">
            <summary>
            Creates a SelectColumn with a column name, table and column alias
            </summary>
            <param name="columnName">Name of a column</param>
            <param name="table">The table this OtherData belongs to</param>
            <param name="columnAlias">Alias of the column</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumn.#ctor(System.String,UWay.Skynet.Cloud.Data.FromTerm,System.String,UWay.Skynet.Cloud.Data.SqlAggregationFunction)">
            <summary>
            Creates a SelectColumn with a column name, table, column alias and optional aggregation function
            </summary>
            <param name="columnName">Name of a column</param>
            <param name="table">The table this OtherData belongs to</param>
            <param name="columnAlias">Alias of the column</param>
            <param name="function">Aggregation function to be applied to the column. Use SqlAggregationFunction.None to specify that no function should be applied.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumn.#ctor(UWay.Skynet.Cloud.Data.SqlExpression,System.String)">
            <summary>
            Creates a SelectColumn
            </summary>
            <param name="expr">Expression</param>
            <param name="columnAlias">Column alias</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectColumn.ColumnAlias">
            <summary>
            Gets the column alias for this SelectColumn
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SelectColumnCollection">
            <summary>
            A collection of elements of type SelectColumn
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.#ctor">
            <summary>
            Initializes a new empty instance of the SelectColumnCollection class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.#ctor(UWay.Skynet.Cloud.Data.SelectColumn[])">
            <summary>
            Initializes a new instance of the SelectColumnCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new SelectColumnCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.#ctor(UWay.Skynet.Cloud.Data.SelectColumnCollection)">
            <summary>
            Initializes a new instance of the SelectColumnCollection class, containing elements
            copied from another instance of SelectColumnCollection
            </summary>
            <param name="items">
            The SelectColumnCollection whose elements are to be added to the new SelectColumnCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.AddRange(UWay.Skynet.Cloud.Data.SelectColumn[])">
            <summary>
            Adds the elements of an array to the end of this SelectColumnCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this SelectColumnCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.AddRange(UWay.Skynet.Cloud.Data.SelectColumnCollection)">
            <summary>
            Adds the elements of another SelectColumnCollection to the end of this SelectColumnCollection.
            </summary>
            <param name="items">
            The SelectColumnCollection whose elements are to be added to the end of this SelectColumnCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.Add(UWay.Skynet.Cloud.Data.SelectColumn)">
            <summary>
            Adds an instance of type SelectColumn to the end of this SelectColumnCollection.
            </summary>
            <param name="value">
            The SelectColumn to be added to the end of this SelectColumnCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.Contains(UWay.Skynet.Cloud.Data.SelectColumn)">
            <summary>
            Determines whether a specfic SelectColumn value is in this SelectColumnCollection.
            </summary>
            <param name="value">
            The SelectColumn value to locate in this SelectColumnCollection.
            </param>
            <returns>
            true if value is found in this SelectColumnCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.IndexOf(UWay.Skynet.Cloud.Data.SelectColumn)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this SelectColumnCollection
            </summary>
            <param name="value">
            The SelectColumn value to locate in the SelectColumnCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.SelectColumn)">
            <summary>
            Inserts an element into the SelectColumnCollection at the specified index
            </summary>
            <param name="index">
            The index at which the SelectColumn is to be inserted.
            </param>
            <param name="value">
            The SelectColumn to insert.
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets the SelectColumn at the given index in this SelectColumnCollection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.Remove(UWay.Skynet.Cloud.Data.SelectColumn)">
            <summary>
            Removes the first occurrence of a specific SelectColumn from this SelectColumnCollection.
            </summary>
            <param name="value">
            The SelectColumn value to remove from this SelectColumnCollection.
            </param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SelectColumnCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by SelectColumnCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.Enumerator.#ctor(UWay.Skynet.Cloud.Data.SelectColumnCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectColumnCollection.Enumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.Enumerator.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.Enumerator.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectColumnCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this SelectColumnCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SelectQuery">
             <summary>
             Encapsulates a SQL SELECT statement.
             </summary>
             <remarks>
             Use SelectQuery to define and modify a query. 
             When the query is ready to be executed it can be rendered to SQL using one of the renderers derived from <see cref="T:UWay.Skynet.Cloud.Data.Render.ISqlOmRenderer">ISqlOMRenderer</see>
             and executed using standard .Net query execution methods.
             <para>SelectQuery can be useful for dynamic SQL generation for reports and filters.</para>
             <para>It can also be used to render SQL to retrieve pages of data from databases which do not directly support this feature (i.e. SqlServer).</para>
             </remarks>
             <example>
             The following example creates a select query which returns two columns from two inner joined tables and renders it to be executed on MySql
             <code>
             FromTerm tCustomers = FromTerm.Table("customers");
             FromTerm tProducts = FromTerm.Table("products", "p");
             FromTerm tOrders = FromTerm.Table("orders", "o");
             
             SelectQuery query = new SelectQuery();
             query.Columns.Add(new SelectColumn("name", tCustomers));
             query.Columns.Add(new SelectColumn("name", tProducts));
             query.FromClause.BaseTable = tCustomers;
             query.FromClause.Join(JoinType.Inner, query.FromClause.BaseTable, tOrders, "customerId", "customerId");
             query.FromClause.Join(JoinType.Inner, tOrders, tProducts, "productId", "productId");
             
             MySqlRenderer renderer = new MySqlRenderer();
            	string sql = renderer.RenderSelect(query);
            	...
             </code>
            </example>
             <example>
             This example creates a select query which returns the second page of a result-set and renders it to be executed on SqlServer
             <code>
             
             int totalRows = 50; //The total number of rows can be obtained using SelectQuery as well
             
             SelectQuery query = new SelectQuery();
             
             query.Columns.Add(new SelectColumn("name"));
             query.FromPhrase.BaseTable = FromClause.Table("customers");
             query.OrderByClauses.Add(new OrderByClause("name", null, OrderByDirection.Descending));
             query.OrderByClauses.Add(new OrderByClause("birthDate", null, OrderByDirection.Ascending));
             
             SqlServerRenderer renderer = new SqlServerRenderer();
            	sql = renderer.RenderPage(2, 10, totalRows, query);
            	...
             </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectQuery.#ctor">
            <summary>
            Creates a new SelectQuery
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.FromClause">
            <summary>
            Gets the FROM definition for this SelectQuery
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.GroupByTerms">
            <summary>
            Gets the GROUP BY definition for this SelectQuery
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.OrderByTerms">
            <summary>
            Gets the ORDER BY definition for this SelectQuery
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.WherePhrase">
            <summary>
            Gets the WHERE conditions for this SelectQuery
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.HavingPhrase">
            <summary>
            Gets the WHERE conditions for this SelectQuery
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.Columns">
            <summary>
            Gets the collection of columns for this SelectQuery
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.Top">
            <summary>
            Gets or sets the result-set row count limitation
            </summary>
            <remarks>
            When Top is less then zero, no limitation will apply on the result-set. To limit
            the number of rows returned by this query set Top to a positive integer or zero
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.GroupByWithRollup">
            <summary>
            Gets or sets the group by with rollup option for the query
            </summary>
            <remarks>
            GroupByWithRollup property is only relevant for queries which perform group by and have aggregation columns.
            When GroupByWithRollup is true the result set will include additional rows with sub total information. Consult SQL documentation for more details.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.GroupByWithCube">
            <summary>
            Gets or sets the group by with cube option for the query. Not supported by all databases.
            </summary>
            <remarks>
            GroupByWithCube property is only relevant for queries which perform group by and have aggregation columns.
            When GroupByWithCube is true the result set will include additional rows with sub total information. GroupByWithCube even more data then <see cref="P:UWay.Skynet.Cloud.Data.SelectQuery.GroupByWithRollup">GroupByWithRollup</see>. Consult SQL documentation for more details.
            <para>
            Important! Not all databases support this option.
            </para>
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.Distinct">
            <summary>
            Gets or sets wheather only distinct rows are to be returned.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectQuery.Validate">
            <summary>
            Validates the SelectQuery
            </summary>
            <remarks>
            Sql.Net makes its best to validate a query before it is rendered or executed. 
            Still, some errors and inconsistancies can only be found on later stages.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SelectQuery.Clone">
            <summary>
            Clones the SelectQuery
            </summary>
            <returns>A new instance of SelectQuery which is exactly the same as the current one.</returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.TableSpace">
            <summary>
            Gets or sets the common prefix for all tables in the query
            </summary>
            <remarks>
            You might want to use <see cref="P:UWay.Skynet.Cloud.Data.SelectQuery.TableSpace"/> property to utilize SQL Server 2000
            execution plan cache. For the cache to work in SQL Server 2000, all database objects in a query must be fully qualified.
            Setting <see cref="P:UWay.Skynet.Cloud.Data.SelectQuery.TableSpace"/> property might releive of the duty to fully qualify all table names in the query.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SelectQuery.IndexHints">
            <summary>
            Gets or sets IndexHints.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SqlAggregationFunction">
            <summary>
            Specifies which function should be applied on a column
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlAggregationFunction.None">
            <summary>No function</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlAggregationFunction.Sum">
            <summary>Sum</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlAggregationFunction.Count">
            <summary>Count rows</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlAggregationFunction.Avg">
            <summary>Avarage</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlAggregationFunction.Min">
            <summary>Minimum</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlAggregationFunction.Max">
            <summary>Maximum</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlAggregationFunction.Grouping">
            <summary>Returns true is the current row is a super-aggregate row when used with ROLLUP or CUBE</summary>
            <remarks>Grouping functions is not supported in all databases</remarks>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SqlConstant">
            <summary>
            Represents a typed constant value.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstant.#ctor(UWay.Skynet.Cloud.Data.SqlDataType,System.Object)">
            <summary>
            Creates a new SqlConstant instance
            </summary>
            <param name="type">Constant's date type</param>
            <param name="val">Constant's value</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstant.Number(System.Double)">
            <summary>
            Creates a SqlConstant which represents a numeric value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlConstant which represents a floating point value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstant.Number(System.Decimal)">
            <summary>
            Creates a SqlConstant which represents a numeric value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlConstant which represents a decimal value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstant.Number(System.Int32)">
            <summary>
            Creates a SqlConstant which represents a numeric value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlConstant which represents a numeric value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstant.String(System.String)">
            <summary>
            Creates a SqlConstant which represents a textual value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlConstant which represents a textual value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstant.Date(System.DateTime)">
            <summary>
            Creates a SqlConstant which represents a date value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlConstant which represents a date value</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SqlConstantCollection">
            <summary>
            A collection of elements of type SqlConstant
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.#ctor">
            <summary>
            Initializes a new empty instance of the SqlConstantCollection class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new empty instance of the SqlConstantCollection class with the specified initial capacity
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.#ctor(UWay.Skynet.Cloud.Data.SqlConstant[])">
            <summary>
            Initializes a new instance of the SqlConstantCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new SqlConstantCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.#ctor(UWay.Skynet.Cloud.Data.SqlConstantCollection)">
            <summary>
            Initializes a new instance of the SqlConstantCollection class, containing elements
            copied from another instance of SqlConstantCollection
            </summary>
            <param name="items">
            The SqlConstantCollection whose elements are to be added to the new SqlConstantCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.FromList(System.Collections.IList)">
            <summary>
            Creates a SqlConstantCollection from a list of values.
            </summary>
            <remarks>
            The type of SqlConstant items in the collection is determined automatically.
            See <see cref="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Add(System.Object)"/> method for more info.
            </remarks>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Add(System.Object)">
            <summary>
            Adds a value
            </summary>
            <param name="val">The value which is to be added</param>
            <remarks>
            This method automatically determins the type of the value and creates the appropriate SqlConstant object.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.AddRange(UWay.Skynet.Cloud.Data.SqlConstant[])">
            <summary>
            Adds the elements of an array to the end of this SqlConstantCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this SqlConstantCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.AddRange(UWay.Skynet.Cloud.Data.SqlConstantCollection)">
            <summary>
            Adds the elements of another SqlConstantCollection to the end of this SqlConstantCollection.
            </summary>
            <param name="items">
            The SqlConstantCollection whose elements are to be added to the end of this SqlConstantCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Add(UWay.Skynet.Cloud.Data.SqlConstant)">
            <summary>
            Adds an instance of type SqlConstant to the end of this SqlConstantCollection.
            </summary>
            <param name="value">
            The SqlConstant to be added to the end of this SqlConstantCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Contains(UWay.Skynet.Cloud.Data.SqlConstant)">
            <summary>
            Determines whether a specfic SqlConstant value is in this SqlConstantCollection.
            </summary>
            <param name="value">
            The SqlConstant value to locate in this SqlConstantCollection.
            </param>
            <returns>
            true if value is found in this SqlConstantCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.IndexOf(UWay.Skynet.Cloud.Data.SqlConstant)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this SqlConstantCollection
            </summary>
            <param name="value">
            The SqlConstant value to locate in the SqlConstantCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.SqlConstant)">
            <summary>
            Inserts an element into the SqlConstantCollection at the specified index
            </summary>
            <param name="index">
            The index at which the SqlConstant is to be inserted.
            </param>
            <param name="value">
            The SqlConstant to insert.
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SqlConstantCollection.Item(System.Int32)">
            <summary>
            Gets or sets the SqlConstant at the given index in this SqlConstantCollection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Remove(UWay.Skynet.Cloud.Data.SqlConstant)">
            <summary>
            Removes the first occurrence of a specific SqlConstant from this SqlConstantCollection.
            </summary>
            <param name="value">
            The SqlConstant value to remove from this SqlConstantCollection.
            </param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SqlConstantCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by SqlConstantCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Enumerator.#ctor(UWay.Skynet.Cloud.Data.SqlConstantCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.SqlConstantCollection.Enumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Enumerator.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.Enumerator.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlConstantCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this SqlConstantCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SqlDataType">
            <summary>
            Data type of a constant value
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlDataType.String">
            <summary>String value</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlDataType.Number">
            <summary>Numeric value (int, double, float, decimal)</summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Data.SqlDataType.Date">
            <summary>DateTime object</summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SqlExpression">
            <summary>
            Describes one expression of a <see cref="T:UWay.Skynet.Cloud.Data.WhereTerm"/>
            </summary>
            <remarks>
            SqlExpression has no public constructor. Use one of the supplied static methods to create the type
            of the expression you need. 
            <para>
            <see cref="T:UWay.Skynet.Cloud.Data.SqlExpression"/> can represent a database OtherData, or a static value. 
            To create a <see cref="T:UWay.Skynet.Cloud.Data.SqlExpression"/> represnting a OtherData use the <seealso cref="M:UWay.Skynet.Cloud.Data.SqlExpression.Field(System.String,UWay.Skynet.Cloud.Data.FromTerm)"/> method.
            To create a static value, use one of the methods <see cref="M:UWay.Skynet.Cloud.Data.SqlExpression.String(System.String)"/>, <see cref="M:UWay.Skynet.Cloud.Data.SqlExpression.Date(System.DateTime)"/> or <see cref="M:UWay.Skynet.Cloud.Data.SqlExpression.Number(System.Double)"/> accordingly to the type of the value.
            </para>
            </remarks>
            <example>
            <code>
            ...
            query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("name", tCustomers), SqlExpression.String("John"), CompareOperator.Equal));
            ...
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Number(System.Double)">
            <summary>
            Creates a SqlExpression which represents a numeric value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlExpression which represents a numeric value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Number(System.Int32)">
            <summary>
            Creates a SqlExpression which represents a numeric value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlExpression which represents a numeric value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.String(System.String)">
            <summary>
            Creates a SqlExpression which represents a textual value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlExpression which represents a textual value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Date(System.DateTime)">
            <summary>
            Creates a SqlExpression which represents a date value.
            </summary>
            <param name="val">Value of the expression</param>
            <returns>A SqlExpression which represents a date value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Constant(UWay.Skynet.Cloud.Data.SqlConstant)">
            <summary>
            Creates a SqlExpression which represents a constant typed value.
            </summary>
            <param name="val">SqlConstant instance</param>
            <returns>A SqlExpression which represents a date value</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Constant(UWay.Skynet.Cloud.Data.SqlDataType,System.Object)">
            <summary>
            Creates a SqlExpression which represents a constant typed value
            </summary>
            <param name="dataType">Value's data type</param>
            <param name="val">The value</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Field(System.String,UWay.Skynet.Cloud.Data.FromTerm)">
            <summary>
            Creates a SqlExpression which represents a OtherData in a database table.
            </summary>
            <param name="fieldName">Name of a OtherData</param>
            <param name="table">The table this OtherData belongs to</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Case(UWay.Skynet.Cloud.Data.CaseClause)">
            <summary>
            Creates a SqlExpression with a CASE statement.
            </summary>
            <param name="caseClause"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.IfNull(UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a SqlExpression with IfNull function.
            </summary>
            <param name="test">Expression to be checked for being NULL</param>
            <param name="val">Substitution</param>
            <returns></returns>
            <remarks>
            Works as SQL Server's ISNULL() function.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Round(UWay.Skynet.Cloud.Data.SqlExpression,System.Int32)">
            <summary>
            Creates a SqlExpression with Round function.
            </summary>
            <param name="test">Expression to be checked for being NULL</param>
            <param name="val">Substitution</param>
            <returns></returns>
            <remarks>
            Works as SQL Server's ISNULL() function.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Function(UWay.Skynet.Cloud.Data.SqlAggregationFunction,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a SqlExpression with an aggergation function
            </summary>
            <param name="func">Aggregation function to be applied on the supplied expression</param>
            <param name="param">Parameter of the aggregation function</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Null">
            <summary>
            Creates a SqlExpression representing a NULL value
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Field(System.String)">
            <summary>
            Creates a SqlExpression which represents a OtherData in a database table.
            </summary>
            <param name="fieldName">Name of a OtherData</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.SubQuery(System.String)">
            <summary>
            Creates a SqlExpression which represents a subquery.
            </summary>
            <param name="queryText">Text of the subquery.</param>
            <returns>A new SqlExpression</returns>
            <remarks>
            In many cases you can use an inner or outer JOIN instead of a subquery. 
            If you prefer using subqueries it is recomended that you construct the subquery
            using another instance of <see cref="T:UWay.Skynet.Cloud.Data.SelectQuery"/>, render it using the correct 
            renderer and pass the resulting SQL statement to the <paramref name="queryText"/> parameter.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.SubQuery(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Creates a SqlExpression which represents a subquery.
            </summary>
            <param name="query">A SelectQuery object</param>
            <returns>A new SqlExpression</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Parameter(System.String)">
            <summary>
            Create a parameter placeholder.
            </summary>
            <param name="paramName"></param>
            <returns></returns>
            <remarks>
            Correct parameter name depends on your specifc data provider. OLEDB expects
            all parameters to be '?' and matches parameters to values based on their index.
            SQL Server Native driver matches parameters by names and expects to find "@paramName"
            parameter placeholder in the query.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlExpression.Raw(System.String)">
            <summary>
            Creates a SqlExpression with raw SQL
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SqlExpressionType">
            <summary>
            Describes the type of a <see cref="T:UWay.Skynet.Cloud.Data.SqlExpression"/>
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.SqlUnion">
            <summary>
            Encapsulates SQL UNION statement
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlUnion.#ctor">
            <summary>
            Creates a new SqlUnion
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlUnion.Add(UWay.Skynet.Cloud.Data.SelectQuery)">
            <summary>
            Adds a query to the UNION clause
            </summary>
            <param name="query">SelectQuery to be added</param>
            <remarks>Query will be added with DistinctModifier.Distinct </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.SqlUnion.Add(UWay.Skynet.Cloud.Data.SelectQuery,UWay.Skynet.Cloud.Data.DistinctModifier)">
            <summary>
            Adds a query to the UNION clause with the specified DistinctModifier
            </summary>
            <param name="query">SelectQuery to be added</param>
            <param name="repeatingAction">Distinct modifier</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.UpdateQuery">
            <summary>
            Encapsulates a SQL UPDATE statement
            </summary>
            <remarks>
            Use UpdateQuery to update data in a database table.
            Set <see cref="P:UWay.Skynet.Cloud.Data.UpdateQuery.TableName"/> to the table you would like to update, populate 
            the <see cref="P:UWay.Skynet.Cloud.Data.UpdateQuery.Terms"/> collection with column-value pairs and define which rows 
            should be affected using the <see cref="P:UWay.Skynet.Cloud.Data.UpdateQuery.WhereClause"/>.
            </remarks>
            <example>
            <code>
            UpdateQuery query = new UpdateQuery("products");
            query.Terms.Add(new UpdateTerm("price", SqlExpression.Number(12.1)));
            query.Terms.Add(new UpdateTerm("quantaty", SqlExpression.Field("quantaty")));
            query.WhereClause.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("productId"), SqlExpression.Number(1), CompareOperator.Equal) );
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateQuery.#ctor">
            <summary>
            Creates a new UpdateQuery
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateQuery.#ctor(System.String)">
            <summary>
            Creates a new UpdateQuery
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.UpdateQuery.Terms">
            <summary>
            Gets the terms collection for this UpdateQuery
            </summary>
            <remarks>
            Terms specify which columns should be updated and to what values.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.UpdateQuery.WhereClause">
            <summary>
            Spicifies which rows are to be updated
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.UpdateQuery.TableName">
            <summary>
            Gets or set the name of a table to be updated
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateQuery.Validate">
            <summary>
            Validates UpdateQuery
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.UpdateTerm">
            <summary>
            Encapsulates a column-value pair for UPDATE and INSERT statements
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTerm.#ctor(System.String,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates an UpdateTerm
            </summary>
            <param name="fieldName">The name of the OtherData to be updated</param>
            <param name="val">New OtherData value</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.UpdateTerm.FieldName">
            <summary>
            Gets the name of the OtherData which is to be updated
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.UpdateTerm.Value">
            <summary>
            Gets the value the OtherData will be updated to
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.UpdateTermCollection">
            <summary>
            A collection of elements of type UpdateTerm
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.#ctor">
            <summary>
            Initializes a new empty instance of the UpdateTermCollection class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.#ctor(UWay.Skynet.Cloud.Data.UpdateTerm[])">
            <summary>
            Initializes a new instance of the UpdateTermCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new UpdateTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.#ctor(UWay.Skynet.Cloud.Data.UpdateTermCollection)">
            <summary>
            Initializes a new instance of the UpdateTermCollection class, containing elements
            copied from another instance of UpdateTermCollection
            </summary>
            <param name="items">
            The UpdateTermCollection whose elements are to be added to the new UpdateTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.AddRange(UWay.Skynet.Cloud.Data.UpdateTerm[])">
            <summary>
            Adds the elements of an array to the end of this UpdateTermCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this UpdateTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.AddRange(UWay.Skynet.Cloud.Data.UpdateTermCollection)">
            <summary>
            Adds the elements of another UpdateTermCollection to the end of this UpdateTermCollection.
            </summary>
            <param name="items">
            The UpdateTermCollection whose elements are to be added to the end of this UpdateTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.Add(UWay.Skynet.Cloud.Data.UpdateTerm)">
            <summary>
            Adds an instance of type UpdateTerm to the end of this UpdateTermCollection.
            </summary>
            <param name="value">
            The UpdateTerm to be added to the end of this UpdateTermCollection.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.Contains(UWay.Skynet.Cloud.Data.UpdateTerm)">
            <summary>
            Determines whether a specfic UpdateTerm value is in this UpdateTermCollection.
            </summary>
            <param name="value">
            The UpdateTerm value to locate in this UpdateTermCollection.
            </param>
            <returns>
            true if value is found in this UpdateTermCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.IndexOf(UWay.Skynet.Cloud.Data.UpdateTerm)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this UpdateTermCollection
            </summary>
            <param name="value">
            The UpdateTerm value to locate in the UpdateTermCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.UpdateTerm)">
            <summary>
            Inserts an element into the UpdateTermCollection at the specified index
            </summary>
            <param name="index">
            The index at which the UpdateTerm is to be inserted.
            </param>
            <param name="value">
            The UpdateTerm to insert.
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.UpdateTermCollection.Item(System.Int32)">
            <summary>
            Gets or sets the UpdateTerm at the given index in this UpdateTermCollection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.Remove(UWay.Skynet.Cloud.Data.UpdateTerm)">
            <summary>
            Removes the first occurrence of a specific UpdateTerm from this UpdateTermCollection.
            </summary>
            <param name="value">
            The UpdateTerm value to remove from this UpdateTermCollection.
            </param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.UpdateTermCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by UpdateTermCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.Enumerator.#ctor(UWay.Skynet.Cloud.Data.UpdateTermCollection)">
            <summary></summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.UpdateTermCollection.Enumerator.Current">
            <summary></summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.Enumerator.MoveNext">
            <summary></summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.Enumerator.Reset">
            <summary></summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.UpdateTermCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this UpdateTermCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.WhereClause">
            <summary>
            Describes the WHERE clause of a SELECT statement
            </summary>
            <remarks>
            Using WhereClause you can abstractly define most common SQL conditional expressions.
            A WhereClause consists of individual <see cref="T:UWay.Skynet.Cloud.Data.WhereTerm">terms</see> and <see cref="T:UWay.Skynet.Cloud.Data.WhereClause">sub clauses</see>.
            Between all terms and sub clauses of the same clause exists a single logical <see cref="T:UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator">relationship</see>. 
            To create a group of terms with a different relationship, create a sub clause with the desired relationship and add it to the relevant <see cref="P:UWay.Skynet.Cloud.Data.WhereClause.SubClauses"/>collection.
            Terms of a where clause are represnted by the <see cref="T:UWay.Skynet.Cloud.Data.WhereTerm"/> class while the sub clauses are represnted by the same <see cref="T:UWay.Skynet.Cloud.Data.WhereClause"/> class.
            </remarks>
            <example>
            The following example attempts to demonstrate some of the most common usages of WhereClause and WhereTerm classes
            <code>
            FromTerm tCustomers = FromTerm.Table("customers", "c");
            FromTerm tProducts = FromTerm.Table("products", "p");
            FromTerm tOrders = FromTerm.Table("orders", "o");
            
            SelectQuery query = new SelectQuery();
            
            query.Columns.Add(new SelectColumn("name", tCustomers));
            query.Columns.Add(new SelectColumn("name", tProducts));
            query.Columns.Add(new SelectColumn("price", tProducts));
            
            query.FromClause.BaseTable = tCustomers;
            query.FromClause.Join(JoinType.Left, tCustomers, tOrders, "customerId", "customerId");
            query.FromClause.Join(JoinType.Inner, tOrders, tProducts, "productId", "productId");
            		
            query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("name", tCustomers), SqlExpression.String("John"), CompareOperator.Equal));
            query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("name", tCustomers), SqlExpression.String("J%"), CompareOperator.Like));
            query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Date(DateTime.Now), SqlExpression.Field("date", tOrders), CompareOperator.Greater));
            query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Number(1), SqlExpression.Number(1), CompareOperator.BitwiseAnd));
            		
            WhereClause group = new WhereClause(WhereClauseRelationship.Or);
            		
            group.Terms.Add(WhereTerm.CreateBetween(SqlExpression.Field("price", tProducts), SqlExpression.Number(1), SqlExpression.Number(10)));
            group.Terms.Add(WhereTerm.CreateIn(SqlExpression.Field("name", tProducts), new string[] {"Nail", "Hamer", "Skrewdriver"}));
            		
            query.WherePhrase.SubClauses.Add(group);
            
            ...
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClause.#ctor(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator)">
            <summary>
            Creates a new WhereClause
            </summary>
            <param name="relationship">Relationship between all the terms and sub clauses of this clause</param>
            <example>
            <code>
            SelectQuery query = new SelectQuery();
            ...
            query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("name", tCustomers), SqlExpression.String("John"), CompareOperator.Equal));
            WhereClause group = new WhereClause(WhereClauseRelationship.Or);
            group.Terms.Add(WhereTerm.CreateBetween(SqlExpression.Field("price", tProducts), SqlExpression.Number(1), SqlExpression.Number(10)));
            group.Terms.Add(WhereTerm.CreateIn(SqlExpression.Field("name", tProducts), new string[] {"Nail", "Hamer", "Skrewdriver"}));
            query.WherePhrase.SubClauses.Add(group);
            </code>
            </example>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereClause.Relationship">
            <summary>
            Gets the relationship for this clause
            </summary>
            <remarks>
            Where clause relationship defines what kind of logical condition exists between all terms and sub clauses of this WhereClause
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereClause.Terms">
            <summary>
            Gets the terms collection for this WherePhrase
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereClause.SubClauses">
            <summary>
            Gets the sub clauses collection for this WherePhrase
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereClause.IsEmpty">
            <summary>
            Returns true if this WhereClause and its descendant sub clauses have no terms
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClause.Clone">
            <summary>
            Creates a copy of this WhereClause
            </summary>
            <returns>A new WhereClause which is exactly the same as the current one</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.WhereClauseCollection">
            <summary>
              A collection that stores <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> objects.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.#ctor">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.#ctor(UWay.Skynet.Cloud.Data.WhereClauseCollection)">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> based on another <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
            <param name='val'>
              A <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.#ctor(UWay.Skynet.Cloud.Data.WhereClause[])">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> containing any array of <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> objects.
            </summary>
            <param name='val'>
                  A array of <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereClauseCollection.Item(System.Int32)">
            <summary>
              Represents the entry at the specified index of the <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/>.
            </summary>
            <param name='index'>The zero-based index of the entry to locate in the collection.</param>
            <value>The entry at the specified index of the collection.</value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.Add(UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
              Adds a <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> with the specified value to the 
              <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> to add.</param>
            <returns>The index at which the new element was inserted.</returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereClauseCollection.AddRange(UWay.Skynet.Cloud.Data.WhereClause[])'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.AddRange(UWay.Skynet.Cloud.Data.WhereClause[])">
            <summary>
              Copies the elements of an array to the end of the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
            <param name='val'>
               An array of type <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> containing the objects to add to the collection.
            </param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereClauseCollection.Add(UWay.Skynet.Cloud.Data.WhereClause)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.AddRange(UWay.Skynet.Cloud.Data.WhereClauseCollection)">
            <summary>
              Adds the contents of another <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> to the end of the collection.
            </summary>
            <param name='val'>
               A <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> containing the objects to add to the collection.
            </param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereClauseCollection.Add(UWay.Skynet.Cloud.Data.WhereClause)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.Contains(UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
              Gets a value indicating whether the 
               <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> contains the specified <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> to locate.</param>
            <returns>
            <see langword='true'/> if the <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> is contained in the collection; 
              otherwise, <see langword='false'/>.
            </returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereClauseCollection.IndexOf(UWay.Skynet.Cloud.Data.WhereClause)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.CopyTo(UWay.Skynet.Cloud.Data.WhereClause[],System.Int32)">
            <summary>
              Copies the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.
            </summary>
            <param name='array'>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.</param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <exception cref='T:System.ArgumentException'>
              <para><paramref name='array'/> is multidimensional.</para>
              <para>-or-</para>
              <para>The number of elements in the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> is greater than
                    the available space between <paramref name='arrayIndex'/> and the end of
                    <paramref name='array'/>.</para>
            </exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='arrayIndex'/> is less than <paramref name='array'/>'s lowbound. </exception>
            <seealso cref='T:System.Array'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.IndexOf(UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
               Returns the index of a <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> in 
                  the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> to locate.</param>
            <returns>
              The index of the <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> of <paramref name='val'/> in the 
              <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>, if found; otherwise, -1.
            </returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereClauseCollection.Contains(UWay.Skynet.Cloud.Data.WhereClause)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
              Inserts a <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> into the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/> at the specified index.
            </summary>
            <param name='index'>The zero-based index where <paramref name='val'/> should be inserted.</param>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> to insert.</param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereClauseCollection.Add(UWay.Skynet.Cloud.Data.WhereClause)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.GetEnumerator">
            <summary>
             Returns an enumerator that can iterate through the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
            <seealso cref='T:System.Collections.IEnumerator'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.Remove(UWay.Skynet.Cloud.Data.WhereClause)">
            <summary>
              Removes a specific <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> from the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> to remove from the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.</param>
            <exception cref='T:System.ArgumentException'><paramref name='val'/> is not found in the Collection.</exception>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.WhereClauseCollection.WhereClauseGroupEnumerator">
            <summary>
              Enumerator that can iterate through a WhereClauseGroupCollection.
            </summary>
            <seealso cref='T:System.Collections.IEnumerator'/>
            <seealso cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>
            <seealso cref='T:UWay.Skynet.Cloud.Data.WhereClause'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.WhereClauseGroupEnumerator.#ctor(UWay.Skynet.Cloud.Data.WhereClauseCollection)">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection.WhereClauseGroupEnumerator'/>.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereClauseCollection.WhereClauseGroupEnumerator.Current">
            <summary>
              Gets the current <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> in the <seealso cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.WhereClauseGroupEnumerator.MoveNext">
            <summary>
              Advances the enumerator to the next <see cref='T:UWay.Skynet.Cloud.Data.WhereClause'/> of the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereClauseCollection.WhereClauseGroupEnumerator.Reset">
            <summary>
              Sets the enumerator to its initial position, which is before the first element in the <see cref='T:UWay.Skynet.Cloud.Data.WhereClauseCollection'/>.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.WhereTerm">
            <summary>
            Represents one term in a WHERE clause
            </summary>
            <remarks>
            <see cref="T:UWay.Skynet.Cloud.Data.WhereTerm"/> usually consists of one or more <see cref="T:UWay.Skynet.Cloud.Data.SqlExpression"/> objects and an a conditional operator which applies to those expressions.
            <see cref="T:UWay.Skynet.Cloud.Data.WhereTerm"/> has no public constructor. Use one of the supplied static methods to create a term. 
            <para>
            Use <see cref="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateCompare(UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Linq.FilterOperator)"/> to create a comparison term. A comparison term can apply one of <see cref="T:UWay.Skynet.Cloud.Data.CompareOperator"/> operators on the supplied expressions.
            Use <see cref="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIn(UWay.Skynet.Cloud.Data.SqlExpression,System.String)"/> to create a term which checks wheather an expression exists in a list of supplied values.
            Use <see cref="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateBetween(UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression)"/> to create a term which checks wheather an expression value is between a supplied lower and upper bounds.
            </para>
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateCompare(UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Linq.FilterOperator)">
            <summary>
            Creates a comparison WhereTerm.
            </summary>
            <param name="expr1">Expression on the left side of the operator</param>
            <param name="expr2">Expression on the right side of the operator</param>
            <param name="op">Conditional operator to be applied on the expressions</param>
            <returns>A new conditional WhereTerm</returns>
            <remarks>
            A comparison term compares two expression on the basis of their values. Expressions can be of any type but their results must be of comparible types. 
            For instance, you can not compare a database OtherData of type 'date' and a static value of type 'int'.
            </remarks>
            <example>
            <code>
            ...
            query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("name", tCustomers), SqlExpression.String("J%"), CompareOperator.Like));
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIn(UWay.Skynet.Cloud.Data.SqlExpression,System.String)">
            <summary>
            Creates a WhereTerm which represents SQL IN clause
            </summary>
            <param name="expr">Expression to be looked up</param>
            <param name="sql">Sub query</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIn(UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlConstantCollection)">
            <summary>
            Creates a WhereTerm which represents SQL IN clause
            </summary>
            <param name="expr">Expression to be looked up</param>
            <param name="values">List of values</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateNotIn(UWay.Skynet.Cloud.Data.SqlExpression,System.String)">
            <summary>
            Creates a WhereTerm which represents SQL NOT IN clause
            </summary>
            <param name="expr">Expression to be looked up</param>
            <param name="sql">Sub query</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateNotIn(UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlConstantCollection)">
            <summary>
            Creates a WhereTerm which represents SQL NOT IN clause
            </summary>
            <param name="expr">Expression to be looked up</param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIsNull(UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a WhereTerm which returns TRUE if an expression is NULL
            </summary>
            <param name="expr">Expression to be evaluated</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIsNotNull(UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a WhereTerm which returns TRUE if an expression is NOT NULL
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateExists(System.String)">
            <summary>
            Creates a WhereTerm which encapsulates SQL EXISTS clause
            </summary>
            <param name="sql">Sub query for the EXISTS clause</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CustomSql(System.String)">
            <summary>
            Creates a WhereTerm which encapsulates SQL EXISTS clause
            </summary>
            <param name="sql">Sub query for the EXISTS clause</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateNotExists(System.String)">
            <summary>
            Creates a WhereTerm which encapsulates SQL NOT EXISTS clause
            </summary>
            <param name="sql">Sub query for the NOT EXISTS clause</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateBetween(UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a WhereTerm which checks weather a value is in a specifed range.
            </summary>
            <param name="expr">Expression which yeilds the value to be checked</param>
            <param name="lowBound">Expression which yeilds the low bound of the range</param>
            <param name="highBound">Expression which yeilds the high bound of the range</param>
            <returns>A new WhereTerm</returns>
            <remarks>
            CreateBetween only accepts expressions which yeild a 'Date' or 'Number' values.
            All expressions must be of compatible types.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateCompare(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Linq.FilterOperator)">
            <summary>
            Creates a comparison WhereTerm.
            </summary>
            <param name="expr1">Expression on the left side of the operator</param>
            <param name="expr2">Expression on the right side of the operator</param>
            <param name="op">Conditional operator to be applied on the expressions</param>
            <returns>A new conditional WhereTerm</returns>
            <remarks>
            A comparison term compares two expression on the basis of their values. Expressions can be of any type but their results must be of comparible types. 
            For instance, you can not compare a database OtherData of type 'date' and a static value of type 'int'.
            </remarks>
            <example>
            <code>
            ...
            query.WherePhrase.Terms.Add(WhereTerm.CreateCompare(SqlExpression.Field("name", tCustomers), SqlExpression.String("J%"), CompareOperator.Like));
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIn(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,UWay.Skynet.Cloud.Data.SqlExpression,System.String)">
            <summary>
            Creates a WhereTerm which represents SQL IN clause
            </summary>
            <param name="expr">Expression to be looked up</param>
            <param name="sql">Sub query</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIn(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlConstantCollection)">
            <summary>
            Creates a WhereTerm which represents SQL IN clause
            </summary>
            <param name="expr">Expression to be looked up</param>
            <param name="values">List of values</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateNotIn(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,UWay.Skynet.Cloud.Data.SqlExpression,System.String)">
            <summary>
            Creates a WhereTerm which represents SQL NOT IN clause
            </summary>
            <param name="expr">Expression to be looked up</param>
            <param name="sql">Sub query</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateNotIn(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlConstantCollection)">
            <summary>
            Creates a WhereTerm which represents SQL NOT IN clause
            </summary>
            <param name="expr">Expression to be looked up</param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIsNull(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a WhereTerm which returns TRUE if an expression is NULL
            </summary>
            <param name="expr">Expression to be evaluated</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateIsNotNull(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a WhereTerm which returns TRUE if an expression is NOT NULL
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateExists(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,System.String)">
            <summary>
            Creates a WhereTerm which encapsulates SQL EXISTS clause
            </summary>
            <param name="sql">Sub query for the EXISTS clause</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateNotExists(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,System.String)">
            <summary>
            Creates a WhereTerm which encapsulates SQL NOT EXISTS clause
            </summary>
            <param name="sql">Sub query for the NOT EXISTS clause</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.CreateBetween(UWay.Skynet.Cloud.Linq.FilterCompositionLogicalOperator,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression,UWay.Skynet.Cloud.Data.SqlExpression)">
            <summary>
            Creates a WhereTerm which checks weather a value is in a specifed range.
            </summary>
            <param name="expr">Expression which yeilds the value to be checked</param>
            <param name="lowBound">Expression which yeilds the low bound of the range</param>
            <param name="highBound">Expression which yeilds the high bound of the range</param>
            <returns>A new WhereTerm</returns>
            <remarks>
            CreateBetween only accepts expressions which yeild a 'Date' or 'Number' values.
            All expressions must be of compatible types.
            </remarks>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereTerm.Relationship">
            <summary>
            Gets the relationship for this clause
            </summary>
            <remarks>
            Where clause relationship defines what kind of logical condition exists between all terms and sub clauses of this WhereClause
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTerm.Clone">
            <summary>
            Creates a copy of this WhereTerm
            </summary>
            <returns>A new WhereTerm which exactly the same as the current one.</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.WhereTermCollection">
            <summary>
              A collection that stores <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> objects.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.#ctor">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.#ctor(UWay.Skynet.Cloud.Data.WhereTermCollection)">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> based on another <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
            <param name='val'>
              A <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.#ctor(UWay.Skynet.Cloud.Data.WhereTerm[])">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> containing any array of <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> objects.
            </summary>
            <param name='val'>
                  A array of <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereTermCollection.Item(System.Int32)">
            <summary>
              Represents the entry at the specified index of the <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/>.
            </summary>
            <param name='index'>The zero-based index of the entry to locate in the collection.</param>
            <value>The entry at the specified index of the collection.</value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.Add(UWay.Skynet.Cloud.Data.WhereTerm)">
            <summary>
              Adds a <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> with the specified value to the 
              <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> to add.</param>
            <returns>The index at which the new element was inserted.</returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereTermCollection.AddRange(UWay.Skynet.Cloud.Data.WhereTerm[])'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.AddRange(UWay.Skynet.Cloud.Data.WhereTerm[])">
            <summary>
              Copies the elements of an array to the end of the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
            <param name='val'>
               An array of type <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> containing the objects to add to the collection.
            </param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereTermCollection.Add(UWay.Skynet.Cloud.Data.WhereTerm)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.AddRange(UWay.Skynet.Cloud.Data.WhereTermCollection)">
            <summary>
              Adds the contents of another <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> to the end of the collection.
            </summary>
            <param name='val'>
               A <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> containing the objects to add to the collection.
            </param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereTermCollection.Add(UWay.Skynet.Cloud.Data.WhereTerm)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.Contains(UWay.Skynet.Cloud.Data.WhereTerm)">
            <summary>
              Gets a value indicating whether the 
               <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> contains the specified <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> to locate.</param>
            <returns>
            <see langword='true'/> if the <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> is contained in the collection; 
              otherwise, <see langword='false'/>.
            </returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereTermCollection.IndexOf(UWay.Skynet.Cloud.Data.WhereTerm)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.CopyTo(UWay.Skynet.Cloud.Data.WhereTerm[],System.Int32)">
            <summary>
              Copies the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.
            </summary>
            <param name='array'>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.</param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <exception cref='T:System.ArgumentException'>
              <para><paramref name='array'/> is multidimensional.</para>
              <para>-or-</para>
              <para>The number of elements in the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> is greater than
                    the available space between <paramref name='arrayIndex'/> and the end of
                    <paramref name='array'/>.</para>
            </exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='arrayIndex'/> is less than <paramref name='array'/>'s lowbound. </exception>
            <seealso cref='T:System.Array'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.IndexOf(UWay.Skynet.Cloud.Data.WhereTerm)">
            <summary>
               Returns the index of a <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> in 
                  the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> to locate.</param>
            <returns>
              The index of the <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> of <paramref name='val'/> in the 
              <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>, if found; otherwise, -1.
            </returns>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereTermCollection.Contains(UWay.Skynet.Cloud.Data.WhereTerm)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.Insert(System.Int32,UWay.Skynet.Cloud.Data.WhereTerm)">
            <summary>
              Inserts a <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> into the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/> at the specified index.
            </summary>
            <param name='index'>The zero-based index where <paramref name='val'/> should be inserted.</param>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> to insert.</param>
            <seealso cref='M:UWay.Skynet.Cloud.Data.WhereTermCollection.Add(UWay.Skynet.Cloud.Data.WhereTerm)'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.GetEnumerator">
            <summary>
             Returns an enumerator that can iterate through the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
            <seealso cref='T:System.Collections.IEnumerator'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.Remove(UWay.Skynet.Cloud.Data.WhereTerm)">
            <summary>
              Removes a specific <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> from the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
            <param name='val'>The <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> to remove from the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.</param>
            <exception cref='T:System.ArgumentException'><paramref name='val'/> is not found in the Collection.</exception>
        </member>
        <member name="T:UWay.Skynet.Cloud.Data.WhereTermCollection.WhereClauseEnumerator">
            <summary>
              Enumerator that can iterate through a WhereClauseCollection.
            </summary>
            <seealso cref='T:System.Collections.IEnumerator'/>
            <seealso cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>
            <seealso cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.WhereClauseEnumerator.#ctor(UWay.Skynet.Cloud.Data.WhereTermCollection)">
            <summary>
              Initializes a new instance of <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection.WhereClauseEnumerator'/>.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Data.WhereTermCollection.WhereClauseEnumerator.Current">
            <summary>
              Gets the current <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> in the <seealso cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.WhereClauseEnumerator.MoveNext">
            <summary>
              Advances the enumerator to the next <see cref='T:UWay.Skynet.Cloud.Data.WhereTerm'/> of the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Data.WhereTermCollection.WhereClauseEnumerator.Reset">
            <summary>
              Sets the enumerator to its initial position, which is before the first element in the <see cref='T:UWay.Skynet.Cloud.Data.WhereTermCollection'/>.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Collections.JsonObject">
            <summary>
            JSON Object
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Collections.IPropertySet">
            <summary>
            属性集接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.IPropertySet.Item(System.String)">
            <summary>
            通过属性名得到或设置属性值
            </summary>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.IPropertySet.Keys">
            <summary>
            返回所有的属性Key
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.IPropertySet.Get``1(System.String)">
            <summary>
            通过属性名得到属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.IPropertySet.Get``1(System.String,``0)">
            <summary>
            通过属性名得到属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.IPropertySet.Contains(System.String)">
            <summary>
            判断属性集中是否包含特定的属性名
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.IPropertySet.Count">
            <summary>
            返回属性的数量
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.IPropertySet.Remove(System.String)">
            <summary>
            通过属性名移除属性
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.IPropertySet.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.IPropertySet.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="E:UWay.Skynet.Cloud.Collections.IPropertySet.PropertyChanged">
            <summary>
            属性改变事件
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Collections.PropertySet">
            <summary>
            属性集对象
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.#ctor">
            <summary>
            构造属性集对象
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.#ctor(System.StringComparer)">
            <summary>
            构造属性集对象
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.#ctor(UWay.Skynet.Cloud.Collections.IPropertySet)">
            <summary>
            构造属性集对象
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.PropertySet.Item(System.String)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.PropertySet.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.Contains(System.String)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.PropertySet.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.Get``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.TryGetPropertyValue(System.Type,System.String,System.Object@)">
            <summary>
            
            </summary>
            <param name="toType"></param>
            <param name="property"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.Get``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.PropertySet.IsChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.AcceptChanges">
            <summary>
            Accept change
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.RejectChanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="newValue"></param>
            <param name="oldValue"></param>
        </member>
        <member name="E:UWay.Skynet.Cloud.Collections.PropertySet.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.PropertySet.IsEdit">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.BeginEdit">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.CancelEdit">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Collections.PropertySet.IsRestore">
            <summary>
            是否在还原状态
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.EndEdit">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.TryGetValue(System.String,System.Object@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#IDictionary{System#String,System#Object}#Values">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Collections.PropertySet.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Disposables.BooleanDisposable">
            <summary>
            对象自动回收类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.BooleanDisposable.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.BooleanDisposable.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Disposables.BooleanDisposable.IsDisposed">
            <summary>
            判断当前对象是否释放
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.BooleanDisposable.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.BooleanDisposable.CheckNotDisposed">
            <summary>
            检查对象是否还没有被释放
            </summary>
            <exception cref="T:System.ObjectDisposedException">如果对象已经释放则触发该异常</exception>
        </member>
        <member name="T:UWay.Skynet.Cloud.Disposables.ICompositeDisposable">
            <summary>
            可复合的Disposable对象接口
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.ICompositeDisposable.AddDisposable(System.IDisposable)">
            <summary>
            添加Disposable对象
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Disposables.CompositeDisposable">
            <summary>
            可复合的Disposable对象
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.CompositeDisposable.#ctor">
            <summary>
            构造对象
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.CompositeDisposable.#ctor(System.Int32)">
            <summary>
            构造对象
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.CompositeDisposable.AddDisposable(System.IDisposable)">
            <summary>
            添加Disposable对象
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Disposables.CompositeDisposable.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Disposables.IBooleanDisposable">
            <summary>
            对象自动回收接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Disposables.IBooleanDisposable.IsDisposed">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Disposables.IDisposeCollector">
            <summary>
            资源回收器接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Disposables.IDisposeCollector.Disposes">
            <summary>
            可回收的资源列表
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.ExceptionHandle.IErrorItem.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.ExceptionHandle.IErrorItem.Key">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.ExceptionHandle.IErrorState">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.IErrorState.AddError(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="memberName"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.IErrorState.AddError(System.String)">
            <summary>
            
            </summary>
            <param name="errorMessage"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.ExceptionHandle.IErrorState.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.ErrorState.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.ErrorState.#ctor(System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.ExceptionHandle.IErrorItem})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.ExceptionHandle.ErrorState.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.ErrorState.AddError(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="memberName"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.ErrorState.AddError(System.String)">
            <summary>
            
            </summary>
            <param name="errorMessage"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.ExceptionHandle.ErrorState.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.ExceptionHandle.DatabaseException">
            <summary>
            数据库异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.DatabaseException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.DatabaseException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.DatabaseException.#ctor(System.String,System.Exception)">
             <summary>
            构造函数
             </summary>
             <param name="message">消息</param>
             <param name="innerException">内部异常</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.ExceptionHandle.PersistenceException">
            <summary>
            持久化异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.PersistenceException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.PersistenceException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.PersistenceException.#ctor(System.String,System.Exception)">
             <summary>
            构造函数
             </summary>
             <param name="message">消息</param>
             <param name="innerException">内部异常</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.ExceptionHandle.ConnectionException">
            <summary>
            连接异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.ConnectionException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.ConnectionException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.ConnectionException.#ctor(System.String,System.Exception)">
             <summary>
            构造函数
             </summary>
             <param name="message">消息</param>
             <param name="innerException">内部异常</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.ExceptionHandle.InsertException">
            <summary>
            插入异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.InsertException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.InsertException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.InsertException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">消息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.ExceptionHandle.DeleteException">
            <summary>
            删除异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.DeleteException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.DeleteException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.DeleteException.#ctor(System.String,System.Exception)">
             <summary>
            构造函数
             </summary>
             <param name="message">消息</param>
             <param name="innerException">内部异常</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.ExceptionHandle.UpdateException">
            <summary>
            更新异常
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.UpdateException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.UpdateException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.UpdateException.#ctor(System.String,System.Exception)">
             <summary>
            构造函数
             </summary>
             <param name="message">消息</param>
             <param name="innerException">内部异常</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.ExceptionHandle.RepeatRegistrationException">
            <summary>
            重复注册异常类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.RepeatRegistrationException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.RepeatRegistrationException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.ExceptionHandle.RepeatRegistrationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="bindingInfo"></param>
            <param name="context"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.CollectionExtension">
            <summary>
            集合扩展
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.CollectionExtension.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                添加集合到现有集合中
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.CollectionExtension.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
                Each 迭代操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.CollectionExtension.ConvertToDictionary``2(System.Collections.Generic.ICollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                将集合转换到 Dictionary
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="source"></param>
            <param name="name">做为键值对 name 的属性。</param>
            <param name="value">做为键值对 value 的属性。</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.CollectionExtension.ConvertToNameValueCollection``2(System.Collections.Generic.ICollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                取集合的键值对集合
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="source"></param>
            <param name="name">做为键值对 name 的属性。</param>
            <param name="value">做为键值对 value 的属性。</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.IDataCollection">
            <summary>
            数据状态集合对象，主要用来解耦Asp.net内置的状态对象，如：Session，Application，Cache等
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Extensions.IDataCollection.Item(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.IDataCollection.ContainsKey(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.IDataCollection.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Extensions.IDataCollection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.IDataCollection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.IDataContext">
            <summary>
            数据处理上下文
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Extensions.IDataContext.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.Converter">
            <summary>
            Converter 类，支持基本数据类型，以及Enum和Nullable数据类型间的相互转换
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.Converter.IsPrimitiveType(System.Type)">
            <summary>
            The primitive types are Boolean, Byte, SByte, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Char, Double, Single,Decimal,DateTime,DBNull,Enum,Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.Converter.Convert``2(``0)">
            <summary>
            
            </summary>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.Converter.Convert(System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.ExpressionExtensions">
            <summary>
            表达式树常用扩展方法
            源自：https://gitee.com/yubaolee/OpenAuth.Net/blob/bestflow/Infrastructure/DynamicLinq.cs
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.GetPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" -->
        <member name="M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.GenerateBody``1(System.Linq.Expressions.ParameterExpression,UWay.Skynet.Cloud.Extensions.Filter)">
            <summary>
            创建linq表达示的body部分
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.GenerateLambda(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            创建完整的lambda
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            以特定的条件运行组合两个Expression表达式
            </summary>
            <typeparam name="T">表达式的主实体类型</typeparam>
            <param name="first">第一个Expression表达式</param>
            <param name="second">要组合的Expression表达式</param>
            <param name="merge">组合条件运算方式</param>
            <returns>组合后的表达式</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            以 Expression.AndAlso 组合两个Expression表达式
            </summary>
            <typeparam name="T">表达式的主实体类型</typeparam>
            <param name="first">第一个Expression表达式</param>
            <param name="second">要组合的Expression表达式</param>
            <returns>组合后的表达式</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            以 Expression.OrElse 组合两个Expression表达式
            </summary>
            <typeparam name="T">表达式的主实体类型</typeparam>
            <param name="first">第一个Expression表达式</param>
            <param name="second">要组合的Expression表达式</param>
            <returns>组合后的表达式</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.ParameterRebinder">
            <summary>
            参数重新绑定
            </summary>
            <seealso cref="T:System.Linq.Expressions.ExpressionVisitor" />
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.ParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.ParameterRebinder"/> class.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.ParameterRebinder.ReplaceParameters(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression)">
            <summary>
            Replaces the parameters.
            </summary>
            <param name="map">The map.</param>
            <param name="exp">The exp.</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ExpressionExtensions.ParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            访问 <see cref="T:System.Linq.Expressions.ParameterExpression" />。
            </summary>
            <param name="node">要访问的表达式。</param>
            <returns>
            如果修改了该表达式或任何子表达式，则为修改后的表达式；否则返回原始表达式。
            </returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.GenericExtension">
            <summary>
            泛型扩展
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.GenericExtension.ToDictionary``1(``0,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            转化字典
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="t">转化类</param>
            <param name="dic">字典</param>
            <returns>返回字典</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.GenericExtension.ToDictionary``2(``0,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            转化字典
            </summary>
            <typeparam name="TInterface">接口</typeparam>
            <typeparam name="T">实体类型</typeparam>
            <param name="t">实体</param>
            <param name="dic">字典</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.GenericExtension.ParseTo``1(System.String)">
            <summary>
                将字符串转换为指定的类型，如果转换不成功，返回默认值。
            </summary>
            <typeparam name="T">结构体类型或枚举类型</typeparam>
            <param name="str">需要转换的字符串</param>
            <returns>返回指定的类型。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.GenericExtension.ParseTo``1(System.String,``0)">
            <summary>
                将字符串转换为指定的类型，如果转换不成功，返回默认值。
            </summary>
            <typeparam name="T">结构体类型或枚举类型</typeparam>
            <param name="str">需要转换的字符串</param>
            <param name="defaultValue">如果转换失败，需要使用的默认值</param>
            <returns>返回指定的类型。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.GenericExtension.ParseToNullable``1(System.String)">
            <summary>
                将字符串转换为指定的类型，如果转换不成功，返回null
            </summary>
            <typeparam name="T">结构体类型或枚举类型</typeparam>
            <param name="str">需要转换的字符串</param>
            <returns>返回指定的类型</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.GenericExtension.FastClone``2(``0)">
            <summary>
            快速复制
            </summary>
            <typeparam name="TIn"></typeparam>
            <typeparam name="TOut"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.GenericExtension.Order(System.Collections.Generic.ICollection{System.String},System.Boolean)">
            <summary>
            对IP地址列表实现排序
            </summary>
            <param name="ips"></param>
            <param name="asc">true为升序，false为降序</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.ObjectFastClone`2">
            <summary>
            运用表达式树实现对象的快速复制
            </summary>
            <typeparam name="TIn">目标对象</typeparam>
            <typeparam name="TOut">输出对象</typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetPropertyValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                取得对象指定属性的值
            </summary>
            <param name="predicate">要取值的属性</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetPropertyValue``1(``0,System.String)">
            <summary>
                取对象属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName">支持“.”分隔的多级属性取值。</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.SetPropertyValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
                设置对象指定属性的值
            </summary>
            <param name="predicate">要设置值的属性</param>
            <param name="value">设置值</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.SetPropertyValue``1(``0,System.String,System.Object)">
            <summary>
                设置对象属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName">propertyName1.propertyName2.propertyName3</param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToDataSet``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <typeparam name="T">转换的元素类型。</typeparam>
            <param name="list">集合。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToList``1(System.Data.DataTable)">
            <summary>
            DataTable转List
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ChangeType(System.Object,System.Type)" -->
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToDataSet(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <param name="list">集合。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToDataSet``1(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <typeparam name="T">转换的元素类型。</typeparam>
            <param name="list">集合。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToListSet``1(``0,System.Boolean)">
            <summary>
            将实例转换为集合数据集。
            </summary>
            <typeparam name="T">实例类型。</typeparam>
            <param name="o">实例。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToXmlDocument``1(``0)">
            <summary>
            将可序列化实例转换为XmlDocument。
            </summary>
            <typeparam name="T">实例类型。</typeparam>
            <param name="o">实例。</param>
            <returns>XmlDocument。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ListToDataSet(System.Collections.IEnumerable,System.Type,System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <param name="list">集合。</param>
            <param name="t">转换的元素类型。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>转换后的数据集。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ListToDataSet``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <typeparam name="T">转换的元素类型。</typeparam>
            <param name="list">集合。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ListToDataSet(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <param name="list">集合。</param>
            <param name="generic">是否转换为字符串形式。</param>
            <returns>转换后的数据集。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetData(System.Data.DataSet)">
            <summary>
            获取DataSet第一表，第一行，第一列的值。
            </summary>
            <param name="ds">DataSet数据集。</param>
            <returns>值。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetData(System.Data.DataTable)">
            <summary>
            获取DataTable第一行，第一列的值。
            </summary>
            <param name="dt">DataTable数据集表。</param>
            <returns>值。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetData(System.Data.DataSet,System.String)">
            <summary>
            获取DataSet第一个匹配columnName的值。
            </summary>
            <param name="ds">数据集。</param>
            <param name="columnName">列名。</param>
            <returns>值。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetData(System.Data.DataTable,System.String)">
            <summary>
            获取DataTable第一个匹配columnName的值。
            </summary>
            <param name="dt">数据表。</param>
            <param name="columnName">列名。</param>
            <returns>值。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToString(System.Object,System.String)">
            <summary>
            将object转换为string类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>string。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToString(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            将DateTime?转换为string类型信息。
            </summary>
            <param name="o">DateTime?。</param>
            <param name="format">标准或自定义日期和时间格式的字符串。</param>
            <param name="t">默认值。</param>
            <returns>string。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToString(System.Nullable{System.TimeSpan},System.String,System.String)">
            <summary>
            将TimeSpan?转换为string类型信息。
            </summary>
            <param name="o">TimeSpan?。</param>
            <param name="format">标准或自定义时间格式的字符串。</param>
            <param name="t">默认值。</param>
            <returns>string。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToSubString(System.Object,System.Int32,System.Int32,System.String)">
            <summary>
            将object转换为截取后的string类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="startIndex">此实例中子字符串的起始字符位置（从零开始）。</param>
            <param name="length">子字符串中的字符数。</param>
            <param name="suffix">后缀。如果没有截取则不添加。</param>
            <returns>截取后的string类型信息。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToByte(System.Object,System.Byte)">
            <summary>
            将object转换为byte类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>byte。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToChar(System.Object,System.Char)">
            <summary>
            将object转换为char类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>char。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToInt(System.Object,System.Int32)">
            <summary>
            将object转换为int类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>int。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToDouble(System.Object,System.Double)">
            <summary>
            将object转换为double类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>double。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将object转换为decimal类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>decimal。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToFloat(System.Object,System.Single)">
            <summary>
            将object转换为float类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>float。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToLong(System.Object,System.Int64)">
            <summary>
            将object转换为long类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>long。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToBool(System.Object,System.Boolean)">
            <summary>
            将object转换为bool类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToSbyte(System.Object,System.SByte)">
            <summary>
            将object转换为sbyte类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>sbyte。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToShort(System.Object,System.Int16)">
            <summary>
            将object转换为short类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>short。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToUShort(System.Object,System.UInt16)">
            <summary>
            将object转换为ushort类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>ushort。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToULong(System.Object,System.UInt64)">
            <summary>
            将object转换为ulong类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>ulong。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToEnum``1(System.Object,``0)">
            <summary>
            将object转换为Enum[T]类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>Enum[T]。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将object转换为DateTime类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>DateTime。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToTimeSpan(System.Object,System.TimeSpan)">
            <summary>
            将object转换为TimeSpan类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>TimeSpan。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToGuid(System.Object,System.Guid)">
            <summary>
            将object转换为Guid类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>Guid。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetBool(System.Object)">
            <summary>
            从object中获取bool类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetInt(System.Object)">
            <summary>
            从object中获取int类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>int。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetDecimal(System.Object)">
            <summary>
            从object中获取decimal类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>decimal。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetDouble(System.Object)">
            <summary>
            从object中获取double类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>double。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetPositiveNumber(System.Object)">
            <summary>
            从object中获取正数信息。
            </summary>
            <param name="o">object。</param>
            <returns>decimal。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetDateTime(System.Object)">
            <summary>
            从object中获取DateTime?类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>DateTime?。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetTimeSpan(System.Object)">
            <summary>
            从object中获取TimeSpan?类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>TimeSpan?。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetGuid(System.Object)">
            <summary>
            从object中获取Guid?类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>Guid?。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetSqlDateTime(System.Object,System.DateTime)">
            <summary>
            将object转换为SqlServer中的DateTime?类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>DateTime?。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.Value(System.Xml.Linq.XElement,System.String)">
            <summary>
            读取XElement节点的文本内容。
            </summary>
            <param name="xElement">XElement节点。</param>
            <param name="t">默认值。</param>
            <returns>文本内容。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            获取与指定键相关的值。
            </summary>
            <typeparam name="TKey">键类型。</typeparam>
            <typeparam name="TValue">值类型。</typeparam>
            <param name="dictionary">表示键/值对象的泛型集合。</param>
            <param name="key">键。</param>
            <param name="t">默认值。</param>
            <returns>值。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetFirstOrDefaultValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            获取与指定键相关或者第一个的值。
            </summary>
            <typeparam name="TKey">键类型。</typeparam>
            <typeparam name="TValue">值类型。</typeparam>
            <param name="dictionary">表示键/值对象的泛型集合。</param>
            <param name="key">键。</param>
            <param name="t">默认值。</param>
            <returns>值。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.Element(System.Xml.Linq.XContainer,System.Xml.Linq.XName,System.Boolean)">
            <summary>
            获取具有指定 System.Xml.Linq.XName 的第一个（按文档顺序）子元素。
            </summary>
            <param name="xContainer">XContainer。</param>
            <param name="xName">要匹配的 System.Xml.Linq.XName。</param>
            <param name="t">是否返回同名默认值。</param>
            <returns>与指定 System.Xml.Linq.XName 匹配的 System.Xml.Linq.XElement，或者为 null。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.Elements(System.Xml.Linq.XContainer,System.Boolean)">
            <summary>
            按文档顺序返回此元素或文档的子元素集合。
            </summary>
            <param name="xContainer">XContainer。</param>
            <param name="t">是否返回非空默认值。</param>
            <returns>System.Xml.Linq.XElement 的按文档顺序包含此System.Xml.Linq.XContainer 的子元素，或者非空默认值。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.Elements(System.Xml.Linq.XContainer,System.Xml.Linq.XName,System.Boolean)">
            <summary>
            按文档顺序返回此元素或文档的经过筛选的子元素集合。集合中只包括具有匹配 System.Xml.Linq.XName 的元素。
            </summary>
            <param name="xContainer">XContainer。</param>
            <param name="xName">要匹配的 System.Xml.Linq.XName。</param>
            <param name="t">是否返回非空默认值。</param>
            <returns>System.Xml.Linq.XElement 的按文档顺序包含具有匹配System.Xml.Linq.XName 的 System.Xml.Linq.XContainer 的子级，或者非空默认值。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.RemoveHTMLTags(System.String)">
            <summary>
            删除html标签。
            </summary>
            <param name="html">输入的字符串。</param>
            <returns>没有html标签的字符串。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToFileName(System.String)">
            <summary>
            字符串转换为文件名。
            </summary>
            <param name="s">字符串。</param>
            <returns>文件名。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.GetMonday(System.DateTime)">
            <summary>
            获取星期一的日期。
            </summary>
            <param name="dateTime">日期。</param>
            <returns>星期一的日期。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.DefaultStringIfEmpty(System.String,System.String[])">
            <summary>
            获取默认非空字符串。
            </summary>
            <param name="s">首选默认非空字符串。</param>
            <param name="args">依次非空字符串可选项。</param>
            <returns>默认非空字符串。若无可选项则返回string.Empty。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToUrlEncodeString(System.String,System.Text.RegularExpressions.Regex,System.Text.Encoding)">
            <summary>
            对 URL 字符串进行编码。
            </summary>
            <param name="s">要编码的文本。</param>
            <param name="regex">匹配要编码的文本。</param>
            <param name="encoding">指定编码方案的 System.Text.Encoding 对象。</param>
            <returns>一个已编码的字符串。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToUrlEncodeString(System.String,System.String,System.Text.Encoding)">
            <summary>
            对 URL 字符串进行编码。
            </summary>
            <param name="s">要编码的文本。</param>
            <param name="regex">匹配要编码的文本。</param>
            <param name="encoding">指定编码方案的 System.Text.Encoding 对象。</param>
            <returns>一个已编码的字符串。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.ToUnixTimeStamp(System.DateTime)">
            <summary>
            将日期转换为UNIX时间戳字符串
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.IsMobile(System.String)">
            <summary>
            判断当前字符串是否是移动电话号码
            </summary>
            <param name="mobile"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ObjectExtension.IsEmail(System.String)">
            <summary>
            判断当前字符串是否为邮箱
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Extensions.ServiceExtension">
            <summary>
            IServiceCollection扩展
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ServiceExtension.AddTransientAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            用DI批量注入接口程序集中对应的实现类。
            <para>
            需要注意的是，这里有如下约定：
            IUserService --> UserService, IUserRepository --> UserRepository.
            </para>
            </summary>
            <param name="service"></param>
            <param name="interfaceAssemblyName">接口程序集的名称（不包含文件扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ServiceExtension.AddScopedAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)">
            <summary>
            用DI批量注入接口程序集中对应的实现类。
            </summary>
            <param name="service"></param>
            <param name="interfaceAssemblyName">接口程序集的名称（不包含文件扩展名）</param>
            <param name="implementAssemblyName">实现程序集的名称（不包含文件扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.ServiceExtension.UseCsRedisClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String[])">
            <summary>
            使用CSRedis代替StackChange.Redis
            <remarks>
            关于CSRedis项目，请参考<seealso cref="!:https://github.com/2881099/csredis"/>
            </remarks>
            </summary>
            <param name="services"></param>
            <param name="redisConnectionStrings">redis连接字符串。
            <remarks>
            如果是单机模式，请只输入一个连接字符串；如果是集群模式，请输入多个连接字符串
            </remarks>
            </param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.StringExtensions.ReplaceWhitespace(System.String,System.String)">
            <summary>
                替换空格字符
            </summary>
            <param name="input"></param>
            <param name="replacement">替换为该字符</param>
            <returns>替换后的字符串</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.StringExtensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
                返回一个值，该值指示指定的 String 对象是否出现在此字符串中。
            </summary>
            <param name="source"></param>
            <param name="value">要搜寻的字符串。</param>
            <param name="comparisonType">指定搜索规则的枚举值之一。</param>
            <returns>如果 value 参数出现在此字符串中则为 true；否则为 false。</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.StringExtensions.StripHtml(System.String,System.Int32)">
            <summary>
                清除 Html 代码，并返回指定长度的文本。(连续空行或空格会被替换为一个)
            </summary>
            <param name="text"></param>
            <param name="maxLength">返回的文本长度（为0返回所有文本）</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlNodeExtensions.ChildElementInnerText(System.Xml.XmlNode,System.String)">
            <exception cref="T:System.ArgumentException">
            Child element with name specified by <paramref name="childName"/> does not exists.
            </exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.IsXml(System.String)">
            <summary>
            判断一个字符串是否是Xml格式的文档
            </summary>
            <param name="AXml">要判断的字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.CreateXmlDocument(System.String)">
            <summary>
            创建XML文档对象
            </summary>
            <param name="AXml">XML文档内容</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetInnerText(System.String,System.String)">
            <summary>
            取得指定标记下的结点内容，标记按ID,Name,TagName的顺序依次寻找
            </summary>
            <param name="AXml">XML文档内容</param>
            <param name="AFlag">标记</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetInnerText(System.Xml.XmlDocument,System.String)">
            <summary>
            取得指定标记下的结点内容，标记按ID,Name,TagName的顺序依次寻找
            </summary>
            <param name="ADoc">文档对象</param>
            <param name="AFlag">标记</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetInnerTextById(System.String,System.String)">
            <summary>
            取得指定ID下的结点内容
            </summary>
            <param name="ADoc">XML文档内容InnerText</param>
            <param name="AID">结点ID</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetInnerTextById(System.Xml.XmlDocument,System.String)">
            <summary>
            取得指定ID下的结点内容
            </summary>
            <param name="ADoc">文档对象</param>
            <param name="AID">结点ID</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetInnerTextByName(System.String,System.String)">
            <summary>
            取得指定Name下的结点内容
            </summary>
            <param name="AXml">XML文档内容InnerText</param>
            <param name="AId">结点Name</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetInnerTextByName(System.Xml.XmlDocument,System.String)">
            <summary>
            取得指定Name下的结点内容
            </summary>
            <param name="ADoc">文档对象</param>
            <param name="AId">结点Name</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetInnerTextByTagName(System.String,System.String)">
            <summary>
            取得指定TagName下的结点内容
            </summary>
            <param name="AXml">XML文档内容InnerText</param>
            <param name="AId">结点TagName</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetInnerTextByTagName(System.Xml.XmlDocument,System.String)">
            <summary>
            取得指定TagName下的结点内容，如果有多个只取第一个
            </summary>
            <param name="ADoc">文档对象</param>
            <param name="AId">结点TagName</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Extensions.XmlExtensions.GetElementByAttributeName(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            取得Xml元素中首个属性值符合要求的Xml元素
            </summary>
            <param name="AElement">Xml元素</param>
            <param name="AName">属性名</param>
            <param name="AValue">属性值</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.FileHandling.FileHandler">
            <summary>
            <see cref="T:UWay.Skynet.Cloud.FileHandling.IFileHandler"/>文件存储实现
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.FileHandler.SaveFile(System.String,System.String,System.Boolean)">
            <summary>
            将一个文件存储到系统中
            </summary>
            <param name="file">文件路径</param>
            <param name="rename">是否重新命名文件</param>
            <param name="folder">文件夹</param>
            <returns>存储完毕的实际文件名称</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.FileHandler.SaveFile(System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            将一个文件流存储到系统中
            </summary>
            <param name="fileName">文件名称</param>
            <param name="inputStream">文件流</param>
            <param name="rename">是否重新命名</param>
            <param name="folder">文件夹</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.FileHandler.OpenFile(System.String)">
            <summary>
            打开一个文件流
            </summary>
            <param name="name">文件名称</param>
            <returns>文件流</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.FileHandler.GetFileInformation(System.String)">
            <summary>
            获取文件信息
            </summary>
            <param name="name">文件名称</param>
            <returns>文件信息</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.FileHandler.Remove(System.String)">
            <summary>
            移除一个文件
            </summary>
            <param name="name">文件名称</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.FileHandler.GetAllFiles(System.String)">
            <summary>
            获取路径下所有文件
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.FileHandler.UnZip(System.String,System.String)">
            <summary>
            解压zip
            </summary>
            <param name="compressfilepath"></param>
            <param name="uncompressdir"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.FileHandling.FileInfomation">
            <summary>
             文件信息
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.FileHandling.FileInfomation.FullName">
            <summary>
            目录或文件的完整目录。
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.FileHandling.FileInfomation.Name">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.FileHandling.FileInfomation.LastModifyDate">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.FileHandling.FileInfomation.Length">
            <summary>
            文件长度
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.FileHandling.FileInfomation.Exists">
            <summary>
            是否存在
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.FileHandling.FileInfomation.Extension">
            <summary>
            文件扩展名
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.FileHandling.IFileHandler">
            <summary>
            文件管理接口
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.SaveFile(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="file">文件名称</param>
            <param name="rename">是否重命名</param>
            <param name="folder">目标文件夹名称</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.SaveFile(System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            将一个文件流存储到系统中
            </summary>
            <param name="fileName">文件名称</param>
            <param name="inputStream">文件流</param>
            <param name="rename">是否重新命名</param>
            <param name="folder"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.Remove(System.String)">
            <summary>
            移除一个文件
            </summary>
            <param name="name">文件名称</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.OpenFile(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.OpenFile(System.String,System.IO.FileMode)">
            <summary>
            找开文件
            </summary>
            <param name="name">文件名</param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.Append(System.IO.Stream,System.Byte[])">
            <summary>
            扩展数据流添加字节数据的方法
            </summary>
            <param name="stream">stream</param>
            <param name="buffer">buffer</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.GetFileInformation(System.String)">
            <summary>
            获取文件信息
            </summary>
            <param name="name">文件名称</param>
            <returns>文件信息</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.Rename(System.String,System.String)">
            <summary>
            给文件重新命名
            </summary>
            <param name="oldFileName">旧的文件名</param>
            <param name="newFileName">新的文件名</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.FileHandling.IFileHandler.GetAllFiles(System.String)">
            <summary>
            获取路径下所有文件
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Guard">
            <summary>
            断言函数
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Guard.NotNull(System.Object,System.String)">
            <summary>
            判断参数是否为空
            </summary>
            <param name="argumentValue"></param>
            <param name="argumentName"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Guard.NotNullOrEmpty(System.String,System.String)">
            <summary>
            参数不为空
            </summary>
            <param name="argumentValue"></param>
            <param name="argumentName"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.LifestyleType">
            <summary>
            组件生命周期类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.LifestyleType.Default">
            <summary>
            得到或设置组件的确实生命周期类型
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.LifestyleFlags">
            <summary>
            组件生命周期类型枚举
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.LifestyleFlags.Singleton">
            <summary>
            单利
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.LifestyleFlags.Thread">
            <summary>
            线程内单利
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.LifestyleFlags.Transient">
            <summary>
            临时
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.LifestyleFlags.GenericSingleton">
            <summary>
            泛型单利
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.LifestyleFlags.GenericThread">
            <summary>
            泛型线程内单利
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.LifestyleFlags.GenericTransient">
            <summary>
            泛型临时
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.EnumerateOnce`1">
            <summary>
            枚举一次列表
            </summary>
            <typeparam name="T">枚举类型</typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.EnumerateOnce`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            构造函数
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.GenericEnumerable`1">
            <summary>
            普通可枚举类型
            </summary>
            <typeparam name="T">枚举类型</typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.GenericEnumerable`1.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.GenericEnumerable`1"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Helper">
            <summary>
            基础平台扩展类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Paging``1(System.Linq.IQueryable{``0},UWay.Skynet.Cloud.Linq.Pagination)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.GetDescriptionByName``1(``0)">
            <summary>
            get enum description by name
            </summary>
            <typeparam name="T">enum type</typeparam>
            <param name="enumItemName">the enum name</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.MD5(System.String)">
            <summary>
            获取字符的MD5
            </summary>
            <param name="val">字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Match(System.String,System.String)">
            <summary>
            string 匹配
            </summary>
            <param name="src"></param>
            <param name="reg"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Matches(System.String,System.String,System.String)">
            <summary>
            返回所有匹配指定前缀与后缀的字符串
            </summary>
            <param name="src"></param>
            <param name="prefix"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.FirstLower(System.String)">
            <summary>
            字符串首字母小写
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.FirstUpper(System.String)">
            <summary>
            字符串首字母大写
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.MatchAntExpressions(System.String)">
            <summary>
            返回所有匹配前缀为'${'，后缀为'}'的蚂蚁表达式
            </summary>
            <exception cref="T:System.FormatException">
            如果提供的表达式为空(<c>${}</c>).
            </exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.SetAntExpression(System.String,System.String,System.Object)">
            <summary>
            将指定字符串中的蚂蚁表达式替换成指定的内容
            </summary>
            <param name="src"></param>
            <param name="expression">蚂蚁表达式</param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Surround(System.String,System.String,System.String)">
            <summary>
            字符扩展添加前缀
            </summary>
            <param name="prefix"></param>
            <param name="target"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Matches(System.String,System.Char)">
            <summary>
            返回所有匹配指定前缀的字符串
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.RightOfRightmostOf(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToSort(System.Collections.Generic.IList{UWay.Skynet.Cloud.Linq.SortDescriptor})">
            <summary>
            转化排序SQL
            </summary>
            <param name="sorts"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.BreakUpCamelCase(System.String)">
            <summary>
            驼峰匹配截断
            </summary>
            <param name="s">字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToBase64(System.String)">
            <summary>
            转换到Base64
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.LeftOf(System.String,System.String)">
             <summary>
            返回匹配项在指定字符串中第一次出现位置左边的内容
             </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.LeftOf(System.String,System.Char)">
             <summary>
            返回匹配项在指定字符串中第一次出现位置左边的内容
             </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.LeftOf(System.String,System.String,System.Int32)">
            <summary>
            返回匹配项在指定字符串中第‘n’次出现位置左边的内容
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.LeftOf(System.String,System.Char,System.Int32)">
            <summary>
            返回匹配项在指定字符串中第‘n’次出现位置左边的内容
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.RightOf(System.String,System.String)">
            <summary>
            返回匹配项在指定字符串中第一次出现位置右边的内容
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Next(System.Nullable{System.ComponentModel.ListSortDirection})">
            <summary>
            排序顺序获取
            </summary>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.RightOf(System.String,System.Char)">
            <summary>
            返回匹配项在指定字符串中第一次出现位置右边的内容
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.RightOf(System.String,System.String,System.Int32)">
            <summary>
            返回匹配项在指定字符串中第n次出现位置右边的内容
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.RightOf(System.String,System.Char,System.Int32)">
            <summary>
            返回字符在指定字符串中第n次出现位置右边的内容
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.FromBase64(System.String)">
            <summary>
            从Base64还原
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Equals(System.String,System.String)">
            <summary>
            扩展是否相等
            </summary>
            <param name="s">字符串</param>
            <param name="compare">比较字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.IsNullOrEmpty(System.String)">
            <summary>
            扩展是否为空
            </summary>
            <param name="s">字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.IsGarbled(System.String)">
            <summary>
            判断是否有乱码
            </summary>
            <param name="s">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.HasValue(System.String)">
            <summary>
            是否为空
            </summary>
            <param name="value">字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.JoinString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)">
            <summary>
            集合连接成字符串
            </summary>
            <param name="objs">对象列表</param>
            <param name="splite">分割符</param>
            <param name="isAddMark"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.IsCaseSensitiveEqual(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified System.String object have the same value.
            </summary>
            <param name="instance">The string to check equality.</param>
            <param name="comparing">The comparing with string.</param>
            <returns>
            <c>true</c> if the value of the comparing parameter is the same as this string; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.IsCaseInsensitiveEqual(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified System.String object have the same value.
            </summary>
            <param name="instance">The string to check equality.</param>
            <param name="comparing">The comparing with string.</param>
            <returns>
            <c>true</c> if the value of the comparing parameter is the same as this string; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToCamelCase(System.String)">
            <summary>
            转化为驼峰匹配
            </summary>
            <param name="instance">字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToUnderlineName(System.String)">
            <summary>
            驼峰字符串转化为下划线字符串
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.EscapeHtmlEntities(System.String)">
            <summary>
            过滤 Html 
            </summary>
            <param name="html">HTML文本</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.FormatWith(System.String,System.Object[])">
            <summary>
            格式化
            </summary>
            <param name="instance">格式</param>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.AsTitle(System.String)">
            <summary>
            作为标题
            </summary>
            <param name="value">文本</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.SplitPascalCase(System.String)">
            <summary>
            按照下划线拆分文本
            </summary>
            <param name="value">文本</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToInt(System.String)">
            <summary>
            字符转换为数字
            </summary>
            <param name="value">输入</param>
            <returns>转换成功的数字,如果失败返回0</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToLong(System.String)">
            <summary>
            字符转换为数字
            </summary>
            <param name="value">输入</param>
            <returns>转换成功的数字,如果失败返回0</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToNullLong(System.String)">
            <summary>
            字符转换为数字
            </summary>
            <param name="value">输入</param>
            <returns>转换成功的数字,如果失败返回0</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToDouble(System.Object)">
            <summary>
            字符转换为数字
            </summary>
            <param name="value">输入</param>
            <returns>转换成功的数字,如果失败返回0</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToDouble(System.String)">
            <summary>
            字符转换为数字
            </summary>
            <param name="value">输入</param>
            <returns>转换成功的数字,如果失败返回0</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToNullDouble(System.String)">
            <summary>
            字符转换为数字
            </summary>
            <param name="value">输入</param>
            <returns>转换成功的数字,如果失败返回0</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToNullSbyte(System.String)">
            <summary>
            字符转化为字节数组
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToNullInt(System.String)">
            <summary>
            字符转换为数字
            </summary>
            <param name="value">输入</param>
            <returns>转换成功的数字</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToEnum``1(System.String)">
            <summary>
            将字符转换成对应的枚举类型
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="value">字符</param>
            <returns>对应的枚举值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToEnum``1(System.String,``0)">
            <summary>
            将字符转换成对应的枚举类型
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="value">字符</param>
            <param name="defaultValue">枚举默认值</param>
            <returns>对应的枚举值</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToUnixTicks(System.DateTime)">
            <summary>
            转化为Unix ticks
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToDateTime(System.Nullable{System.DateTimeOffset})">
            <summary>
            转化时间
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToDateTime(System.String)">
            <summary>
            Convert String To DateTime
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToBoolean(System.Object)">
            <summary>
            Convert String To DateTime
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToDateTime(System.Object)">
            <summary>
            Convert String To DateTime
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToNullDateTime(System.String)">
            <summary>
            转化可空时间
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Format(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            格式化字符 格式:hello {youname};
            </summary>
            <param name="dict">键值对</param>
            <param name="format">字符格式</param>
            <returns>格式化结果</returns>
            <example><code><![CDATA[
               Dictionary<string, object> dict = new Dictionary<string, object>();
               dict.Add("value", 12.3m);
               string format = "Product price is {value:00.00}";
               string expected = "Product price is 12.30";
               string actual;
               actual = Helper.Format(dict, format);
               Assert.AreEqual(expected, actual);
             
            ]]></code></example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Format(System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            格式化字符 格式:hello {youname};
            </summary>
            <param name="format">格式化字符串</param>
            <param name="fun">回调函数：@p0 被替换字符名称 @p1 格式 return 返回值</param>
            <returns>格式化结果></returns>
            <example><coce>
            <![CDATA[
             string format = "href='http:\\localhost\\DataPresentation\\{page}.aspx?id={Id}'";
             string expected = "href='http:\\localhost\\DataPresentation\\TestView.aspx?id=1'";
             string actual;
             actual = Helper.Format(format, (field, f) =>
                {
                    if (field == "Id")
                        return string.Format(f, 1);
                    else
                        return string.Format(f, "TestView");
                });
             Assert.AreEqual(expected, actual);
            ]]>
            </coce>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.NewSequentialGuid">
            <summary>
            新建GUID序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.DesEncryption(System.String)">
            <summary>
            获取加密字符串
            </summary>
            <param name="encryptValue">需加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ObjToStr(System.Object)">
            <summary>
            强制转化为string
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.DesDecryption(System.String)">
            <summary>
            获取解密字符串
            </summary>
            <param name="decryptValue">需解密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.DeepClone``1(``0)">
            <summary>
            深度复制
            </summary>
            <typeparam name="T"></typeparam>
            <param name="SourceObj"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.DeepClone``1(System.Object)">
            <summary>
            深度复制
            </summary>
            <typeparam name="T"></typeparam>
            <param name="SourceObj"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            是否包含字符串
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comp"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.SpecialReplace(System.String,System.String,System.String,System.Int32)">
            <summary>
            替换字符特殊方法，括号中的不替换
            </summary>
            <param name="target"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <param name="bracketsLevel">括号层级，从最外层开始算。</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.SimplifyBracket(System.String)">
            <summary>
            消除冗余的括号
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.CloneEntity``1(``0)">
            <summary>
            Clone实体属性
            </summary>
            <typeparam name="T"></typeparam>
            <param name="old"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Add``3(System.Collections.Generic.IDictionary{``1,System.Collections.Generic.List{``2}},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            字典值集合中添加值？
            Adds an Enumerable to a Dictionary
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TK"></typeparam>
            <typeparam name="TV"></typeparam>
            <param name="dictionary"></param>
            <param name="list"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.DivvyUp``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Action{System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32})">
            <summary>
            Divides an enumerable into equal parts and performs an action on those parts
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable"></param>
            <param name="parts"></param>
            <param name="action"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:UWay.Skynet.Cloud.Helper.DivvyUp``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Action{System.Collections.Generic.IEnumerable{``0}})" -->
        <member name="M:UWay.Skynet.Cloud.Helper.JsonSerialize(System.Object)">
            <summary>
            JSON序列化
            </summary>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.JsonDeserialize(System.String)">
            <summary>
            JSON反序列化
            </summary>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.JsonDeserialize``1(System.String)">
            <summary>
            JSON反序列化
            </summary>
            <typeparam name="T">反序列化类型</typeparam>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Find``1(``0[],System.Predicate{``0})">
            <summary>
            搜索与指定谓词所定义的条件相匹配的元素，并返回整个 System.Array 中的第一个匹配元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.FindAll``1(``0[],System.Predicate{``0})">
            <summary>
             检索与指定谓词定义的条件匹配的所有元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Combine``1(``0,``0,``0[])">
            <summary>
            combination helper method
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1"></param>
            <param name="item2"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Combine``1(``0,``0[])">
            <summary>
            combination helper method
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Exists``1(System.Linq.IQueryable{``0})">
            <summary>
            判断是否存在
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.TrueForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            按条件查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="coll"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            遍历当前对象，并且调用方法进行处理
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="instance">实例</param>
            <param name="action">方法</param>
            <returns>当前集合</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            遍历当前对象，并且调用方法进行处理
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="instance">实例</param>
            <param name="action">方法</param>
            <returns>当前集合</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.SelectRecursive``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            匹配算法
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="recursiveSelector"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToReadOnly``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            转化为只读集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.AsGenericEnumerable(System.Collections.IEnumerable)">
            <summary>
            转化为泛型集合
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Consolidate``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            动态计算
            </summary>
            <typeparam name="TFirst"></typeparam>
            <typeparam name="TSecond"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="first"></param>
            <param name="second"></param>
            <param name="resultSelector"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ZipIterator``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            
            </summary>
            <typeparam name="TFirst"></typeparam>
            <typeparam name="TSecond"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="first"></param>
            <param name="second"></param>
            <param name="resultSelector"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            查询元素位置
            </summary>
            <typeparam name="T">元素类型</typeparam>
            <param name="lst">IEnumerable</param>
            <param name="predicate">Predicate</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.IndexOf(System.Collections.IEnumerable,System.Object)">
            <summary>
            查找集合中的某个元素的位置
            </summary>
            <param name="source">源</param>
            <param name="item">元素</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ConvertAll``2(System.Collections.Generic.IEnumerable{``0},System.Converter{``0,``1})">
            <summary>
            集合类型转化
            </summary>
            <typeparam name="TInput"></typeparam>
            <typeparam name="TOutput"></typeparam>
            <param name="coll"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            按照条件判断是否存在
            </summary>
            <typeparam name="T"></typeparam>
            <param name="coll"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.Any``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
             确定序列中的任何元素是否都满足条件。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToJson(System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Collections.JsonObject})">
            <summary>
            JSON OBJECT转化IDictionary
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helper.ToCSV``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            转化成CSV
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="delim"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Helper.DefaultReadOnlyCollection`1">
            <summary>
            默认只读集合
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.CommonHelper.NewMongodbId">
            <summary>
            生成类似Mongodb的ObjectId有序、不重复Guid
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.CommonHelper.GetDateDiff(System.DateTime)">
            <summary>
            获取日期差
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.CommonHelper.GetTypeByString(System.String)">
            <summary>
            获得类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.HttpRequestHelper.HttpGet(System.String,System.Text.Encoding,System.Int32)">
            <summary>
            使用Get方法获取字符串结果（加入Cookie）
            </summary>
            <param name="url"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.HttpRequestHelper.HttpPost(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            使用Post方法获取字符串结果，常规提交
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.HttpRequestHelper.HttpPost(System.String,System.String,System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            发送HttpPost请求，使用JSON格式传输数据
            </summary>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.HttpRequestHelper.HttpPost(System.String,System.Object,System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            使用POST请求数据，使用JSON传输数据
            </summary>
            <param name="url"></param>
            <param name="dataObj">传输对象，转换为JSON传输</param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.HttpRequestHelper.HttpPost(System.String,System.IO.Stream,System.String,System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            使用Post方法获取字符串结果
            </summary>
            <param name="url"></param>
            <param name="postStream"></param>
            <param name="contentType"></param>
            <param name="encoding"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.HttpRequestHelper.GetQueryString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            组装QueryString的方法
            参数之间用&amp;连接，首位没有符号，如：a=1&amp;b=2&amp;c=3
            </summary>
            <param name="formData"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Helpers.JsonConvertor">
            <summary>
            json serialization and deserialization, using Jil.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Helpers.Log4NetHelper">
            <summary>
            log4net封装类
            *********************************使用说明**********************************
            1.首先将配置文件(log4net.config或App.config)放置在程序运行目录
            2.调用SetConfig方法，并传入配置文件的全路径
            3.调用WriteError、WriteInfo、WriteFatal、WriteDebug等方法
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.SetConfig(log4net.Repository.ILoggerRepository,System.String)">
            <summary>
            读取配置文件，并使其生效。如果未找到配置文件，则抛出异常
            </summary>
            <param name="repository"></param>
            <param name="configFilePath">配置文件全路径</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteError(System.Type,System.Exception)">
            <summary>
            输出错误日志到Log4Net
            </summary>
            <param name="t"></param>
            <param name="ex"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteError(System.Type,System.String)">
            <summary>
            输出错误日志到Log4Net
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteInfo(System.Type,System.String)">
            <summary>
            记录消息日志
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteInfo(System.Type,System.Exception)">
            <summary>
            记录消息日志
            </summary>
            <param name="t"></param>
            <param name="exception"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteFatal(System.Type,System.String)">
            <summary>
            记录致命错误日志
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteFatal(System.Type,System.Exception)">
            <summary>
            记录致命错误日志
            </summary>
            <param name="t"></param>
            <param name="exception"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteDebug(System.Type,System.String)">
            <summary>
            记录Debug日志
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteDebug(System.Type,System.Exception)">
            <summary>
            记录Debug日志
            </summary>
            <param name="t"></param>
            <param name="exception"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteWarn(System.Type,System.String)">
            <summary>
            记录警告信息
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.Log4NetHelper.WriteWarn(System.Type,System.Exception)">
            <summary>
            记录警告信息
            </summary>
            <param name="t"></param>
            <param name="exception"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.NPOIHelper.ExportExcel(System.Data.DataTable,System.String)">
            <summary>
            DataTable 导出到 Excel 的 MemoryStream
            </summary>
            <param name="dtSource">源 DataTable</param>
            <param name="strHeaderText">表头文本 空值未不要表头标题</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.NPOIHelper.ExportExcel(System.Data.DataTable,System.String,System.String)">
            <summary>
            DaataTable 导出到 Excel 文件
            </summary>
            <param name="dtSource">源 DataaTable</param>
            <param name="strHeaderText">表头文本</param>
            <param name="strFileName">保存位置(文件名及路径)</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.NPOIHelper.ImportExcel(System.String)">
            <summary>
            读取 excel
            默认第一行为标头
            </summary>
            <param name="strFileName">excel 文档路径</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.NPOIHelper.ExportExcel(System.Data.DataSet,System.String)">
            <summary>
            DataSet 导出到 Excel 的 MemoryStream
            </summary>
            <param name="dsSource">源 DataSet</param>
            <param name="strHeaderText">表头文本 空值未不要表头标题(多个表对应多个表头以英文逗号(,)分开，个数应与表相同)</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.NPOIHelper.ExportFromDSExcel(NPOI.HSSF.UserModel.HSSFWorkbook,System.Data.DataTable,System.String)">
            <summary>
            DataTable 导出到 Excel 的 MemoryStream
            </summary>
            <param name="workbook">源 workbook</param>
            <param name="dtSource">源 DataTable</param>
            <param name="strHeaderText">表头文本 空值未不要表头标题(多个表对应多个表头以英文逗号(,)分开，个数应与表相同)</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Helpers.RuntimeHelper">
            <summary>
            运行时帮助类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.RuntimeHelper.GetAllAssemblies">
            <summary>
            获取项目程序集，排除所有的系统程序集(Microsoft.***、System.***等)、Nuget下载包
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Helpers.ServiceLocator">
            <summary>
            .Net Core自带的DI辅助类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Helpers.ServiceLocator.CreateServiceBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            创建容器
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.IoC.AspectCoreContainer">
            <summary>
            IoC容器初始化
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.IoC.AutofacContainer">
            <summary>
            Autofac IOC 容器
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.IoC.AutofacContainer.Register(System.String[])">
            <summary>
            注册程序集
            </summary>
            <param name="assemblies">程序集名称的集合</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.IoC.AutofacContainer.Register(System.Type[])">
            <summary>
            注册类型
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.IoC.AutofacContainer.Register(System.String,System.String)">
            <summary>
            注册程序集。
            </summary>
            <param name="implementationAssemblyName"></param>
            <param name="interfaceAssemblyName"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.IoC.AutofacContainer.Register``2">
            <summary>
            注册
            </summary>
            <typeparam name="TInterface"></typeparam>
            <typeparam name="TImplementation"></typeparam>
        </member>
        <member name="M:UWay.Skynet.Cloud.IoC.AutofacContainer.Register``1(``0)">
            <summary>
            注册一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.IoC.AutofacContainer.Build(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{AspectCore.Configuration.IAspectConfiguration})">
            <summary>
            构建IOC容器，需在各种Register后调用。
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.IoC.AutofacContainer.Resolve``1">
            <summary>
            Resolve an instance of the default requested type from the container
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.IoC.ServiceLocator">
            <summary>
            服务查询类
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.IoC.ServiceLocator.Current">
            <summary>
            当前容器
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.CompositeFilterDescriptor">
            <summary>
            Represents a filtering descriptor which serves as a container for one or more child filtering descriptors.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.CompositeFilterDescriptor.LogicalOperator">
            <summary>
            Gets or sets the logical operator used for composing of <see cref="P:UWay.Skynet.Cloud.Linq.CompositeFilterDescriptor.FilterDescriptors"/>.
            </summary>
            <value>The logical operator used for composition.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.CompositeFilterDescriptor.FilterDescriptors">
            <summary>
            Gets or sets the filter descriptors that will be used for composition.
            </summary>
            <value>The filter descriptors used for composition.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.CompositeFilterDescriptor.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression combining <see cref="P:UWay.Skynet.Cloud.Linq.CompositeFilterDescriptor.FilterDescriptors"/> 
            expressions with <see cref="P:UWay.Skynet.Cloud.Linq.CompositeFilterDescriptor.LogicalOperator"/>.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DefaultExpressionExpressions.GetDefaultExpression(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.Expressions">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="test"></param>
            <param name="ifTrue"></param>
            <param name="ifFalse"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.Property(System.Linq.Expressions.Expression,System.String)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.New(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.TypeAs(System.Linq.Expressions.Expression,System.Type)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.Convert(System.Linq.Expressions.Expression,System.Type)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.Binary(System.Linq.Expressions.Expression,System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression1"></param>
            <param name="op"></param>
            <param name="expression2"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.Split(System.Linq.Expressions.Expression,System.Linq.Expressions.ExpressionType[])">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="binarySeparators"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Expressions.Join(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.ExpressionType)">
            <summary>
            
            </summary>
            <param name="list"></param>
            <param name="binarySeparator"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.FilterDescriptor">
            <summary>
            Represents declarative filtering.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.FilterDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.FilterDescriptor"/> class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.FilterDescriptor.#ctor(System.String,UWay.Skynet.Cloud.Linq.FilterOperator,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.FilterDescriptor"/> class.
            </summary>
            <param name="member">The member.</param>
            <param name="filterOperator">The filter operator.</param>
            <param name="filterValue">The filter value.</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.FilterDescriptor.Member">
            <summary>
            Gets or sets the member name which will be used for filtering.
            </summary>
            <filterValue>The member that will be used for filtering.</filterValue>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.FilterDescriptor.MemberType">
            <summary>
            Gets or sets the type of the member that is used for filtering.
            Set this property if the member type cannot be resolved automatically.
            Such cases are: items with ICustomTypeDescriptor, XmlNode or DataRow.
            Changing this property did not raise         
            </summary>
            <value>The type of the member used for filtering.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.FilterDescriptor.Operator">
            <summary>
            Gets or sets the filter operator.
            </summary>
            <filterValue>The filter operator.</filterValue>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.FilterDescriptor.Value">
            <summary>
            Gets or sets the target filter value.
            </summary>
            <filterValue>The filter value.</filterValue>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.FilterDescriptor.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.FilterDescriptor.Equals(UWay.Skynet.Cloud.Linq.FilterDescriptor)">
            <summary>
            Determines whether the specified <paramref name="other"/> descriptor 
            is equal to the current one.
            </summary>
            <param name="other">The other filter descriptor.</param>
            <returns>
            True if all members of the current descriptor are 
            equal to the ones of <paramref name="other"/>, otherwise false.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.FilterDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified <paramref name="obj"/>
            is equal to the current descriptor.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.FilterDescriptor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current filter descriptor.
            </returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.FilterDescriptorBase">
            <summary>
            Base class for all <see cref="T:UWay.Skynet.Cloud.Linq.IFilterDescriptor"/> used for 
            handling the logic for property changed notifications.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates a filter expression by delegating its creation to 
            <see cref="M:UWay.Skynet.Cloud.Linq.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)"/>, if 
            <paramref name="instance"/> is <see cref="T:System.Linq.Expressions.ParameterExpression"/>, otherwise throws <see cref="T:System.ArgumentException"/>
            </summary>
            <param name="instance">The instance expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
            <exception cref="T:System.ArgumentException">Parameter should be of type <see cref="T:System.Linq.Expressions.ParameterExpression"/></exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression used for collection filtering.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.FilterDescriptorCollection">
            <summary>
            Represents collection of <see cref="T:UWay.Skynet.Cloud.Linq.IFilterDescriptor"/>.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.FilterOperator">
            <summary>
            Operator used in <see cref="T:UWay.Skynet.Cloud.Linq.FilterDescriptor"/>
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.IsLessThan">
            <summary>
            Left operand must be smaller than the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.IsLessThanOrEqualTo">
            <summary>
            Left operand must be smaller than or equal to the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.IsEqualTo">
            <summary>
            Left operand must be equal to the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.IsNotEqualTo">
            <summary>
            Left operand must be different from the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.IsGreaterThanOrEqualTo">
            <summary>
            Left operand must be larger than the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.IsGreaterThan">
            <summary>
            Left operand must be larger than or equal to the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.Like">
            <summary>
            Like
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.StartsWith">
            <summary>
            Left operand must start with the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.EndsWith">
            <summary>
            Left operand must end with the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.Contains">
            <summary>
            Left operand must contain the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.In">
            <summary>
            Left operand must be contained in the right one.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.FilterOperator.DoesNotContain">
            <summary>
            Left operand must not contain the right one.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.GroupDescriptor">
            <summary>
            Represents grouping criteria.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.GroupDescriptor.MemberType">
            <summary>
            Gets or sets the type of the member that is used for grouping.
            Set this property if the member type cannot be resolved automatically.
            Such cases are: items with ICustomTypeDescriptor, XmlNode or DataRow.
            </summary>
            <value>The type of the member used for grouping.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.GroupDescriptor.DisplayContent">
            <summary>
            Gets or sets the content which will be used from UI.
            </summary>
            <filterValue>The content that will be used from UI.</filterValue>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.GroupDescriptor.AggregateFunctions">
            <summary>
            Gets or sets the aggregate functions used when grouping is executed.
            </summary>
            <value>The aggregate functions that will be used in grouping.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.GroupDescriptor.CycleSortDirection">
            <summary>
            Changes the <see cref="T:UWay.Skynet.Cloud.Linq.SortDescriptor"/> to the next logical value.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.IFilterDescriptor.CreateFilterExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates a predicate filter expression used for collection filtering.
            </summary>
            <param name="instance">The instance expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.FilterDescription.SatisfiesFilter(System.Object)">
            <summary>
            The method checks whether the passed parameter satisfies filter criteria. 
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.FilterDescription.IsActive">
            <summary>
            If false <see cref="M:UWay.Skynet.Cloud.Linq.Impl.FilterDescription.SatisfiesFilter(System.Object)"/> will not execute.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.FilterDescription.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression that calls <see cref="M:UWay.Skynet.Cloud.Linq.Impl.FilterDescription.SatisfiesFilter(System.Object)"/>.
            </summary>
            <param name="parameterExpression">The parameter expression, which parameter 
            will be passed to <see cref="M:UWay.Skynet.Cloud.Linq.Impl.FilterDescription.SatisfiesFilter(System.Object)"/> method.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.FilterOperatorExtensions.CreateExpression(UWay.Skynet.Cloud.Linq.FilterOperator,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean)">
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.Impl.NullNode">
            <summary>
            空置节点 的摘要说明
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.AggregateFunctionsGroup.AggregateFunctionsProjection">
            <summary>
            Gets or sets the aggregate functions projection for this group. 
            This projection is used to generate aggregate functions results for this group.
            </summary>
            <value>The aggregate functions projection.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.AggregateFunctionsGroup.GetAggregateResults(System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Linq.Impl.AggregateFunction})">
            <summary>
            Gets the aggregate results generated for the given aggregate functions.
            </summary>
            <value>The aggregate results for the provided aggregate functions.</value>
            <exception cref="T:System.ArgumentNullException"><c>functions</c> is null.</exception>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateFunctionCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction"/> with the specified function name.
            </summary>
            <value>
            First <see cref="T:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction"/> with the specified function name 
            if any, otherwise null.
            </value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.#ctor(System.Object,System.Int32,UWay.Skynet.Cloud.Linq.Impl.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult"/> class.
            </summary>
            <param name="value">The value of the result.</param>
            <param name="count">The number of arguments used for the calculation of the result.</param>
            <param name="function">Function that generated the result.</param>
            <exception cref="T:System.ArgumentNullException"><c>function</c> is null.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.#ctor(UWay.Skynet.Cloud.Linq.Impl.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult"/> class.
            </summary>
            <param name="function"><see cref="T:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction"/> that generated the result.</param>
            <exception cref="T:System.ArgumentNullException"><c>function</c> is null.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.#ctor(System.Object,UWay.Skynet.Cloud.Linq.Impl.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult"/> class.
            </summary>
            <param name="value">The value of the result.</param>
            <param name="function"><see cref="T:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction"/> that generated the result.</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.Value">
            <summary>
            Gets or sets the value of the result.
            </summary>
            <value>The value of the result.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.FormattedValue">
            <summary>
            Gets the formatted value of the result.
            </summary>
            <value>The formatted value of the result.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.ItemCount">
            <summary>
            Gets or sets the number of arguments used for the calulation of the result.
            </summary>
            <value>The number of arguments used for the calulation of the result.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.Caption">
            <summary>
            Gets or sets the text which serves as a caption for the result in a user interface..
            </summary>
            <value>The text which serves as a caption for the result in a user interface.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
            <value>The name of the function.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResultCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult"/> which
            <see cref="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult.FunctionName"/> is equal to <paramref name="functionName"/>.
            </summary>
            <value>
            The <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult"/> for the specified function if any, otherwise null.
            </value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AverageFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AverageFunction"/> class.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AverageFunction.AggregateMethodName">
            <summary>
            Gets the the Average method name.
            </summary>
            <value><c>Average</c>.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.CountFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.CountFunction"/> class.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.CountFunction.AggregateMethodName">
            <summary>
            Gets the the Count method name.
            </summary>
            <value><c>Count</c>.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.EnumerableAggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Creates the aggregate expression using <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Internal.Grouping.Aggregates.EnumerableAggregateFunctionExpressionBuilder"/>.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <param name="liftMemberAccessToNull"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.EnumerableAggregateFunctionBase.ExtensionMethodsType">
            <summary>
            Gets the type of the extension methods that holds the extension methods for
            aggregation. For example <see cref="T:System.Linq.Enumerable"/> or <see cref="T:System.Linq.Queryable"/>.
            </summary>
            <value>
            The type of that holds the extension methods. The default value is <see cref="T:System.Linq.Enumerable"/>.
            </value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.EnumerableSelectorAggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Creates the aggregate expression using <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Internal.Grouping.Aggregates.EnumerableSelectorAggregateFunctionExpressionBuilder"/>.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <param name="liftMemberAccessToNull"></param>
            <returns></returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.FirstFunction.AggregateMethodName">
            <summary>
            Gets the the First method name.
            </summary>
            <value><c>First</c>.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.LastFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.LastFunction"/> class.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.LastFunction.AggregateMethodName">
            <summary>
            Gets the the Last method name.
            </summary>
            <value><c>Last</c>.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.MaxFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.MaxFunction"/> class.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.MaxFunction.AggregateMethodName">
            <summary>
            Gets the the Max method name.
            </summary>
            <value><c>Max</c>.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.MinFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.MinFunction"/> class.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.MinFunction.AggregateMethodName">
            <summary>
            Gets the the Min method name.
            </summary>
            <value><c>Min</c>.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.SumFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.SumFunction"/> class.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.SumFunction.AggregateMethodName">
            <summary>
            Gets the the Min method name.
            </summary>
            <value><c>Min</c>.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Group.HasSubgroups">
            <summary>
            Gets a value indicating whether this instance has any sub groups.
            </summary>
            <value>
            	<c>true</c> if this instance has sub groups; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Group.ItemCount">
            <summary>
            Gets the number of items in this group.
            </summary>
            <value>The items count.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Group.Subgroups">
            <summary>
            Gets the subgroups, if <see cref="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Group.HasSubgroups"/> is true, otherwise empty collection.
            </summary>
            <value>The subgroups.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Group.Items">
            <summary>
            Gets the items in this groups.
            </summary>
            <value>The items in this group.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.Group.Key">
            <summary>
            Gets the key for this group.
            </summary>
            <value>The key for this group.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Grouping.GroupExtensions.GetGroupSequenceUniqueKey(System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup})">
            <summary>
            Calculates unique int for given group in a group sequence, 
            taking into account groups order, each group key and groups' count.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup.Key">
            <summary>
            Gets the key for this group.
            </summary>
            <value>The key for this group.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup.Items">
            <summary>
            Gets the items in this groups.
            </summary>
            <value>The items in this group.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup.HasSubgroups">
            <summary>
            Gets a value indicating whether this instance has sub groups.
            </summary>
            <value>
            	<c>true</c> if this instance has sub groups; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup.ItemCount">
            <summary>
            Gets the <see cref="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup.Items"/> count.
            </summary>
            <value>The <see cref="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup.Items"/> count.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup.Subgroups">
            <summary>
            Gets the subgroups, if <see cref="P:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup.HasSubgroups"/> is true, otherwise empty collection.
            </summary>
            <value>The subgroups.</value>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction">
            <summary>
             Represents an aggregate function.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction.Caption">
            <summary>
            Gets or sets the informative message to display as an illustration of the aggregate function.
            </summary>
            <value>The caption to display as an illustration of the aggregate function.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction.SourceField">
            <summary>
            Gets or sets the name of the field, of the item from the set of items, which value is used as the argument of the aggregate function.
            </summary>
            <value>The name of the field to get the argument value from.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction.FunctionName">
            <summary>
            Gets or sets the name of the aggregate function, which appears as a property of the group record on which records the function works.
            </summary>
            <value>The name of the function as visible from the group record.</value>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction.ResultFormatString">
            <summary>
            Gets or sets a string that is used to format the result value.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Creates the aggregate expression that is used for constructing expression
            tree that will calculate the aggregate result.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <param name="liftMemberAccessToNull"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.AggregateFunction.GenerateFunctionName">
            <summary>
            Generates default name for this function using this type's name.
            </summary>
            <returns>
            Function name generated with the following pattern:
            {<see cref="M:System.Object.GetType"/>.<see cref="P:System.Reflection.MemberInfo.Name"/>}_{<see cref="M:System.Object.GetHashCode"/>}
            </returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Impl.Internal.ExpressionBuilderOptions.LiftMemberAccessToNull">
            <summary>
            Gets or sets a value indicating whether member access expression used
            by this builder should be lifted to null. The default value is true;
            </summary>
            <value>
            	<c>true</c> if member access should be lifted to null; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.ExpressionFactory.LiftStringExpressionToEmpty(System.Linq.Expressions.Expression)">
            <exception cref="T:System.ArgumentException">Provided expression should have string type</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.Filtering.FilterDescriptorExpressionBuilder.CreateBodyExpression">
            <exception cref="T:System.ArgumentException"><c>ArgumentException</c>.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.FilterExpressionBuilder.CreateFilterExpression">
            <exception cref="T:System.ArgumentException"><c>ArgumentException</c>.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.Grouping.Aggregates.AggregateFunctionExpressionBuilderBase.#ctor(System.Linq.Expressions.Expression,UWay.Skynet.Cloud.Linq.Impl.AggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression"/>'s <see cref="P:System.Linq.Expressions.Expression.Type"/> is not <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.Grouping.Aggregates.AggregateFunctionExpressionBuilderBase.ExtractItemTypeFromEnumerableType(System.Type)">
            <exception cref="T:System.ArgumentException">Provided type is not <see cref="T:System.Collections.Generic.IEnumerable`1"/></exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.Grouping.Aggregates.EnumerableAggregateFunctionExpressionBuilder.#ctor(System.Linq.Expressions.Expression,UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.EnumerableAggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression"/>'s <see cref="P:System.Linq.Expressions.Expression.Type"/> is not <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.Grouping.Aggregates.EnumerableSelectorAggregateFunctionExpressionBuilder.#ctor(System.Linq.Expressions.Expression,UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.EnumerableSelectorAggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression"/>'s <see cref="P:System.Linq.Expressions.Expression.Type"/> is not <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </exception>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.Impl.Internal.CustomTypeDescriptorExtensions">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.CustomTypeDescriptorExtensions.Property``1(System.ComponentModel.ICustomTypeDescriptor,System.String)">
            <exception cref="T:System.ArgumentException"><c>ArgumentException</c>.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.CustomTypeDescriptorPropertyAccessExpressionBuilder.#ctor(System.Type,System.Type,System.String)">
            <exception cref="T:System.ArgumentException"><paramref name="elementType"/> did not implement <see cref="T:System.ComponentModel.ICustomTypeDescriptor"/>.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.MemberAccessTokenExtensions.CreateMemberAccessExpression(UWay.Skynet.Cloud.Linq.Impl.Internal.IMemberAccessToken,System.Linq.Expressions.Expression)">
            <exception cref="T:System.ArgumentException">
            Invalid name for property or field; or indexer with the specified arguments.
            </exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.MemberAccessTokenExtensions.GetMemberInfoForType(UWay.Skynet.Cloud.Linq.Impl.Internal.IMemberAccessToken,System.Type)">
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Impl.Internal.UnboxT`1.ValueField(System.Object)">
            <exception cref="T:System.InvalidCastException"><c>InvalidCastException</c>.</exception>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.Pagination">
            <summary>
            查询分页定义
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Pagination.Paging">
            <summary>
            是否分页
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Pagination.ApplicationId">
            <summary>
            系统ID
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Pagination.RowCount">
            <summary>
            数据数量，涉及总行数变更的查询时,赋值为null。备注：为NULL是查询总行数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Pagination.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Pagination.CurrentPageIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Pagination.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Pagination.SortExpress">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.Pagination.GroupExpress">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.OrderBy(System.String)">
            <summary>
            按照指定字段排序，如果字段已经存在排序表达式中，则逆反排序方向,只适用Linq
            </summary>
            <param name="expression">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.OrderBy(System.String,System.Boolean)">
            <summary>
            排序，只适用于EF框架
            </summary>
            <param name="expression"></param>
            <param name="desc"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            增加一个排序项，只适用于EF框架
            </summary>
            <typeparam name="T">排序类型</typeparam>
            <param name="expression">排序表达式</param>
            <returns><see cref="T:UWay.Skynet.Cloud.Linq.Pagination"/></returns>
            <example>
            <code><![CDATA[
               var paging = new Pagination();
               paging.Paging = true;
               paging.PageSize = 25;
               paging.OrderBy<Customer>(c => c.ContactName);
            ]]>
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.GroupBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            只适用于EF框架
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <param name="desc"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.OrderByDesc``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            增加一个倒排序项,只适用于EF框架
            </summary>
            <typeparam name="T">排序类型</typeparam>
            <param name="expression">排序表达式</param>
            <returns><see cref="T:UWay.Skynet.Cloud.Linq.Pagination"/></returns>
            <example>
            <code><![CDATA[
               var paging = new Pagination();
               paging.Paging = true;
               paging.PageSize = 25;
               paging.OrderByDesc<Customer>(c => c.ContactName);
            ]]>
            </code>
            </example>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Boolean)">
            <summary>
            只适用于EF框架
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <param name="desc"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.ParseQueryPaging``1(System.Linq.IQueryable)">
            <summary>
            只适用于EF框架
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.ParseQuery(System.Linq.IQueryable)">
             <summary>
             将排序应用到<seealso cref="T:System.Linq.IQueryable"/>只适用于EF框架
             </summary>
             <param name="query"><seealso cref="T:System.Linq.IQueryable"/></param>
             <returns><seealso cref="T:System.Linq.IQueryable"/></returns>
             <example>
             <code>
             <![CDATA[
              public List<CustomerOrderView> GetCustomerOrders( UWay.Ufa.Framework.Query.Pagination pagenation)
              {
                  var cs = CreateQuery<Customer>();//EF需要先将查询对象定义成变量，否则会出现无法解析的错误
                  var os = CreateQuery<Order>();//EF需要先将查询对象定义成变量，否则会出现无法解析的错误
              
                  var q = from c in cs
                          from o in os
                          where c.CustomerID == o.CustomerID
                          select new { o.CustomerID, o.OrderID, c.ContactName }; //先查询一个匿名对象，不支持直接返回视图对象。
              
                  var count = q.Count();
              
                  q = q.Paging(pagenation);
              
                  return (from c in q
                          select new CustomerOrderView { CustomerId = c.CustomerID,
                                                         CustomerName = c.ContactName, 
                                                         OrderId = c.OrderID }
                         ).ToList();//返回视图对象。
              }
              
             //.....
             using (var scope = new DbConnectionScope(ConnectionName))
             {
                 using (var repository = new CustomerRepository())
                 {
                     var p = new UWay.Ufa.Framework.Query.Pagination() { Paging = true, 
                                                                         PageSize = 25 };
                     p.OrderBy<Customer>(c => c.ContactName);
            
                     var result = repository.GetCustomerOrders(p);
                     
                     Assert.IsTrue(p.RowCount.HasValue && p.RowCount.Value > 0);
                 }
             }
             ]]>
             </code>
             </example> 
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.ApplyTo(UWay.Skynet.Cloud.Linq.Pagination)">
            <summary>
            将当前分页信息复制到另一个分页实例
            </summary>
            <param name="paging">目标实例</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.Clone">
            <summary>
            浅表Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.Pagination.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.QueryableExtensions">
            <summary>
            Provides extension methods to process DataSourceRequest.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.ToWhere(UWay.Skynet.Cloud.Request.DataSourceRequest)">
            <summary>
             生成SQL查询条件
            </summary>
            <param name="where">查询条件信息</param>
            <param name="filterDescriptor">生成的SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Sort(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Linq.SortDescriptor})">
            <summary>
            Sorts the elements of a sequence using the specified sort descriptors.
            </summary>
            <param name="source">A sequence of values to sort.</param>
            <param name="sortDescriptors">The sort descriptors used for sorting.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are sorted according to a <paramref name="sortDescriptors"/>.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Page(System.Linq.IQueryable,System.Int32,System.Int32)">
            <summary>
            Pages through the elements of a sequence until the specified 
            <paramref name="pageIndex"/> using <paramref name="pageSize"/>.
            </summary>
            <param name="source">A sequence of values to page.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are at the specified <paramref name="pageIndex"/>.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Page(System.Linq.IQueryable,System.Int64,System.Int64)">
            <summary>
            Pages through the elements of a sequence until the specified 
            <paramref name="pageIndex"/> using <paramref name="pageSize"/>.
            </summary>
            <param name="source">A sequence of values to page.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are at the specified <paramref name="pageIndex"/>.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Select(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Projects each element of a sequence into a new form.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are the result of invoking a 
            projection selector on each element of <paramref name="source" />.
            </returns>
            <param name="source"> A sequence of values to project. </param>
            <param name="selector"> A projection function to apply to each element. </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.GroupBy(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Groups the elements of a sequence according to a specified key selector function.
            </summary>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> whose elements to group.</param>
            <param name="keySelector"> A function to extract the key for each element.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable"/> with <see cref="T:System.Linq.IGrouping`2"/> items, 
            whose elements contains a sequence of objects and a key.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Sorts the elements of a sequence in ascending order according to a key.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are sorted according to a key.
            </returns>
            <param name="source">
            A sequence of values to order.
            </param>
            <param name="keySelector">
            A function to extract a key from an element.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.OrderByDescending(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Sorts the elements of a sequence in descending order according to a key.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are sorted in descending order according to a key.
            </returns>
            <param name="source">
            A sequence of values to order.
            </param>
            <param name="keySelector">
            A function to extract a key from an element.
            </param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression,System.Nullable{System.ComponentModel.ListSortDirection})">
            <summary>
            Calls <see cref="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)"/> 
            or <see cref="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.OrderByDescending(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)"/> depending on the <paramref name="sortDirection"/>.
            </summary>
            <param name="source">The source.</param>
            <param name="keySelector">The key selector.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are sorted according to a key.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.GroupBy(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Linq.GroupDescriptor})">
            <summary>
            Groups the elements of a sequence according to a specified <paramref name="groupDescriptors"/>.
            </summary>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> whose elements to group. </param>
            <param name="groupDescriptors">The group descriptors used for grouping.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable"/> with <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.IGroup"/> items, 
            whose elements contains a sequence of objects and a key.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Aggregate(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Linq.Impl.AggregateFunction})">
            <summary>
            Calculates the results of given aggregates functions on a sequence of elements.
            </summary>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> whose elements will 
            be used for aggregate calculation.</param>
            <param name="aggregateFunctions">The aggregate functions.</param>
            <returns>Collection of <see cref="T:UWay.Skynet.Cloud.Linq.Impl.Grouping.Aggregates.AggregateResult"/>s calculated for each function.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression)">
            <summary> 
            Filters a sequence of values based on a predicate. 
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains elements from the input sequence 
            that satisfy the condition specified by <paramref name="predicate" />.
            </returns>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> to filter.</param>
            <param name="predicate"> A function to test each element for a condition.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Where(System.Linq.IQueryable,System.Linq.Expressions.Expression)">
            <summary> 
            Filters a sequence of values based on a predicate. 
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains elements from the input sequence 
            that satisfy the condition specified by <paramref name="predicate" />.
            </returns>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> to filter.</param>
            <param name="predicate"> A function to test each element for a condition.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Where(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Linq.IFilterDescriptor})">
            <summary> 
            Filters a sequence of values based on a collection of <see cref="T:UWay.Skynet.Cloud.Linq.IFilterDescriptor"/>. 
            </summary>
            <param name="source">The source.</param>
            <param name="filterDescriptors">The filter descriptors.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains elements from the input sequence 
            that satisfy the conditions specified by each filter descriptor in <paramref name="filterDescriptors" />.
            </returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Select(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            select 扩展
            </summary>
            <param name="source"><see cref="T:System.Linq.IQueryable"/></param>
            <param name="selector">查询</param>
            <param name="values">参数</param>
            <returns><see cref="T:System.Linq.IQueryable"/></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Take(System.Linq.IQueryable,System.Int32)">
            <summary>
            Returns a specified number of contiguous elements from the start of a sequence.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains the specified number 
            of elements from the start of <paramref name="source" />.
            </returns>
            <param name="source"> The sequence to return elements from.</param>
            <param name="count"> The number of elements to return. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source" /> is null. </exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Take(System.Linq.IQueryable,System.Int64)">
            <summary>
            Returns a specified number of contiguous elements from the start of a sequence.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains the specified number 
            of elements from the start of <paramref name="source" />.
            </returns>
            <param name="source"> The sequence to return elements from.</param>
            <param name="count"> The number of elements to return. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source" /> is null. </exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Skip(System.Linq.IQueryable,System.Int32)">
            <summary>
            Returns a specified number of contiguous elements from the start of a sequence.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains the specified number 
            of elements from the start of <paramref name="source" />.
            </returns>
            <param name="source"> The sequence to return elements from.</param>
            <param name="count"> The number of elements to return. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source" /> is null. </exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Skip(System.Linq.IQueryable,System.Int64)">
            <summary>
            Bypasses a specified number of elements in a sequence 
            and then returns the remaining elements.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains elements that occur 
            after the specified index in the input sequence.
            </returns>
            <param name="source">
            An <see cref="T:System.Linq.IQueryable" /> to return elements from.
            </param>
            <param name="count">
            The number of elements to skip before returning the remaining elements.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is null.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Count(System.Linq.IQueryable)">
            <summary> Returns the number of elements in a sequence.</summary>
            <returns> The number of elements in the input sequence.</returns>
            <param name="source">
            The <see cref="T:System.Linq.IQueryable" /> that contains the elements to be counted.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is null.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.LongCount(System.Linq.IQueryable)">
            <summary> Returns the number of elements in a sequence.</summary>
            <returns> The number of elements in the input sequence.</returns>
            <param name="source">
            The <see cref="T:System.Linq.IQueryable" /> that contains the elements to be counted.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is null.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.ElementAt(System.Linq.IQueryable,System.Int32)">
            <summary> Returns the element at a specified index in a sequence.</summary>
            <returns> The element at the specified position in <paramref name="source" />.</returns>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> to return an element from.</param>
            <param name="index"> The zero-based index of the element to retrieve.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="index" /> is less than zero.</exception>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableExtensions.Union(System.Linq.IQueryable,System.Linq.IQueryable)">
            <summary>
            Produces the set union of two sequences by using the default equality comparer.        
            </summary>
            <returns>        
            An <see cref="T:System.Linq.IQueryable" /> that contains the elements from both input sequences, excluding duplicates.
            </returns>
            <param name="source">
            An <see cref="T:System.Linq.IQueryable" /> whose distinct elements form the first set for the union.
            </param>
            <param name="second">
            An <see cref="T:System.Linq.IQueryable" /> whose distinct elements form the first set for the union.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source" /> is null.</exception>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.DynamicExpressionParsor">
            <summary>
            动态表达式
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DynamicExpressionParsor.Parse(System.Type,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DynamicExpressionParsor.ParseLambda(System.Type,System.Type,System.String,System.Object[])">
            <summary>
            转换表达式
            </summary>
            <param name="itType"></param>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DynamicExpressionParsor.ParseLambda(System.Linq.Expressions.ParameterExpression[],System.Type,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DynamicExpressionParsor.ParseLambda``1(System.String,System.Linq.Expressions.ParameterExpression[])">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="expression"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DynamicExpressionParsor.ParseLambda``2(System.String,System.Object[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DynamicExpressionParsor.CreateClass(UWay.Skynet.Cloud.Reflection.DynamicProperty[])">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DynamicExpressionParsor.CreateClass(System.Collections.Generic.IEnumerable{UWay.Skynet.Cloud.Reflection.DynamicProperty})">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.ExpressionParser.DynamicOrdering">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.ExpressionParser.DynamicOrdering.Selector">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Linq.ExpressionParser.DynamicOrdering.Ascending">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.ParseException">
            <summary>
            表达是构造类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.ParseException.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="message">字符</param>
            <param name="position">位置</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.ParseException.Position">
            <summary>
            位置
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.ParseException.ToString">
            <summary>
            输出字符
            </summary>
            <returns>字符</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableSearcher`1.ChangeType(System.Object,System.Type)">
            <summary>
            类型转换，支持非空类型与可空类型之间的转换
            </summary>
            <param name="value"></param>
            <param name="conversionType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.QueryableSearcher`1.ChangeTypeToExpression(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            转换SearchItem中的Value的类型，为表达式树
            </summary>
            <param name="item"></param>
            <param name="conversionType">目标类型</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.UnixTime">
            <summary>
            Unix 时间
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.UnixTime.FromUnixTime(System.Int64)">
            <summary>
            将unixtime转换为.NET的DateTime
            </summary>
            <param name="timeStamp">秒数</param>
            <returns>转换后的时间</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.UnixTime.FromDateTime(System.DateTime)">
            <summary>
            将.NET的DateTime转换为unix time
            </summary>
            <param name="dateTime">待转换的时间</param>
            <returns>转换后的unix time</returns>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.TransformProviders.Items">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.TransformProviders.SetProviders(UWay.Skynet.Cloud.Linq.ITransformProvider[])">
            <summary>
            
            </summary>
            <param name="providers"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.DateBlockTransformProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DateBlockTransformProvider.Match(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="binderType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.DateBlockTransformProvider.Transform(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="binderType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.UnixTimeTransformProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.UnixTimeTransformProvider.Match(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="binderType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.UnixTimeTransformProvider.Transform(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="binderType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.ITransformProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.ITransformProvider.Match(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="binderType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.ITransformProvider.Transform(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="binderType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.LikeTransformProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.LikeTransformProvider.Match(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="binderType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Linq.LikeTransformProvider.Transform(UWay.Skynet.Cloud.Linq.FilterDescriptor,System.Type)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="binderType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.SortDescriptor">
            <summary>
            Represents declarative sorting.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.SortDescriptor.Member">
            <summary>
            Gets or sets the member name which will be used for sorting.
            </summary>
            <filterValue>The member that will be used for sorting.</filterValue>
        </member>
        <member name="P:UWay.Skynet.Cloud.Linq.SortDescriptor.SortDirection">
            <summary>
            Gets or sets the sort direction for this sort descriptor. If the value is null
            no sorting will be applied.
            </summary>
            <value>The sort direction. The default value is null.</value>
        </member>
        <member name="T:UWay.Skynet.Cloud.Linq.TreeDataSourceExtensions">
            <summary>
            Provides extension methods to process TreeDataSourceRequest.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.Converter">
            <summary>
            Converter 类，支持基本数据类型，以及Enum和Nullable数据类型间的相互转换
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.Converter.IsPrimitiveType(System.Type)">
            <summary>
            The primitive types are Boolean, Byte, SByte, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Char, Double, Single,Decimal,DateTime,DBNull,Enum,Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.Converter.Convert``2(``0)">
            <summary>
            
            </summary>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.Converter.Convert(System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.ClassMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.ClassToDictionaryMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.DictionaryToClassMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.ListSourceMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.CollectionMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.DataReaderMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.DataRowMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.DataTableMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.PrimitiveMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.TypeConverterMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Factories.MapperFactoryProvider.DictionaryMapperFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.IMapperInfo">
            <summary>
            映射元数据接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapperInfo.From">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapperInfo.To">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapperInfo.IgnoreCase">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapperInfo.IgnoreSourceMembers">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapperInfo.IgnoreDestinationMembers">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapperInfo.IgnoreUnderscore">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.IMappingEngine">
            <summary>
            映射引擎接口
            </summary> 
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMappingEngine.MapperRegistry">
            <summary>
            得到映射器注册表
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMappingEngine.FactoryRegistry">
            <summary>
            得到映射器工厂注册表
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMappingEngine.CreateMapper``2">
            <summary>
            创建映射器
            </summary>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.IMapper">
            <summary>
            映射器接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapper.Info">
            <summary>
            得到映射器元数据信息
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapper.State">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper.Map(System.Object@,System.Object@)">
            <summary>
            把from对象映射到to对象中
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper.Map(System.Object,System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="fromType"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.IMapperRegistry">
            <summary>
            映射器注册表接口
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.IMapperFactory">
            <summary>
            映射器工厂接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapperFactory.Order">
            <summary>
            序号
            </summary>
        </member>
        <member name="E:UWay.Skynet.Cloud.Mapping.IMapperFactory.OrderChanged">
            <summary>
            Order changed event
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapperFactory.IsMatch(System.Type,System.Type)">
            <summary>
            是否支持fromType到toType的映射
            </summary>
            <param name="fromType"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapperFactory.Create(System.Type,System.Type)">
            <summary>
            创建fromType到toType的映射器
            </summary>
            <param name="fromType"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.MapperFactory">
            <summary>
            映射器工厂基类
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.MapperFactory.Order">
            <summary>
            序号
            </summary>
        </member>
        <member name="E:UWay.Skynet.Cloud.Mapping.MapperFactory.OrderChanged">
            <summary>
            Order changed event
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.MapperFactory.IsMatch(System.Type,System.Type)">
            <summary>
            是否支持fromType到toType的映射
            </summary>
            <param name="fromType"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.MapperFactory.Create(System.Type,System.Type)">
            <summary>
            创建fromType到toType的映射器
            </summary>
            <param name="fromType"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.IMapperFactoryRegistry">
            <summary>
            映射器工厂注册表
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapperFactoryRegistry.Register(UWay.Skynet.Cloud.Mapping.IMapperFactory)">
            <summary>
            注册MapperFactory
            </summary>
            <param name="mapperFactory"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapperFactoryRegistry.Unregister(UWay.Skynet.Cloud.Mapping.IMapperFactory)">
            <summary>
            注销MapperFactory
            </summary>
            <param name="mapperFactory"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.IMapper`2">
            <summary>
            泛型映射器接口
            </summary>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapper`2.Info">
            <summary>
            得到映射器元数据信息
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapping.IMapper`2.State">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.IgnoreCase(System.Boolean)">
            <summary>
            
            </summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.IgnoreUnderscore(System.Boolean)">
            <summary>
            
            </summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.ForMember(System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Func{`0,System.Object})">
            <summary>
            
            </summary>
            <param name="destinationMember"></param>
            <param name="memberOptions"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.IgnoreSourceMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.IgnoreDestinationMember(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})">
            <summary>
            
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.IgnoreSourceMembers(System.Func{System.Type,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.IgnoreDestinationMembers(System.Func{System.Type,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.MatchMembers(System.Func{System.String,System.String,System.Boolean})">
            <summary>
            
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.ConvertUsing``2(System.Func{``0,``1})">
            <summary>
            
            </summary>
            <typeparam name="From"></typeparam>
            <typeparam name="To"></typeparam>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.BeforeMap(System.Action{`0,`1})">
            <summary>
            
            </summary>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.AfterMap(System.Action{`0,`1})">
            <summary>
            
            </summary>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.Map(`0)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.IMapper`2.Map(`0,`1@)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.SpliteAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.SpliteAttribute.Separator">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapping.SpliteAttribute.#ctor(System.Char[])">
            <summary>
            
            </summary>
            <param name="separator"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapping.Internal.ClassMapper">
            <summary>
            类映射对象
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Mapping.Internal.DictionaryInfo.Type">
            <summary>
            Dictionary Type
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Mapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapper.Current">
            <summary>
            得到当前活动的MappingEngine
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Mapper.EnableErrorState">
            <summary>
            是否启用ErrorState进行跟踪
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapper.Map(System.Object,System.Type,System.Type)">
            <summary>
            映射
            </summary>
            <param name="from"></param>
            <param name="fromType"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapper.Map``2(``0)">
            <summary>
            映射
            </summary>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapper.Map``2(``0,``1@)">
            <summary>
            映射
            </summary>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapper.CreateMapper``2">
            <summary>
            创建映射器
            </summary>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Mapper.Reset">
            <summary>
            重置映射器引擎
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DynamicClass.ToString">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.IClassLoader">
            <summary>
            类型加载器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.IClassLoader.AssemblyLoader">
            <summary>
            得到或设置Assembly加载器
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.IClassLoader.Load(System.String,System.String)">
            <summary>
            加载类型
            </summary>
            <param name="assemblyName">assembly 名称</param>
            <param name="shortTypeName">类型名称</param>
            <returns>返回类型实例</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.IClassLoader.Load(System.String)">
            <summary>
            加载类型
            </summary>
            <param name="fullTypeName">类型的全名</param>
            <returns>返回类型实例</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.IAssemblyLoader">
            <summary>
            Assembly 加载器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.IAssemblyLoader.Resolvers">
            <summary>
            得到所有Assembly解析器
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.IAssemblyLoader.GetAssemblies">
            <summary>
            得到所有已经加载的Assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.IAssemblyLoader.Load(System.String)">
            <summary>
            从assemblyName 字符串加载Assembly
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.IAssemblyResolver">
            <summary>
            Assembly 解析器
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.IAssemblyResolver.Resolve(System.Reflection.AssemblyName)">
            <summary>
            解析Assembly
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.SimpleClassLoader">
            <summary>
            确省类型加载器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.SimpleClassLoader.AssemblyLoader">
            <summary>
            得到或设置Assembly加载器
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.SimpleClassLoader.Load(System.String)">
            <summary>
            加载类型
            </summary>
            <param name="fullTypeName">类型的全名</param>
            <returns>返回类型实例</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.SimpleClassLoader.Load(System.String,System.String)">
            <summary>
            加载类型
            </summary>
            <param name="assemblyName">assembly 名称</param>
            <param name="shortTypeName">类型名称</param>
            <returns>返回类型实例</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.ClassLoader">
            <summary>
            类型加载器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.ClassLoader.Current">
            <summary>
            得到或设置当前的ClassLoader
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ClassLoader.Load(System.String,System.String)">
            <summary>
            加载类型
            </summary>
            <param name="assemblyName">assembly 名称</param>
            <param name="typeName">类型名称</param>
            <returns>返回类型实例</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ClassLoader.Load(System.String)">
            <summary>
            加载类型
            </summary>
            <param name="fullTypeName">类型的全名</param>
            <returns>返回类型实例</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.AssemblyLoader">
            <summary>
            Assembly加载器
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.AssemblyLoader.Load(System.String)">
            <summary>
            加载Assembly
            </summary>
            <param name="assembylyName"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.DefaultAssemblyLoader">
            <summary>
            缺省Assembly加载器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.DefaultAssemblyLoader.Resolvers">
            <summary>
            得到Assembly解析器列表
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DefaultAssemblyLoader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DefaultAssemblyLoader.Load(System.String)">
            <summary>
            加载Assembly
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DefaultAssemblyLoader.GetAssemblies">
            <summary>
            得到所有已经加载的Assembly
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.ASM_DISPLAY_FLAGS">
            <summary>
            <see cref="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.GetDisplayName(System.Text.StringBuilder,System.UInt32@,UWay.Skynet.Cloud.Reflection.Internal.ASM_DISPLAY_FLAGS)"/>
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.ASM_NAME">
            <summary>
            The ASM_NAME enumeration property ID describes the valid names of the name-value pairs in an assembly name.
            See the .NET Framework SDK for a description of these properties.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.IASSEMBLYCACHE_UNINSTALL_DISPOSITION">
            <summary>
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.QUERYASMINFO_FLAG">
            <summary>
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.IASSEMBLYCACHE_INSTALL_FLAG">
            <summary>
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.CREATE_ASM_NAME_OBJ_FLAGS">
            <summary>
            The CREATE_ASM_NAME_OBJ_FLAGS enumeration contains the following values:
               CANOF_PARSE_DISPLAY_NAME - If this flag is specified, the szAssemblyName parameter is a full assembly name and is parsed to
            	the individual properties. If the flag is not specified, szAssemblyName is the "Name" portion of the assembly name.
            CANOF_SET_DEFAULT_VALUES - If this flag is specified, certain properties, such as processor architecture, are set to
            	their default values.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.ASM_CACHE_FLAGS">
            <summary>
            The ASM_CACHE_FLAGS enumeration contains the following values:
            ASM_CACHE_ZAP - Enumerates the cache of precompiled assemblies by using Ngen.exe.
            ASM_CACHE_GAC - Enumerates the GAC.
            ASM_CACHE_DOWNLOAD - Enumerates the assemblies that have been downloaded on-demand or that have been shadow-copied.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.FUSION_INSTALL_REFERENCE">
            <summary>
            The FUSION_INSTALL_REFERENCE structure represents a reference that is made when an application has installed an
            assembly in the GAC.
            The fields of the structure are defined as follows:
            	cbSize - The size of the structure in bytes.
            	dwFlags - Reserved, must be zero.
            	guidScheme - The entity that adds the reference.
            	szIdentifier - A unique string that identifies the application that installed the assembly.
            	szNonCannonicalData - A string that is only understood by the entity that adds the reference.
            			The GAC only stores this string.
            Possible values for the guidScheme field can be one of the following:
            	FUSION_REFCOUNT_MSI_GUID - The assembly is referenced by an application that has been installed by using
            			Windows Installer. The szIdentifier field is set to MSI, and szNonCannonicalData is set to Windows Installer.
            			This scheme must only be used by Windows Installer itself.
            	FUSION_REFCOUNT_UNINSTALL_SUBKEY_GUID - The assembly is referenced by an application that appears in Add/Remove
            			Programs. The szIdentifier field is the token that is used to register the application with Add/Remove programs.
            	FUSION_REFCOUNT_FILEPATH_GUID - The assembly is referenced by an application that is represented by a file in
            			the file system. The szIdentifier field is the path to this file.
            	FUSION_REFCOUNT_OPAQUE_STRING_GUID - The assembly is referenced by an application that is only represented
            			by an opaque string. The szIdentifier is this opaque string. The GAC does not perform existence checking
            			for opaque references when you remove this.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.ASSEMBLY_INFO">
            <summary>
            The ASSEMBLY_INFO structure represents information about an assembly in the assembly cache.
            The fields of the structure are defined as follows:
            	cbAssemblyInfo - Size of the structure in bytes. Permits additions to the structure in future version of the .NET Framework.
            	dwAssemblyFlags - Indicates one or more of the ASSEMBLYINFO_FLAG_* bits.
            	uliAssemblySizeInKB - The size of the files that make up the assembly in kilobytes (KB).
            	pszCurrentAssemblyPathBuf - A pointer to a string buffer that holds the current path of the directory that contains the
            			files that make up the assembly. The path must end with a zero.
            	cchBuf - Size of the buffer that the pszCurrentAssemblyPathBug field points to.
            dwAssemblyFlags can have one of the following values:
            	ASSEMBLYINFO_FLAG__INSTALLED - Indicates that the assembly is actually installed. Always set in current version of the
            			.NET Framework.
            	ASSEMBLYINFO_FLAG__PAYLOADRESIDENT - Never set in the current version of the .NET Framework.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.GacCache.CreateAssemblyCache(UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCache@,System.UInt32)">
            <summary>
            The key entry point for reading the assembly cache.
            </summary>
            <param name="ppAsmCache">Pointer to return IAssemblyCache</param>
            <param name="dwReserved">must be 0</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.GacCache.CreateAssemblyNameObject(UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName@,System.String,System.UInt32,System.IntPtr)">
            <summary>
            An instance of IAssemblyName is obtained by calling the CreateAssemblyNameObject API.
            </summary>
            <param name="ppAssemblyNameObj">Pointer to a memory location that receives the IAssemblyName pointer that is created.</param>
            <param name="szAssemblyName">A string representation of the assembly name or of a full assembly reference that is
            determined by dwFlags. The string representation can be null.</param>
            <param name="dwFlags">Zero or more of the bits that are defined in the CREATE_ASM_NAME_OBJ_FLAGS enumeration.</param>
            <param name="pvReserved"> Must be null.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.GacCache.CreateAssemblyEnum(UWay.Skynet.Cloud.Reflection.Internal.IAssemblyEnum@,System.IntPtr,UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName,UWay.Skynet.Cloud.Reflection.Internal.ASM_CACHE_FLAGS,System.IntPtr)">
            <summary>
            To obtain an instance of the CreateAssemblyEnum API, call the CreateAssemblyNameObject API.
            </summary>
            <param name="pEnum">Pointer to a memory location that contains the IAssemblyEnum pointer.</param>
            <param name="pUnkReserved">Must be null.</param>
            <param name="pName">An assembly name that is used to filter the enumeration. Can be null to enumerate all assemblies in the GAC.</param>
            <param name="dwFlags">Exactly one bit from the ASM_CACHE_FLAGS enumeration.</param>
            <param name="pvReserved">Must be NULL.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.GacCache.CreateInstallReferenceEnum(UWay.Skynet.Cloud.Reflection.Internal.IInstallReferenceEnum@,UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName,System.UInt32,System.IntPtr)">
            <summary>
            To obtain an instance of the CreateInstallReferenceEnum API, call the CreateInstallReferenceEnum API.
            </summary>
            <param name="ppRefEnum">A pointer to a memory location that receives the IInstallReferenceEnum pointer.</param>
            <param name="pName">The assembly name for which the references are enumerated.</param>
            <param name="dwFlags"> Must be zero.</param>
            <param name="pvReserved">Must be null.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.GacCache.GetCachePath(UWay.Skynet.Cloud.Reflection.Internal.ASM_CACHE_FLAGS,System.Text.StringBuilder,System.UInt32@)">
            <summary>
            The GetCachePath API returns the storage location of the GAC.
            </summary>
            <param name="dwCacheFlags">Exactly one of the bits defined in the ASM_CACHE_FLAGS enumeration.</param>
            <param name="pwzCachePath">Pointer to a buffer that is to receive the path of the GAC as a Unicode string.</param>
            <param name="pcchPath">Length of the pwszCachePath buffer, in Unicode characters.</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.Internal.GacCache.FUSION_REFCOUNT_UNINSTALL_SUBKEY_GUID">
            <summary>
            GUID value for element guidScheme in the struct FUSION_INSTALL_REFERENCE
            The assembly is referenced by an application that has been installed by using Windows Installer.
            The szIdentifier field is set to MSI, and szNonCannonicalData is set to Windows Installer.
            This scheme must only be used by Windows Installer itself.
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.Internal.GacCache.FUSION_REFCOUNT_FILEPATH_GUID">
            <summary>
            GUID value for element guidScheme in the struct FUSION_INSTALL_REFERENCE
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.Internal.GacCache.FUSION_REFCOUNT_OPAQUE_STRING_GUID">
            <summary>
            GUID value for element guidScheme in the struct FUSION_INSTALL_REFERENCE
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.Internal.GacCache.FUSION_REFCOUNT_MSI_GUID">
            <summary>
            GUID value for element guidScheme in the struct FUSION_INSTALL_REFERENCE
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.GacCache.CreateAssemblyCache">
            <summary>
            Use this method as a start for the GAC API
            </summary>
            <returns>IAssemblyCache COM interface</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.GacCache.GetNextAssembly(UWay.Skynet.Cloud.Reflection.Internal.IAssemblyEnum,UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName@)">
            <summary>
            Get the next assembly name in the current enumerator or fail
            </summary>
            <param name="enumerator"></param>
            <param name="name"></param>
            <returns>0 if the enumeration is not at its end</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCache">
            <summary>
            The IAssemblyCache interface is the top-level interface that provides access to the GAC.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCache.UninstallAssembly(System.UInt32,System.String,UWay.Skynet.Cloud.Reflection.Internal.FUSION_INSTALL_REFERENCE[],System.UInt32@)">
            <summary>
            The IAssemblyCache::UninstallAssembly method removes a reference to an assembly from the GAC.
            If other applications hold no other references to the assembly, the files that make up the assembly are removed from the GAC.
            </summary>
            <param name="dwFlags">No flags defined. Must be zero.</param>
            <param name="pszAssemblyName">The name of the assembly. A zero-ended Unicode string.</param>
            <param name="pRefData">A pointer to a FUSION_INSTALL_REFERENCE structure. Although this is not recommended,
            	this parameter can be null. The assembly is installed without an application reference, or all existing application
            	references are gone.</param>
            <param name="pulDisposition">Pointer to an integer that indicates the action that is performed by the function.</param>
            <returns>The return values are defined as follows:
            	S_OK - The assembly has been uninstalled.
            	S_FALSE - The operation succeeded, but the assembly was not removed from the GAC.
            	The reason is described in pulDisposition.</returns>
            <remarks>
            NOTE: If pulDisposition is not null, pulDisposition contains one of the following values:
            	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_UNINSTALLED - The assembly files have been removed from the GAC.
            	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_STILL_IN_USE - An application is using the assembly.
            		This value is returned on Microsoft Windows 95 and Microsoft Windows 98.
            	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_ALREADY_UNINSTALLED - The assembly does not exist in the GAC.
            	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_DELETE_PENDING - Not used.
            	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_HAS_INSTALL_REFERENCES - The assembly has not been removed from the GAC because
            		another application reference exists.
            	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_REFERENCE_NOT_FOUND - The reference that is specified in pRefData is not found
            		in the GAC.
            </remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCache.QueryAssemblyInfo(System.UInt32,System.String,UWay.Skynet.Cloud.Reflection.Internal.ASSEMBLY_INFO@)">
            <summary>
            The IAssemblyCache::QueryAssemblyInfo method retrieves information about an assembly from the GAC.
            </summary>
            <param name="dwFlags">One of QUERYASMINFO_FLAG_VALIDATE or QUERYASMINFO_FLAG_GETSIZE:
            	*_VALIDATE - Performs validation of the files in the GAC against the assembly manifest, including hash verification
            		and strong name signature verification.
            	*_GETSIZE - Returns the size of all files in the assembly (disk footprint). If this is not specified, the
            		ASSEMBLY_INFO::uliAssemblySizeInKB field is not modified.</param>
            <param name="pszAssemblyName"></param>
            <param name="pAsmInfo"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCache.CreateAssemblyCacheItem(System.UInt32,System.IntPtr,UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCacheItem@,System.String)">
            <summary>
            Undocumented
            </summary>
            <param name="dwFlags"></param>
            <param name="pvReserved"></param>
            <param name="ppAsmItem"></param>
            <param name="pszAssemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCache.CreateAssemblyScavenger(System.Object@)">
            <summary>
            Undocumented
            </summary>
            <param name="ppAsmScavenger"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCache.InstallAssembly(System.UInt32,System.String,UWay.Skynet.Cloud.Reflection.Internal.FUSION_INSTALL_REFERENCE[])">
            <summary>
            The IAssemblyCache::InstallAssembly method adds a new assembly to the GAC. The assembly must be persisted in the file
            system and is copied to the GAC.
            </summary>
            <param name="dwFlags">At most, one of the bits of the IASSEMBLYCACHE_INSTALL_FLAG_* values can be specified:
            	*_REFRESH - If the assembly is already installed in the GAC and the file version numbers of the assembly being
            	installed are the same or later, the files are replaced.
            	*_FORCE_REFRESH - The files of an existing assembly are overwritten regardless of their version number.</param>
            <param name="pszManifestFilePath"> A string pointing to the dynamic-linked library (DLL) that contains the assembly manifest.
            Other assembly files must reside in the same directory as the DLL that contains the assembly manifest.</param>
            <param name="pRefData">A pointer to a FUSION_INSTALL_REFERENCE that indicates the application on whose behalf the
            assembly is being installed. Although this is not recommended, this parameter can be null, but this leaves the assembly
            without any application reference.</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName">
            <summary>
            The IAssemblyName interface represents an assembly name. An assembly name includes a predetermined set of name-value pairs.
            The assembly name is described in detail in the .NET Framework SDK.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.SetProperty(UWay.Skynet.Cloud.Reflection.Internal.ASM_NAME,System.IntPtr,System.UInt32)">
            <summary>
            The IAssemblyName::SetProperty method adds a name-value pair to the assembly name, or, if a name-value pair
            with the same name already exists, modifies or deletes the value of a name-value pair.
            </summary>
            <param name="PropertyId">The ID that represents the name part of the name-value pair that is to be
            added or to be modified. Valid property IDs are defined in the ASM_NAME enumeration.</param>
            <param name="pvProperty">A pointer to a buffer that contains the value of the property.</param>
            <param name="cbProperty">The length of the pvProperty buffer in bytes. If cbProperty is zero, the name-value pair
            is removed from the assembly name.</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.GetProperty(UWay.Skynet.Cloud.Reflection.Internal.ASM_NAME,System.IntPtr,System.UInt32@)">
            <summary>
            The IAssemblyName::GetProperty method retrieves the value of a name-value pair in the assembly name that specifies the name.
            </summary>
            <param name="PropertyId">The ID that represents the name of the name-value pair whose value is to be retrieved.
            Specified property IDs are defined in the ASM_NAME enumeration.</param>
            <param name="pvProperty">A pointer to a buffer that is to contain the value of the property.</param>
            <param name="pcbProperty">The length of the pvProperty buffer, in bytes.</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.Finalize">
            <summary>
            The IAssemblyName::Finalize method freezes an assembly name. Additional calls to IAssemblyName::SetProperty are
            unsuccessful after this method has been called.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.GetDisplayName(System.Text.StringBuilder,System.UInt32@,UWay.Skynet.Cloud.Reflection.Internal.ASM_DISPLAY_FLAGS)">
            <summary>
            The IAssemblyName::GetDisplayName method returns a string representation of the assembly name.
            </summary>
            <param name="szDisplayName">A pointer to a buffer that is to contain the display name. The display name is returned in Unicode.</param>
            <param name="pccDisplayName">The size of the buffer in characters (on input). The length of the returned display name (on return).</param>
            <param name="dwDisplayFlags">One or more of the bits defined in the ASM_DISPLAY_FLAGS enumeration:
            	*_VERSION - Includes the version number as part of the display name.
            	*_CULTURE - Includes the culture.
            	*_PUBLIC_KEY_TOKEN - Includes the public key token.
            	*_PUBLIC_KEY - Includes the public key.
            	*_CUSTOM - Includes the custom part of the assembly name.
            	*_PROCESSORARCHITECTURE - Includes the processor architecture.
            	*_LANGUAGEID - Includes the language ID.
            </param>
            <returns></returns>
            <remarks>http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpcondefaultmarshalingforstrings.asp</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.BindToObject(System.Guid@,System.Object,System.Object,System.String,System.Int64,System.IntPtr,System.UInt32,System.IntPtr@)">
            <summary>
            Undocumented
            </summary>
            <param name="refIID"></param>
            <param name="pUnkSink"></param>
            <param name="pUnkContext"></param>
            <param name="szCodeBase"></param>
            <param name="llFlags"></param>
            <param name="pvReserved"></param>
            <param name="cbReserved"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.GetName(System.UInt32@,System.Text.StringBuilder)">
            <summary>
            The IAssemblyName::GetName method returns the name part of the assembly name.
            </summary>
            <param name="lpcwBuffer">Size of the pwszName buffer (on input). Length of the name (on return).</param>
            <param name="pwzName">Pointer to the buffer that is to contain the name part of the assembly name.</param>
            <returns></returns>
            <remarks>http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpcondefaultmarshalingforstrings.asp</remarks>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.GetVersion(System.UInt32@,System.UInt32@)">
            <summary>
            The IAssemblyName::GetVersion method returns the version part of the assembly name.
            </summary>
            <param name="pdwVersionHi">Pointer to a DWORD that contains the upper 32 bits of the version number.</param>
            <param name="pdwVersionLow">Pointer to a DWORD that contain the lower 32 bits of the version number.</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.IsEqual(UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName,UWay.Skynet.Cloud.Reflection.Internal.ASM_CMP_FLAGS)">
            <summary>
            The IAssemblyName::IsEqual method compares the assembly name to another assembly names.
            </summary>
            <param name="pName">The assembly name to compare to.</param>
            <param name="dwCmpFlags">Indicates which part of the assembly name to use in the comparison.
            Values are one or more of the bits defined in the ASM_CMP_FLAGS enumeration.</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName.Clone(UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName@)">
            <summary>
            The IAssemblyName::Clone method creates a copy of an assembly name.
            </summary>
            <param name="pName"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyEnum">
            <summary>
            The IAssemblyEnum interface enumerates the assemblies in the GAC.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyEnum.GetNextAssembly(System.IntPtr,UWay.Skynet.Cloud.Reflection.Internal.IAssemblyName@,System.UInt32)">
            <summary>
            The IAssemblyEnum::GetNextAssembly method enumerates the assemblies in the GAC.
            </summary>
            <param name="pvReserved">Must be null.</param>
            <param name="ppName">Pointer to a memory location that is to receive the interface pointer to the assembly
            name of the next assembly that is enumerated.</param>
            <param name="dwFlags">Must be zero.</param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyEnum.Reset">
            <summary>
            Undocumented. Best guess: reset the enumeration to the first assembly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyEnum.Clone(UWay.Skynet.Cloud.Reflection.Internal.IAssemblyEnum@)">
            <summary>
            Undocumented. Create a copy of the assembly enum that is independently enumerable.
            </summary>
            <param name="ppEnum"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.IInstallReferenceItem">
            <summary>
            The IInstallReferenceItem interface represents a reference that has been set on an assembly in the GAC.
            Instances of IInstallReferenceIteam are returned by the IInstallReferenceEnum interface.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IInstallReferenceItem.GetReference(UWay.Skynet.Cloud.Reflection.Internal.FUSION_INSTALL_REFERENCE[]@,System.UInt32,System.IntPtr)">
            <summary>
            The IInstallReferenceItem::GetReference method returns a FUSION_INSTALL_REFERENCE structure.
            </summary>
            <param name="ppRefData">A pointer to a FUSION_INSTALL_REFERENCE structure. The memory is allocated by the GetReference
            method and is freed when IInstallReferenceItem is released. Callers must not hold a reference to this buffer after the
            IInstallReferenceItem object is released.</param>
            <param name="dwFlags">Must be zero.</param>
            <param name="pvReserved">Must be null.</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.IInstallReferenceEnum">
            <summary>
            The IInstallReferenceEnum interface enumerates all references that are set on an assembly in the GAC.
            NOTE: References that belong to the assembly are locked for changes while those references are being enumerated.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IInstallReferenceEnum.GetNextInstallReferenceItem(UWay.Skynet.Cloud.Reflection.Internal.IInstallReferenceItem@,System.UInt32,System.IntPtr)">
            <summary>
            IInstallReferenceEnum::GetNextInstallReferenceItem returns the next reference information for an assembly.
            </summary>
            <param name="ppRefItem">Pointer to a memory location that receives the IInstallReferenceItem pointer.</param>
            <param name="dwFlags">Must be zero.</param>
            <param name="pvReserved">Must be null.</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCacheItem">
            <summary>
            Undocumented. Probably only for internal use.
            <see cref="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCache.CreateAssemblyCacheItem(System.UInt32,System.IntPtr,UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCacheItem@,System.String)"/>
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCacheItem.CreateStream(System.UInt32,System.String,System.UInt32,System.UInt32,System.Runtime.InteropServices.ComTypes.IStream@,System.Int64@)">
            <summary>
            Undocumented.
            </summary>
            <param name="dwFlags"></param>
            <param name="pszStreamName"></param>
            <param name="dwFormat"></param>
            <param name="dwFormatFlags"></param>
            <param name="ppIStream"></param>
            <param name="puliMaxSize"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCacheItem.Commit(System.UInt32,System.Int64@)">
            <summary>
            Undocumented.
            </summary>
            <param name="dwFlags"></param>
            <param name="pulDisposition"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Internal.IAssemblyCacheItem.AbortItem">
            <summary>
            Undocumented.
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.AppDomainAssemblyResolver">
            <summary>
            应用程序域Assembly解析器
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.AppDomainAssemblyResolver.Resolve(System.Reflection.AssemblyName)">
            <summary>
            解析Assembly
            </summary>
            <param name="aname"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.AssemblysAssemblyResolver">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.AssemblysAssemblyResolver.Assemblys">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.AssemblysAssemblyResolver.IncludeVersion">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.AssemblysAssemblyResolver.Resolve(System.Reflection.AssemblyName)">
            <summary>
            
            </summary>
            <param name="aname"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.GacAssemblyResolver">
            <summary>
            Gac Assembly解析器
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.GacAssemblyResolver.Resolve(System.Reflection.AssemblyName)">
            <summary>
            解析Assembly
            </summary>
            <param name="anme"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.AppBaseAssemblyResolver">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.AppBaseAssemblyResolver.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.AppBaseAssemblyResolver.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="includeChildDirectory"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver">
            <summary>
            文件目录Assembly解析器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver.FileDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver.Filter">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver.IncludeChildDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver.IncludeVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver.OnAssemblyRef">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver.#ctor(System.String,System.Boolean)">
            <summary>
            创建文件目录解析器
            </summary>
            <param name="path">目录路径</param>
            <param name="includeChildDirectory">是否包含子目录</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            创建文件目录解析器
            </summary>
            <param name="path">目录路径</param>
            <param name="filter">文件过滤器</param>
            <param name="includeChildDirectory">是否包含子目录</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.FileDirectoryAssemblyResolver.Resolve(System.Reflection.AssemblyName)">
            <summary>
            解析Assembly
            </summary>
            <param name="aname"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.CounstructorExtensions">
            <summary>
            构造函数扩展类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.CounstructorExtensions.FastInvoke(System.Reflection.ConstructorInfo,System.Object[])">
            <summary>
            快速构造函数方法调用
            </summary>
            <param name="constructor">构造函数</param>
            <param name="args">参数</param>
            <returns>返回创建的对象</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.CustomAttributeProviderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.CustomAttributeProviderExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
            得到成员元数据
            </summary>
            <typeparam name="T">元数据类型</typeparam>
            <param name="member">成员</param>
            <param name="inherit">是否集成</param>
            <returns>返回元数据</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.CustomAttributeProviderExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
            得到成员元数据数组
            </summary>
            <typeparam name="T">元数据类型</typeparam>
            <param name="member">成员</param>
            <param name="inherit">是否集成</param>
            <returns>返回成员元数据数组</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.CustomAttributeProviderExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
            判断成员是否包含特点的元数据
            </summary>
            <typeparam name="T">元数据类型</typeparam>
            <param name="member">成员</param>
            <param name="inherit">是否继承</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.DynamicAssemblyManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.DynamicAssemblyManager.assemblyName">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable">
            <summary>
            Represents an anonymous disposable.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable._dispose">
            <summary>
            The dispose action.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable._disposed">
            <summary>
            A value indicating whether this <see cref="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable"/> was already disposed.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable.#ctor(System.Action{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable"/> class.
            </summary>
            <param name="dispose">The dispose action.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable.Dispose(System.Boolean)">
            <summary>
            Dispose this <see cref="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable"/>.
            </summary>
            <param name="disposing">A value indicating whether disposing is in progress.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock">
            <summary>
            Represents a read write lock.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock._lock">
            <summary>
            The reader writer lock.
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock._disposed">
            <summary>
            A value indicating whether this <see cref="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock"/> was already disposed.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock"/> class.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock.Dispose(System.Boolean)">
            <summary>
            Dispose this <see cref="T:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.AnonymousDisposable"/>.
            </summary>
            <param name="disposing">A value indicating whether disposing is in progress.</param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock.UpgradeableRead">
            <summary>
            Tries to enter the lock in upgradeable mode.
            </summary>
            <returns>A disposable to exit the lock from upgradeable mode.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock.Read">
            <summary>
            Tries to enter the lock in read mode.
            </summary>
            <returns>A disposable to exit the lock from read mode.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock.Write">
            <summary>
            Tries to enter the lock in write mode.
            </summary>
            <returns>A disposable to exit the lock from write mode.</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Dynamic.Internal.Caching.ReadWriteLock.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.EmitHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.CreateGeneratorForPublicConstructor(System.Reflection.Emit.TypeBuilder,System.Type[])">
            <summary>
            
            </summary>
            <param name="typeBuilder"></param>
            <param name="ctrArgumentTypes"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.LoadInt(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>
            
            </summary>
            <param name="il"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.LoadArgument(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>
            
            </summary>
            <param name="il"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.LoadEnumerable(System.Reflection.Emit.ILGenerator,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="ilGenerator"></param>
            <param name="enumerable"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.GetStelemOpCode(System.TypeCode)">
            <summary>
            
            </summary>
            <param name="typeCode"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.GetConvOpCode(System.TypeCode)">
            <summary>
            
            </summary>
            <param name="typeCode"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.Call(System.Reflection.Emit.ILGenerator,System.Reflection.MethodInfo)">
            <summary>
            
            </summary>
            <param name="il"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.Call(System.Reflection.Emit.ILGenerator,System.Reflection.ConstructorInfo)">
            <summary>
            
            </summary>
            <param name="il"></param>
            <param name="ctor"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.EmitHelper.Return(System.Reflection.Emit.ILGenerator)">
            <summary>
            
            </summary>
            <param name="il"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Gac">
            <summary>
            Gac 工具类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Gac.GetAssemblyNames">
            <summary>
            得到Gac中所有的AssemblyName
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Gac.IsSystemAssembly(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="asm"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.Gac.IsSystemAssemblyOfType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.GetterExtensions">
            <summary>
            访问器扩展类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.GetterExtensions.Get(System.Reflection.MemberInfo,System.Object)">
            <summary>
            快速调用访问器方法
            </summary>
            <param name="member">成员访问器</param>
            <param name="target">目标对象</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Func">
            <summary>
            函数委托
            </summary>
            <param name="target">目标对象</param>
            <param name="arguments">函数参数</param>
            <returns>函数返回值</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Proc">
            <summary>
            过程委托
            </summary>
            <param name="target">目标对象</param>
            <param name="arguments">过程参数</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Getter">
            <summary>
            访问器委托
            </summary>
            <param name="target">目标对象</param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Setter">
            <summary>
            设置器委托
            </summary>
            <param name="target">目标对象</param>
            <param name="value">设置器参数</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.ConstructorHandler">
            <summary>
            构造函数委托
            </summary>
            <param name="arguments">构造函数参数列表</param>
            <returns>返回创建的对象</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.DefaultConstructorHandler">
            <summary>
            缺省构造函数委托
            </summary>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.DynamicMethodFactory">
            <summary>
            动态方法工厂
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DynamicMethodFactory.GetProc(System.Reflection.MethodInfo)">
            <summary>
            得到过程委托
            </summary>
            <param name="method">方法对象</param>
            <returns>返回过程委托</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DynamicMethodFactory.GetFunc(System.Reflection.MethodInfo)">
            <summary>
            得到函数委托
            </summary>
            <param name="method">方法对象</param>
            <returns>返回函数委托</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DynamicMethodFactory.GetCreator(System.Reflection.ConstructorInfo)">
            <summary>
            得到构造函数委托
            </summary>
            <param name="constructor">构造函数</param>
            <returns>返回构造函数委托</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DynamicMethodFactory.GetDefaultCreator(System.Type)">
            <summary>
            得到缺省构造函数委托
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DynamicMethodFactory.GetGetter(System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.DynamicMethodFactory.GetSetter(System.Reflection.MemberInfo)">
            <summary>
            得到设置器委托
            </summary>
            <param name="member">成员</param>
            <returns>返回设置器委托</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.MemberModel">
            <summary>
            成员元数据模型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.MemberModel.Type">
            <summary>
            成员类型
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.MemberModel.Member">
            <summary>
            成员
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.MemberModel.SetMember">
            <summary>
            成员的设置器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.MemberModel.GetMember">
            <summary>
            成员的读取器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.MemberModel.Name">
            <summary>
            成员名称
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.MemberModel.GetValue(System.Object)">
            <summary>
            得到成员的值
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.MemberModel.SetValue(System.Object,System.Object)">
            <summary>
            设置成员的值
            </summary>
            <param name="instance"></param>
            <param name="value"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.MemberFlags">
            <summary>
            成员的绑定标识。
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.MemberFlags.AnyFlags">
            <summary>
            所有实例成员和静态成员（区分大小写）。
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.MemberFlags.InstanceFlags">
            <summary>
            所有实例成员（区分大小写）。
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.MemberFlags.InstanceGetPropertyFlags">
            <summary>
            所有可获取的实例属性（区分大小写）。
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.MemberFlags.InstanceSetPropertyFlags">
            <summary>
            所有可设置的实例属性（区分大小写）。
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.MemberFlags.StaticFlags">
            <summary>
            所有静态成员（区分大小写）。
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.MemberFlags.StaticGetPropertyFlags">
            <summary>
            所有可获取的静态属性（区分大小写）。
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.MemberFlags.StaticSetPropertyFlags">
            <summary>
            所有可设置的静态属性（区分大小写）。
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.TypeMemberFactory">
            <summary>
            类型成员工厂
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeMemberFactory.GetGetMembers(System.Type)">
            <summary>
            得到指定类型具有GetValue的成员列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeMemberFactory.GetGetMembers(System.Type,System.Reflection.BindingFlags)">
            <summary>
            得到指定类型具有GetValue的成员列表
            </summary>
            <param name="type"></param>
            <param name="bindingFlags"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeMemberFactory.GetSetMembers(System.Type)">
            <summary>
            得到指定类型具有SetValue的成员列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeMemberFactory.GetSetMembers(System.Type,System.Reflection.BindingFlags)">
            <summary>
            得到指定类型具有SetValue的成员列表
            </summary>
            <param name="type"></param>
            <param name="bindingFlags"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.IPropertyManager">
            <summary>
            属性管理器接口
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.IPropertyManager.Properties">
            <summary>
            得到属性集
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.IPropertyManager.Load">
            <summary>
            加载属性集
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.IPropertyManager.Save">
            <summary>
            保存属性集
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.PropertyManager">
            <summary>
            属性管理器
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.PropertyManager.Properties">
            <summary>
            得到属性集
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.PropertyManager.#ctor">
            <summary>
            初始化属性集
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.PropertyManager.#ctor(System.String)">
            <summary>
            初始化属性集
            </summary>
            <param name="propFile">属性文件</param>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.PropertyManager.Instance">
            <summary>
            得到属性管理器单利对象
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Reflection.PropertyManager.Items">
            <summary>
            得到属性管理器的属性集
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.PropertyManager.Get``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.PropertyManager.Get``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.PropertyManager.Load">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.PropertyManager.Save">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.FuncExtensions">
            <summary>
            函数扩展类
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.FuncExtensions.FastFuncInvoke(System.Reflection.MethodInfo,System.Object,System.Object[])">
            <summary>
            快速函数调用
            </summary>
            <param name="method">方法</param>
            <param name="target">目标对象</param>
            <param name="args">参数列表</param>
            <returns>返回方法调用结果</returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.ReflectionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.Assembly(System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.GetAllProperties(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.GetInheriteDeep(System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="parentType"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.GetParameterTypes(System.Reflection.ParameterInfo[])">
            <summary>
            
            </summary>
            <param name="ps"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.GetParameterTypes(System.Reflection.MethodBase)">
            <summary>
            
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.FindEligibleConstructor(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="impType"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.FindEligibleConstructor(System.Type,System.Object[])">
            <summary>
            
            </summary>
            <param name="impType"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.FindMember(System.Linq.Expressions.LambdaExpression)">
            <summary>
            
            </summary>
            <param name="lambdaExpression"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.GetMemberType(System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.IsOpenGenericType(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.IsCloseGenericType(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.HasOpenGenericParameters(System.Reflection.MethodBase)">
            <summary>
            
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.GetNamedGenericParameter(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="genericParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.MakeCloseGenericType(System.Type,System.Type[])">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="genericArgTypes"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.Proc(System.Object,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="procName"></param>
            <param name="args"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.Func(System.Object,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="funcName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.Func``1(System.Object,System.String,System.Object[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="funcName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.GetProperty``1(System.Object,System.String,System.Object[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.GetProperty(System.Object,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.ReflectionService.SetProperty(System.Object,System.String,System.Object,System.Object[])">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <param name="index"></param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.SetterExtensions">
            <summary>
            设置器扩展
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.SetterExtensions.Set(System.Reflection.MemberInfo,System.Object,System.Object)">
            <summary>
            快速设置成员内容
            </summary>
            <param name="member">成员</param>
            <param name="target">目标对象</param>
            <param name="value">成员值</param>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.Types">
            <summary>
            常用类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Object">
            <summary>
            Object 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Type">
            <summary>
            Type 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.String">
            <summary>
            Stirng 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Char">
            <summary>
            Char 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Boolean">
            <summary>
            Boolean 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Byte">
            <summary>
            Byte 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.ByteArray">
            <summary>
            Byte 数组类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.SByte">
            <summary>
            SByte 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Int16">
            <summary>
            Int16 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.UInt16">
            <summary>
            UInt16 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Int32">
            <summary>
            Int32 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.UInt32">
            <summary>
            UInt32 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Int64">
            <summary>
            Int64 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.UInt64">
            <summary>
            UInt64 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Double">
            <summary>
            Double 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Single">
            <summary>
            Single 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Decimal">
            <summary>
            Decimal 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Guid">
            <summary>
            Guid 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.DateTime">
            <summary>
            DateTime 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.TimeSpan">
            <summary>
            TimeSpan 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Nullable">
            <summary>
            Nullable 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.ValueType">
            <summary>
            ValueType 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Void">
            <summary>
            void 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.DBNull">
            <summary>
            DBNull 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.Delegate">
            <summary>
            Delegate 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.ByteEnumerable">
            <summary>
            ByteEnumerable 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.IEnumerableofT">
            <summary>
            IEnumerable 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.IEnumerable">
            <summary>
            IEnumerable 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.IListSource">
            <summary>
            IListSource 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.IDictionary">
            <summary>
            IDictionary 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.IDictionaryOfT">
            <summary>
            IDictionary 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.DictionaryOfT">
            <summary>
            Dictionary 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.StringDictionary">
            <summary>
            StringDictionary 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.NameValueCollection">
            <summary>
            NameValueCollection 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.IDataReader">
            <summary>
            IDataReader 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.DataTable">
            <summary>
            DataTable 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.DataRow">
            <summary>
            DataRow 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.IDictionaryOfStringAndObject">
            <summary>
            IDictionary 类型
            </summary>
        </member>
        <member name="F:UWay.Skynet.Cloud.Reflection.Types.IDictionaryOfStringAndString">
            <summary>
            IDictionary 类型
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Reflection.TypeHelper">
            <summary>
            类型助手
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsNullable(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.GetDefault(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsReadOnly(System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.GetElementType(System.Type)">
            <summary>
            得到集合元素类型
            </summary>
            <param name="enumerableType">集合类型</param>
            <returns>返回集合元素类型</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.GetEnumType(System.Type)">
            <summary>
            得到枚举类型
            </summary>
            <param name="enumType">枚举类型或Nullable枚举类型</param>
            <returns>返回枚举类型</returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.CanConvertToEnum(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.GetElementType(System.Type,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="enumerableType"></param>
            <param name="enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsGuidType(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsEnumType(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsFlagsEnum(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsGenericDictionaryType(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsIDictionaryType(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsDictionaryType(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.GetGenericDictionaryType(System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Reflection.TypeHelper.IsCollectionTypeExcludeStringAndDictionaryType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.Request.DataSourceRequest">
            <summary>
            数据请求包
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Request.DataSourceRequest.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Request.DataSourceRequest.Page">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Request.DataSourceRequest.PageSize">
            <summary>
            每页数据
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Request.DataSourceRequest.Sorts">
            <summary>
            分页
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Request.DataSourceRequest.Filters">
            <summary>
            过滤
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Request.DataSourceRequest.Groups">
            <summary>
            分组
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.Request.DataSourceRequest.Aggregates">
            <summary>
            汇总
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.SkynetCloudEnvironment.ApplicationPhysicalPath">
            <summary>
            得到当前程序的物理路径
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.StringFormatter.Register(UWay.Skynet.Cloud.ITagFormatProvider)">
            <summary>
            
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.StringFormatter.Format(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="fmt"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.ITagFormatProvider">
            <summary>
            标签格式化提供者
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.ITagFormatProvider.SupportColon">
            <summary>
            支持括号
            </summary>
        </member>
        <member name="P:UWay.Skynet.Cloud.ITagFormatProvider.Tag">
            <summary>
            Tag标签
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.ITagFormatProvider.Format(System.String,System.String[])">
            <summary>
            格式化
            </summary>
            <param name="str"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:UWay.Skynet.Cloud.PropertyFormatProvider">
            <summary>
            ${property:PropertyName}
            ${property:PropertyName??DefaultValue}
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Threading.Local">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.Local.Get(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.Local.Set(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.Local.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.Local.ContainsKey(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.Local.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Threading.ReadWriteLockSlimExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.ReadWriteLockSlimExtensions.Readonly(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            
            </summary>
            <param name="sem"></param>
            <param name="a"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.ReadWriteLockSlimExtensions.Readonly``1(System.Threading.ReaderWriterLockSlim,System.Func{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sem"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.ReadWriteLockSlimExtensions.Read(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            
            </summary>
            <param name="sem"></param>
            <param name="a"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Threading.ReadWriteLockSlimExtensions.Write(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            
            </summary>
            <param name="sem"></param>
            <param name="a"></param>
        </member>
        <member name="M:UWay.Skynet.Cloud.Trigger.IJobExecutor.StartJob">
            <summary>
            开始任务
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Trigger.IJobExecutor.StopJob">
            <summary>
             结束任务
            </summary>
        </member>
        <member name="T:UWay.Skynet.Cloud.Trigger.ListJobExcutor`1">
            <summary>
            通用列表循环任务执行者基类
            </summary>
            <typeparam name="IType"></typeparam>
        </member>
        <member name="P:UWay.Skynet.Cloud.Trigger.ListJobExcutor`1.IsRuning">
            <summary>
             运行状态
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Trigger.ListJobExcutor`1.StartJob">
            <summary>
              开始任务
            </summary>
        </member>
        <member name="M:UWay.Skynet.Cloud.Trigger.ListJobExcutor`1.GetExcuteSource">
            <summary>
              获取list数据源
            </summary>
            <returns></returns>
        </member>
        <member name="M:UWay.Skynet.Cloud.Trigger.ListJobExcutor`1.ExcuteItem(`0,System.Int32)">
            <summary>
             个体任务执行
            </summary>
            <param name="item">单个实体</param>
            <param name="index">在数据源中的索引</param>
        </member>
    </members>
</doc>
